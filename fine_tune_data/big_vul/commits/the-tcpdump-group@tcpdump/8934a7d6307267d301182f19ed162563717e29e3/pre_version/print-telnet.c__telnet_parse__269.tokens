static int //<S2SV> telnet_parse ( netdissect_options * ndo , const u_char * sp , u_int length , int print ) //<S2SV> { //<S2SV> int i , x ; //<S2SV> u_int c ; //<S2SV> const u_char * osp , * p ; //<S2SV> # define FETCH ( c , sp , length ) do { if ( length < 1 ) goto pktend ; ND_TCHECK ( * sp ) ; c = * sp ++ ; length -- ; } while ( 0 ) //<S2SV> osp = sp ; //<S2SV> FETCH ( c , sp , length ) ; //<S2SV> if ( c != IAC ) //<S2SV> goto pktend ; //<S2SV> FETCH ( c , sp , length ) ; //<S2SV> if ( c == IAC ) { //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "IAC<S2SV_blank>IAC" ) ) ; //<S2SV> goto done ; //<S2SV> } //<S2SV> i = c - TELCMD_FIRST ; //<S2SV> if ( i < 0 || i > IAC - TELCMD_FIRST ) //<S2SV> goto pktend ; //<S2SV> switch ( c ) { //<S2SV> case DONT : //<S2SV> case DO : //<S2SV> case WONT : //<S2SV> case WILL : //<S2SV> case SB : //<S2SV> FETCH ( x , sp , length ) ; //<S2SV> if ( x >= 0 && x < NTELOPTS ) { //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "%s<S2SV_blank>%s" , telcmds [ i ] , telopts [ x ] ) ) ; //<S2SV> } else { //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "%s<S2SV_blank>%#x" , telcmds [ i ] , x ) ) ; //<S2SV> } //<S2SV> if ( c != SB ) //<S2SV> break ; //<S2SV> p = sp ; //<S2SV> while ( length > ( u_int ) ( p + 1 - sp ) ) { //<S2SV> ND_TCHECK2 ( * p , 2 ) ; //<S2SV> if ( p [ 0 ] == IAC && p [ 1 ] == SE ) //<S2SV> break ; //<S2SV> p ++ ; //<S2SV> } //<S2SV> if ( * p != IAC ) //<S2SV> goto pktend ; //<S2SV> switch ( x ) { //<S2SV> case TELOPT_AUTHENTICATION : //<S2SV> if ( p <= sp ) //<S2SV> break ; //<S2SV> FETCH ( c , sp , length ) ; //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , STR_OR_ID ( c , authcmd ) ) ) ; //<S2SV> if ( p <= sp ) //<S2SV> break ; //<S2SV> FETCH ( c , sp , length ) ; //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , STR_OR_ID ( c , authtype ) ) ) ; //<S2SV> break ; //<S2SV> case TELOPT_ENCRYPT : //<S2SV> if ( p <= sp ) //<S2SV> break ; //<S2SV> FETCH ( c , sp , length ) ; //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , STR_OR_ID ( c , enccmd ) ) ) ; //<S2SV> if ( p <= sp ) //<S2SV> break ; //<S2SV> FETCH ( c , sp , length ) ; //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , STR_OR_ID ( c , enctype ) ) ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> if ( p <= sp ) //<S2SV> break ; //<S2SV> FETCH ( c , sp , length ) ; //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , STR_OR_ID ( c , cmds ) ) ) ; //<S2SV> break ; //<S2SV> } //<S2SV> while ( p > sp ) { //<S2SV> FETCH ( x , sp , length ) ; //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%#x" , x ) ) ; //<S2SV> } //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>SE" ) ) ; //<S2SV> sp += 2 ; //<S2SV> break ; //<S2SV> default : //<S2SV> if ( print ) //<S2SV> ND_PRINT ( ( ndo , "%s" , telcmds [ i ] ) ) ; //<S2SV> goto done ; //<S2SV> } //<S2SV> done : //<S2SV> return sp - osp ; //<S2SV> trunc : //<S2SV> ND_PRINT ( ( ndo , "%s" , tstr ) ) ; //<S2SV> pktend : //<S2SV> return - 1 ; //<S2SV> # undef FETCH //<S2SV> } //<S2SV> 