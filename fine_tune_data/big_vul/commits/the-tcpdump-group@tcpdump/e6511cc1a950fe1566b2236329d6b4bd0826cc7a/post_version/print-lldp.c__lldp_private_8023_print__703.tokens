static int //<S2SV> lldp_private_8023_print ( netdissect_options * ndo , //<S2SV> const u_char * tptr , u_int tlv_len ) //<S2SV> { //<S2SV> int subtype , hexdump = FALSE ; //<S2SV> if ( tlv_len < 4 ) { //<S2SV> return hexdump ; //<S2SV> } //<S2SV> subtype = * ( tptr + 3 ) ; //<S2SV> ND_PRINT ( ( ndo , "\\n\\t<S2SV_blank><S2SV_blank>%s<S2SV_blank>Subtype<S2SV_blank>(%u)" , //<S2SV> tok2str ( lldp_8023_subtype_values , "unknown" , subtype ) , //<S2SV> subtype ) ) ; //<S2SV> switch ( subtype ) { //<S2SV> case LLDP_PRIVATE_8023_SUBTYPE_MACPHY : //<S2SV> if ( tlv_len < 9 ) { //<S2SV> return hexdump ; //<S2SV> } //<S2SV> ND_PRINT ( ( ndo , "\\n\\t<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>autonegotiation<S2SV_blank>[%s]<S2SV_blank>(0x%02x)" , //<S2SV> bittok2str ( lldp_8023_autonegotiation_values , "none" , * ( tptr + 4 ) ) , //<S2SV> * ( tptr + 4 ) ) ) ; //<S2SV> ND_PRINT ( ( ndo , "\\n\\t<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>PMD<S2SV_blank>autoneg<S2SV_blank>capability<S2SV_blank>[%s]<S2SV_blank>(0x%04x)" , //<S2SV> bittok2str ( lldp_pmd_capability_values , "unknown" , EXTRACT_16BITS ( tptr + 5 ) ) , //<S2SV> EXTRACT_16BITS ( tptr + 5 ) ) ) ; //<S2SV> ND_PRINT ( ( ndo , "\\n\\t<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>MAU<S2SV_blank>type<S2SV_blank>%s<S2SV_blank>(0x%04x)" , //<S2SV> tok2str ( lldp_mau_types_values , "unknown" , EXTRACT_16BITS ( tptr + 7 ) ) , //<S2SV> EXTRACT_16BITS ( tptr + 7 ) ) ) ; //<S2SV> break ; //<S2SV> case LLDP_PRIVATE_8023_SUBTYPE_MDIPOWER : //<S2SV> if ( tlv_len < 7 ) { //<S2SV> return hexdump ; //<S2SV> } //<S2SV> ND_PRINT ( ( ndo , "\\n\\t<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>MDI<S2SV_blank>power<S2SV_blank>support<S2SV_blank>[%s],<S2SV_blank>power<S2SV_blank>pair<S2SV_blank>%s,<S2SV_blank>power<S2SV_blank>class<S2SV_blank>%s" , //<S2SV> bittok2str ( lldp_mdi_values , "none" , * ( tptr + 4 ) ) , //<S2SV> tok2str ( lldp_mdi_power_pairs_values , "unknown" , * ( tptr + 5 ) ) , //<S2SV> tok2str ( lldp_mdi_power_class_values , "unknown" , * ( tptr + 6 ) ) ) ) ; //<S2SV> break ; //<S2SV> case LLDP_PRIVATE_8023_SUBTYPE_LINKAGGR : //<S2SV> if ( tlv_len < 9 ) { //<S2SV> return hexdump ; //<S2SV> } //<S2SV> ND_PRINT ( ( ndo , "\\n\\t<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>aggregation<S2SV_blank>status<S2SV_blank>[%s],<S2SV_blank>aggregation<S2SV_blank>port<S2SV_blank>ID<S2SV_blank>%u" , //<S2SV> bittok2str ( lldp_aggregation_values , "none" , * ( tptr + 4 ) ) , //<S2SV> EXTRACT_32BITS ( tptr + 5 ) ) ) ; //<S2SV> break ; //<S2SV> case LLDP_PRIVATE_8023_SUBTYPE_MTU : //<S2SV> if ( tlv_len < 6 ) { //<S2SV> return hexdump ; //<S2SV> } //<S2SV> ND_PRINT ( ( ndo , "\\n\\t<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>MTU<S2SV_blank>size<S2SV_blank>%u" , EXTRACT_16BITS ( tptr + 4 ) ) ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> hexdump = TRUE ; //<S2SV> break ; //<S2SV> } //<S2SV> return hexdump ; //<S2SV> } //<S2SV> 