static int //<S2SV> mp_capable_print ( netdissect_options * ndo , //<S2SV> const u_char * opt , u_int opt_len , u_char flags ) //<S2SV> { //<S2SV> const struct mp_capable * mpc = ( const struct mp_capable * ) opt ; //<S2SV> if ( ! ( opt_len == 12 && ( flags & TH_SYN ) ) && //<S2SV> ! ( opt_len == 20 && ( flags & ( TH_SYN | TH_ACK ) ) == TH_ACK ) ) //<S2SV> return 0 ; //<S2SV> if ( MP_CAPABLE_OPT_VERSION ( mpc -> sub_ver ) != 0 ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>Unknown<S2SV_blank>Version<S2SV_blank>(%d)" , MP_CAPABLE_OPT_VERSION ( mpc -> sub_ver ) ) ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> if ( mpc -> flags & MP_CAPABLE_C ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>csum" ) ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>{0x%" PRIx64 , EXTRACT_64BITS ( mpc -> sender_key ) ) ) ; //<S2SV> if ( opt_len == 20 ) //<S2SV> ND_PRINT ( ( ndo , ",0x%" PRIx64 , EXTRACT_64BITS ( mpc -> receiver_key ) ) ) ; //<S2SV> ND_PRINT ( ( ndo , "}" ) ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> 