void //<S2SV> isakmp_rfc3948_print ( netdissect_options * ndo , //<S2SV> const u_char * bp , u_int length , //<S2SV> const u_char * bp2 ) //<S2SV> { //<S2SV> ND_TCHECK ( bp [ 0 ] ) ; //<S2SV> if ( length == 1 && bp [ 0 ] == 0xff ) { //<S2SV> ND_PRINT ( ( ndo , "isakmp-nat-keep-alive" ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> if ( length < 4 ) { //<S2SV> goto trunc ; //<S2SV> } //<S2SV> ND_TCHECK ( bp [ 3 ] ) ; //<S2SV> if ( bp [ 0 ] == 0 && bp [ 1 ] == 0 && bp [ 2 ] == 0 && bp [ 3 ] == 0 ) { //<S2SV> ND_PRINT ( ( ndo , "NONESP-encap:<S2SV_blank>" ) ) ; //<S2SV> isakmp_print ( ndo , bp + 4 , length - 4 , bp2 ) ; //<S2SV> return ; //<S2SV> } //<S2SV> { //<S2SV> int nh , enh , padlen ; //<S2SV> int advance ; //<S2SV> ND_PRINT ( ( ndo , "UDP-encap:<S2SV_blank>" ) ) ; //<S2SV> advance = esp_print ( ndo , bp , length , bp2 , & enh , & padlen ) ; //<S2SV> if ( advance <= 0 ) //<S2SV> return ; //<S2SV> bp += advance ; //<S2SV> length -= advance + padlen ; //<S2SV> nh = enh & 0xff ; //<S2SV> ip_print_inner ( ndo , bp , length , nh , bp2 ) ; //<S2SV> return ; //<S2SV> } //<S2SV> trunc : //<S2SV> ND_PRINT ( ( ndo , "[|isakmp]" ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> 