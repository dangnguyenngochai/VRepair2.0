void //<S2SV> rpki_rtr_print ( netdissect_options * ndo , register const u_char * pptr , register u_int len ) //<S2SV> { //<S2SV> u_int tlen , pdu_type , pdu_len ; //<S2SV> const u_char * tptr ; //<S2SV> const rpki_rtr_pdu * pdu_header ; //<S2SV> tptr = pptr ; //<S2SV> tlen = len ; //<S2SV> if ( ! ndo -> ndo_vflag ) { //<S2SV> ND_PRINT ( ( ndo , ",<S2SV_blank>RPKI-RTR" ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> while ( tlen >= sizeof ( rpki_rtr_pdu ) ) { //<S2SV> ND_TCHECK2 ( * tptr , sizeof ( rpki_rtr_pdu ) ) ; //<S2SV> pdu_header = ( const rpki_rtr_pdu * ) tptr ; //<S2SV> pdu_type = pdu_header -> pdu_type ; //<S2SV> pdu_len = EXTRACT_32BITS ( pdu_header -> length ) ; //<S2SV> ND_TCHECK2 ( * tptr , pdu_len ) ; //<S2SV> if ( ! pdu_type || ! pdu_len ) { //<S2SV> break ; //<S2SV> } //<S2SV> if ( tlen < pdu_len ) { //<S2SV> goto trunc ; //<S2SV> } //<S2SV> if ( rpki_rtr_pdu_print ( ndo , tptr , 8 ) ) //<S2SV> goto trunc ; //<S2SV> tlen -= pdu_len ; //<S2SV> tptr += pdu_len ; //<S2SV> } //<S2SV> return ; //<S2SV> trunc : //<S2SV> ND_PRINT ( ( ndo , "\\n\\t%s" , tstr ) ) ; //<S2SV> } //<S2SV> 