void //<S2SV> nfsreq_print_noaddr ( netdissect_options * ndo , //<S2SV> register const u_char * bp , u_int length , //<S2SV> register const u_char * bp2 ) //<S2SV> { //<S2SV> register const struct sunrpc_msg * rp ; //<S2SV> register const uint32_t * dp ; //<S2SV> nfs_type type ; //<S2SV> int v3 ; //<S2SV> uint32_t proc ; //<S2SV> uint32_t access_flags ; //<S2SV> struct nfsv3_sattr sa3 ; //<S2SV> ND_PRINT ( ( ndo , "%d" , length ) ) ; //<S2SV> nfserr = 0 ; //<S2SV> rp = ( const struct sunrpc_msg * ) bp ; //<S2SV> if ( ! xid_map_enter ( ndo , rp , bp2 ) ) //<S2SV> goto trunc ; //<S2SV> v3 = ( EXTRACT_32BITS ( & rp -> rm_call . cb_vers ) == NFS_VER3 ) ; //<S2SV> proc = EXTRACT_32BITS ( & rp -> rm_call . cb_proc ) ; //<S2SV> if ( ! v3 && proc < NFS_NPROCS ) //<S2SV> proc = nfsv3_procid [ proc ] ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , tok2str ( nfsproc_str , "proc-%u" , proc ) ) ) ; //<S2SV> switch ( proc ) { //<S2SV> case NFSPROC_GETATTR : //<S2SV> case NFSPROC_SETATTR : //<S2SV> case NFSPROC_READLINK : //<S2SV> case NFSPROC_FSSTAT : //<S2SV> case NFSPROC_FSINFO : //<S2SV> case NFSPROC_PATHCONF : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> parsefh ( ndo , dp , v3 ) != NULL ) //<S2SV> return ; //<S2SV> break ; //<S2SV> case NFSPROC_LOOKUP : //<S2SV> case NFSPROC_CREATE : //<S2SV> case NFSPROC_MKDIR : //<S2SV> case NFSPROC_REMOVE : //<S2SV> case NFSPROC_RMDIR : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> parsefhn ( ndo , dp , v3 ) != NULL ) //<S2SV> return ; //<S2SV> break ; //<S2SV> case NFSPROC_ACCESS : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> ( dp = parsefh ( ndo , dp , v3 ) ) != NULL ) { //<S2SV> ND_TCHECK ( dp [ 0 ] ) ; //<S2SV> access_flags = EXTRACT_32BITS ( & dp [ 0 ] ) ; //<S2SV> if ( access_flags & ~ NFSV3ACCESS_FULL ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%04x" , access_flags ) ) ; //<S2SV> } else if ( ( access_flags & NFSV3ACCESS_FULL ) == NFSV3ACCESS_FULL ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>NFS_ACCESS_FULL" ) ) ; //<S2SV> } else { //<S2SV> char separator = '<S2SV_blank>' ; //<S2SV> if ( access_flags & NFSV3ACCESS_READ ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>NFS_ACCESS_READ" ) ) ; //<S2SV> separator = '|' ; //<S2SV> } //<S2SV> if ( access_flags & NFSV3ACCESS_LOOKUP ) { //<S2SV> ND_PRINT ( ( ndo , "%cNFS_ACCESS_LOOKUP" , separator ) ) ; //<S2SV> separator = '|' ; //<S2SV> } //<S2SV> if ( access_flags & NFSV3ACCESS_MODIFY ) { //<S2SV> ND_PRINT ( ( ndo , "%cNFS_ACCESS_MODIFY" , separator ) ) ; //<S2SV> separator = '|' ; //<S2SV> } //<S2SV> if ( access_flags & NFSV3ACCESS_EXTEND ) { //<S2SV> ND_PRINT ( ( ndo , "%cNFS_ACCESS_EXTEND" , separator ) ) ; //<S2SV> separator = '|' ; //<S2SV> } //<S2SV> if ( access_flags & NFSV3ACCESS_DELETE ) { //<S2SV> ND_PRINT ( ( ndo , "%cNFS_ACCESS_DELETE" , separator ) ) ; //<S2SV> separator = '|' ; //<S2SV> } //<S2SV> if ( access_flags & NFSV3ACCESS_EXECUTE ) //<S2SV> ND_PRINT ( ( ndo , "%cNFS_ACCESS_EXECUTE" , separator ) ) ; //<S2SV> } //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_READ : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> ( dp = parsefh ( ndo , dp , v3 ) ) != NULL ) { //<S2SV> if ( v3 ) { //<S2SV> ND_TCHECK ( dp [ 2 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u<S2SV_blank>bytes<S2SV_blank>@<S2SV_blank>%" PRIu64 , //<S2SV> EXTRACT_32BITS ( & dp [ 2 ] ) , //<S2SV> EXTRACT_64BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> } else { //<S2SV> ND_TCHECK ( dp [ 1 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u<S2SV_blank>bytes<S2SV_blank>@<S2SV_blank>%u" , //<S2SV> EXTRACT_32BITS ( & dp [ 1 ] ) , //<S2SV> EXTRACT_32BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> } //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_WRITE : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> ( dp = parsefh ( ndo , dp , v3 ) ) != NULL ) { //<S2SV> if ( v3 ) { //<S2SV> ND_TCHECK ( dp [ 2 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u<S2SV_blank>(%u)<S2SV_blank>bytes<S2SV_blank>@<S2SV_blank>%" PRIu64 , //<S2SV> EXTRACT_32BITS ( & dp [ 4 ] ) , //<S2SV> EXTRACT_32BITS ( & dp [ 2 ] ) , //<S2SV> EXTRACT_64BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> if ( ndo -> ndo_vflag ) { //<S2SV> dp += 3 ; //<S2SV> ND_TCHECK ( dp [ 0 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank><%s>" , //<S2SV> tok2str ( nfsv3_writemodes , //<S2SV> NULL , EXTRACT_32BITS ( dp ) ) ) ) ; //<S2SV> } //<S2SV> } else { //<S2SV> ND_TCHECK ( dp [ 3 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u<S2SV_blank>(%u)<S2SV_blank>bytes<S2SV_blank>@<S2SV_blank>%u<S2SV_blank>(%u)" , //<S2SV> EXTRACT_32BITS ( & dp [ 3 ] ) , //<S2SV> EXTRACT_32BITS ( & dp [ 2 ] ) , //<S2SV> EXTRACT_32BITS ( & dp [ 1 ] ) , //<S2SV> EXTRACT_32BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> } //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_SYMLINK : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> ( dp = parsefhn ( ndo , dp , v3 ) ) != NULL ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>->" ) ) ; //<S2SV> if ( v3 && ( dp = parse_sattr3 ( ndo , dp , & sa3 ) ) == NULL ) //<S2SV> break ; //<S2SV> if ( parsefn ( ndo , dp ) == NULL ) //<S2SV> break ; //<S2SV> if ( v3 && ndo -> ndo_vflag ) //<S2SV> print_sattr3 ( ndo , & sa3 , ndo -> ndo_vflag ) ; //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_MKNOD : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> ( dp = parsefhn ( ndo , dp , v3 ) ) != NULL ) { //<S2SV> ND_TCHECK ( * dp ) ; //<S2SV> type = ( nfs_type ) EXTRACT_32BITS ( dp ) ; //<S2SV> dp ++ ; //<S2SV> if ( ( dp = parse_sattr3 ( ndo , dp , & sa3 ) ) == NULL ) //<S2SV> break ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , tok2str ( type2str , "unk-ft<S2SV_blank>%d" , type ) ) ) ; //<S2SV> if ( ndo -> ndo_vflag && ( type == NFCHR || type == NFBLK ) ) { //<S2SV> ND_TCHECK ( dp [ 1 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u/%u" , //<S2SV> EXTRACT_32BITS ( & dp [ 0 ] ) , //<S2SV> EXTRACT_32BITS ( & dp [ 1 ] ) ) ) ; //<S2SV> dp += 2 ; //<S2SV> } //<S2SV> if ( ndo -> ndo_vflag ) //<S2SV> print_sattr3 ( ndo , & sa3 , ndo -> ndo_vflag ) ; //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_RENAME : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> ( dp = parsefhn ( ndo , dp , v3 ) ) != NULL ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>->" ) ) ; //<S2SV> if ( parsefhn ( ndo , dp , v3 ) != NULL ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_LINK : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> ( dp = parsefh ( ndo , dp , v3 ) ) != NULL ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>->" ) ) ; //<S2SV> if ( parsefhn ( ndo , dp , v3 ) != NULL ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_READDIR : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> ( dp = parsefh ( ndo , dp , v3 ) ) != NULL ) { //<S2SV> if ( v3 ) { //<S2SV> ND_TCHECK ( dp [ 4 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u<S2SV_blank>bytes<S2SV_blank>@<S2SV_blank>%" PRId64 , //<S2SV> EXTRACT_32BITS ( & dp [ 4 ] ) , //<S2SV> EXTRACT_64BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> if ( ndo -> ndo_vflag ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>verf<S2SV_blank>%08x%08x" , dp [ 2 ] , dp [ 3 ] ) ) ; //<S2SV> } else { //<S2SV> ND_TCHECK ( dp [ 1 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u<S2SV_blank>bytes<S2SV_blank>@<S2SV_blank>%d" , //<S2SV> EXTRACT_32BITS ( & dp [ 1 ] ) , //<S2SV> EXTRACT_32BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> } //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_READDIRPLUS : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> ( dp = parsefh ( ndo , dp , v3 ) ) != NULL ) { //<S2SV> ND_TCHECK ( dp [ 4 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u<S2SV_blank>bytes<S2SV_blank>@<S2SV_blank>%" PRId64 , //<S2SV> EXTRACT_32BITS ( & dp [ 4 ] ) , //<S2SV> EXTRACT_64BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> if ( ndo -> ndo_vflag ) { //<S2SV> ND_TCHECK ( dp [ 5 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>max<S2SV_blank>%u<S2SV_blank>verf<S2SV_blank>%08x%08x" , //<S2SV> EXTRACT_32BITS ( & dp [ 5 ] ) , dp [ 2 ] , dp [ 3 ] ) ) ; //<S2SV> } //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_COMMIT : //<S2SV> if ( ( dp = parsereq ( ndo , rp , length ) ) != NULL && //<S2SV> ( dp = parsefh ( ndo , dp , v3 ) ) != NULL ) { //<S2SV> ND_TCHECK ( dp [ 2 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u<S2SV_blank>bytes<S2SV_blank>@<S2SV_blank>%" PRIu64 , //<S2SV> EXTRACT_32BITS ( & dp [ 2 ] ) , //<S2SV> EXTRACT_64BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> default : //<S2SV> return ; //<S2SV> } //<S2SV> trunc : //<S2SV> if ( ! nfserr ) //<S2SV> ND_PRINT ( ( ndo , "%s" , tstr ) ) ; //<S2SV> } //<S2SV> 