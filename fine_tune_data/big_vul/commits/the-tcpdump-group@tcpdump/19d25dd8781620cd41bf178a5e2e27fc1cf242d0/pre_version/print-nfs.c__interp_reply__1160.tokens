static void //<S2SV> interp_reply ( netdissect_options * ndo , //<S2SV> const struct sunrpc_msg * rp , uint32_t proc , uint32_t vers , int length ) //<S2SV> { //<S2SV> register const uint32_t * dp ; //<S2SV> register int v3 ; //<S2SV> int er ; //<S2SV> v3 = ( vers == NFS_VER3 ) ; //<S2SV> if ( ! v3 && proc < NFS_NPROCS ) //<S2SV> proc = nfsv3_procid [ proc ] ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , tok2str ( nfsproc_str , "proc-%u" , proc ) ) ) ; //<S2SV> switch ( proc ) { //<S2SV> case NFSPROC_GETATTR : //<S2SV> dp = parserep ( ndo , rp , length ) ; //<S2SV> if ( dp != NULL && parseattrstat ( ndo , dp , ! ndo -> ndo_qflag , v3 ) != 0 ) //<S2SV> return ; //<S2SV> break ; //<S2SV> case NFSPROC_SETATTR : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> return ; //<S2SV> if ( v3 ) { //<S2SV> if ( parsewccres ( ndo , dp , ndo -> ndo_vflag ) ) //<S2SV> return ; //<S2SV> } else { //<S2SV> if ( parseattrstat ( ndo , dp , ! ndo -> ndo_qflag , 0 ) != 0 ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_LOOKUP : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( v3 ) { //<S2SV> if ( ! ( dp = parsestatus ( ndo , dp , & er ) ) ) //<S2SV> break ; //<S2SV> if ( er ) { //<S2SV> if ( ndo -> ndo_vflag > 1 ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>post<S2SV_blank>dattr:" ) ) ; //<S2SV> dp = parse_post_op_attr ( ndo , dp , ndo -> ndo_vflag ) ; //<S2SV> } //<S2SV> } else { //<S2SV> if ( ! ( dp = parsefh ( ndo , dp , v3 ) ) ) //<S2SV> break ; //<S2SV> if ( ( dp = parse_post_op_attr ( ndo , dp , ndo -> ndo_vflag ) ) && //<S2SV> ndo -> ndo_vflag > 1 ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>post<S2SV_blank>dattr:" ) ) ; //<S2SV> dp = parse_post_op_attr ( ndo , dp , ndo -> ndo_vflag ) ; //<S2SV> } //<S2SV> } //<S2SV> if ( dp ) //<S2SV> return ; //<S2SV> } else { //<S2SV> if ( parsediropres ( ndo , dp ) != 0 ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_ACCESS : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( ! ( dp = parsestatus ( ndo , dp , & er ) ) ) //<S2SV> break ; //<S2SV> if ( ndo -> ndo_vflag ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>attr:" ) ) ; //<S2SV> if ( ! ( dp = parse_post_op_attr ( ndo , dp , ndo -> ndo_vflag ) ) ) //<S2SV> break ; //<S2SV> if ( ! er ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>c<S2SV_blank>%04x" , EXTRACT_32BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> return ; //<S2SV> case NFSPROC_READLINK : //<S2SV> dp = parserep ( ndo , rp , length ) ; //<S2SV> if ( dp != NULL && parselinkres ( ndo , dp , v3 ) != 0 ) //<S2SV> return ; //<S2SV> break ; //<S2SV> case NFSPROC_READ : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( v3 ) { //<S2SV> if ( ! ( dp = parsestatus ( ndo , dp , & er ) ) ) //<S2SV> break ; //<S2SV> if ( ! ( dp = parse_post_op_attr ( ndo , dp , ndo -> ndo_vflag ) ) ) //<S2SV> break ; //<S2SV> if ( er ) //<S2SV> return ; //<S2SV> if ( ndo -> ndo_vflag ) { //<S2SV> ND_TCHECK ( dp [ 1 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u<S2SV_blank>bytes" , EXTRACT_32BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> if ( EXTRACT_32BITS ( & dp [ 1 ] ) ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>EOF" ) ) ; //<S2SV> } //<S2SV> return ; //<S2SV> } else { //<S2SV> if ( parseattrstat ( ndo , dp , ndo -> ndo_vflag , 0 ) != 0 ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_WRITE : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( v3 ) { //<S2SV> if ( ! ( dp = parsestatus ( ndo , dp , & er ) ) ) //<S2SV> break ; //<S2SV> if ( ! ( dp = parse_wcc_data ( ndo , dp , ndo -> ndo_vflag ) ) ) //<S2SV> break ; //<S2SV> if ( er ) //<S2SV> return ; //<S2SV> if ( ndo -> ndo_vflag ) { //<S2SV> ND_TCHECK ( dp [ 0 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%u<S2SV_blank>bytes" , EXTRACT_32BITS ( & dp [ 0 ] ) ) ) ; //<S2SV> if ( ndo -> ndo_vflag > 1 ) { //<S2SV> ND_TCHECK ( dp [ 1 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank><%s>" , //<S2SV> tok2str ( nfsv3_writemodes , //<S2SV> NULL , EXTRACT_32BITS ( & dp [ 1 ] ) ) ) ) ; //<S2SV> } //<S2SV> return ; //<S2SV> } //<S2SV> } else { //<S2SV> if ( parseattrstat ( ndo , dp , ndo -> ndo_vflag , v3 ) != 0 ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_CREATE : //<S2SV> case NFSPROC_MKDIR : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( v3 ) { //<S2SV> if ( parsecreateopres ( ndo , dp , ndo -> ndo_vflag ) != NULL ) //<S2SV> return ; //<S2SV> } else { //<S2SV> if ( parsediropres ( ndo , dp ) != 0 ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_SYMLINK : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( v3 ) { //<S2SV> if ( parsecreateopres ( ndo , dp , ndo -> ndo_vflag ) != NULL ) //<S2SV> return ; //<S2SV> } else { //<S2SV> if ( parsestatus ( ndo , dp , & er ) != NULL ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_MKNOD : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( parsecreateopres ( ndo , dp , ndo -> ndo_vflag ) != NULL ) //<S2SV> return ; //<S2SV> break ; //<S2SV> case NFSPROC_REMOVE : //<S2SV> case NFSPROC_RMDIR : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( v3 ) { //<S2SV> if ( parsewccres ( ndo , dp , ndo -> ndo_vflag ) ) //<S2SV> return ; //<S2SV> } else { //<S2SV> if ( parsestatus ( ndo , dp , & er ) != NULL ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_RENAME : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( v3 ) { //<S2SV> if ( ! ( dp = parsestatus ( ndo , dp , & er ) ) ) //<S2SV> break ; //<S2SV> if ( ndo -> ndo_vflag ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>from:" ) ) ; //<S2SV> if ( ! ( dp = parse_wcc_data ( ndo , dp , ndo -> ndo_vflag ) ) ) //<S2SV> break ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>to:" ) ) ; //<S2SV> if ( ! ( dp = parse_wcc_data ( ndo , dp , ndo -> ndo_vflag ) ) ) //<S2SV> break ; //<S2SV> } //<S2SV> return ; //<S2SV> } else { //<S2SV> if ( parsestatus ( ndo , dp , & er ) != NULL ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_LINK : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( v3 ) { //<S2SV> if ( ! ( dp = parsestatus ( ndo , dp , & er ) ) ) //<S2SV> break ; //<S2SV> if ( ndo -> ndo_vflag ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>file<S2SV_blank>POST:" ) ) ; //<S2SV> if ( ! ( dp = parse_post_op_attr ( ndo , dp , ndo -> ndo_vflag ) ) ) //<S2SV> break ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>dir:" ) ) ; //<S2SV> if ( ! ( dp = parse_wcc_data ( ndo , dp , ndo -> ndo_vflag ) ) ) //<S2SV> break ; //<S2SV> return ; //<S2SV> } //<S2SV> } else { //<S2SV> if ( parsestatus ( ndo , dp , & er ) != NULL ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_READDIR : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( v3 ) { //<S2SV> if ( parsev3rddirres ( ndo , dp , ndo -> ndo_vflag ) ) //<S2SV> return ; //<S2SV> } else { //<S2SV> if ( parserddires ( ndo , dp ) != 0 ) //<S2SV> return ; //<S2SV> } //<S2SV> break ; //<S2SV> case NFSPROC_READDIRPLUS : //<S2SV> if ( ! ( dp = parserep ( ndo , rp , length ) ) ) //<S2SV> break ; //<S2SV> if ( parsev3rddirres ( ndo , dp , ndo -> ndo_vflag ) ) //<S2SV> return ; //<S2SV> break ; //<S2SV> case NFSPROC_FSSTAT : //<S2SV> dp = parserep ( ndo , rp , length ) ; //<S2SV> if ( dp != NULL && parsestatfs ( ndo , dp , v3 ) != 0 ) //<S2SV> return ; //<S2SV> break ; //<S2SV> case NFSPROC_FSINFO : //<S2SV> dp = parserep ( ndo , rp , length ) ; //<S2SV> if ( dp != NULL && parsefsinfo ( ndo , dp ) != 0 ) //<S2SV> return ; //<S2SV> break ; //<S2SV> case NFSPROC_PATHCONF : //<S2SV> dp = parserep ( ndo , rp , length ) ; //<S2SV> if ( dp != NULL && parsepathconf ( ndo , dp ) != 0 ) //<S2SV> return ; //<S2SV> break ; //<S2SV> case NFSPROC_COMMIT : //<S2SV> dp = parserep ( ndo , rp , length ) ; //<S2SV> if ( dp != NULL && parsewccres ( ndo , dp , ndo -> ndo_vflag ) != 0 ) //<S2SV> return ; //<S2SV> break ; //<S2SV> default : //<S2SV> return ; //<S2SV> } //<S2SV> trunc : //<S2SV> if ( ! nfserr ) //<S2SV> ND_PRINT ( ( ndo , "%s" , tstr ) ) ; //<S2SV> } //<S2SV> 