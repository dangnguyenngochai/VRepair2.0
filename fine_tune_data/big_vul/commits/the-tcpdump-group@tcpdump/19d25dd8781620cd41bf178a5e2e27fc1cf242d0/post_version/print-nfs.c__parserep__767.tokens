static const uint32_t * //<S2SV> parserep ( netdissect_options * ndo , //<S2SV> register const struct sunrpc_msg * rp , register u_int length ) //<S2SV> { //<S2SV> register const uint32_t * dp ; //<S2SV> u_int len ; //<S2SV> enum sunrpc_accept_stat astat ; //<S2SV> dp = ( ( const uint32_t * ) & rp -> rm_reply ) + 1 ; //<S2SV> ND_TCHECK ( dp [ 1 ] ) ; //<S2SV> len = EXTRACT_32BITS ( & dp [ 1 ] ) ; //<S2SV> if ( len >= length ) //<S2SV> return ( NULL ) ; //<S2SV> dp += ( len + ( 2 * sizeof ( uint32_t ) + 3 ) ) / sizeof ( uint32_t ) ; //<S2SV> ND_TCHECK ( dp [ 0 ] ) ; //<S2SV> astat = ( enum sunrpc_accept_stat ) EXTRACT_32BITS ( dp ) ; //<S2SV> if ( astat != SUNRPC_SUCCESS ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , tok2str ( sunrpc_str , "ar_stat<S2SV_blank>%d" , astat ) ) ) ; //<S2SV> nfserr = 1 ; //<S2SV> return ( NULL ) ; //<S2SV> } //<S2SV> ND_TCHECK2 ( * dp , sizeof ( astat ) ) ; //<S2SV> return ( ( const uint32_t * ) ( sizeof ( astat ) + ( ( const char * ) dp ) ) ) ; //<S2SV> trunc : //<S2SV> return ( 0 ) ; //<S2SV> } //<S2SV> 