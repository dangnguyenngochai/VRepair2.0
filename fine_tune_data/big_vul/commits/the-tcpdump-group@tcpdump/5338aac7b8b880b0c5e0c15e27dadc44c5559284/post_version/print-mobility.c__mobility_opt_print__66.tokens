static int //<S2SV> mobility_opt_print ( netdissect_options * ndo , //<S2SV> const u_char * bp , const unsigned len ) //<S2SV> { //<S2SV> unsigned i , optlen ; //<S2SV> for ( i = 0 ; i < len ; i += optlen ) { //<S2SV> ND_TCHECK ( bp [ i ] ) ; //<S2SV> if ( bp [ i ] == IP6MOPT_PAD1 ) //<S2SV> optlen = 1 ; //<S2SV> else { //<S2SV> if ( i + 1 < len ) { //<S2SV> ND_TCHECK ( bp [ i + 1 ] ) ; //<S2SV> optlen = bp [ i + 1 ] + 2 ; //<S2SV> } //<S2SV> else //<S2SV> goto trunc ; //<S2SV> } //<S2SV> if ( i + optlen > len ) //<S2SV> goto trunc ; //<S2SV> ND_TCHECK ( bp [ i + optlen ] ) ; //<S2SV> switch ( bp [ i ] ) { //<S2SV> case IP6MOPT_PAD1 : //<S2SV> ND_PRINT ( ( ndo , "(pad1)" ) ) ; //<S2SV> break ; //<S2SV> case IP6MOPT_PADN : //<S2SV> if ( len - i < IP6MOPT_MINLEN ) { //<S2SV> ND_PRINT ( ( ndo , "(padn:<S2SV_blank>trunc)" ) ) ; //<S2SV> goto trunc ; //<S2SV> } //<S2SV> ND_PRINT ( ( ndo , "(padn)" ) ) ; //<S2SV> break ; //<S2SV> case IP6MOPT_REFRESH : //<S2SV> if ( len - i < IP6MOPT_REFRESH_MINLEN ) { //<S2SV> ND_PRINT ( ( ndo , "(refresh:<S2SV_blank>trunc)" ) ) ; //<S2SV> goto trunc ; //<S2SV> } //<S2SV> ND_TCHECK_16BITS ( & bp [ i + 2 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "(refresh:<S2SV_blank>%u)" , //<S2SV> EXTRACT_16BITS ( & bp [ i + 2 ] ) << 2 ) ) ; //<S2SV> break ; //<S2SV> case IP6MOPT_ALTCOA : //<S2SV> if ( len - i < IP6MOPT_ALTCOA_MINLEN ) { //<S2SV> ND_PRINT ( ( ndo , "(altcoa:<S2SV_blank>trunc)" ) ) ; //<S2SV> goto trunc ; //<S2SV> } //<S2SV> ND_TCHECK_128BITS ( & bp [ i + 2 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "(alt-CoA:<S2SV_blank>%s)" , ip6addr_string ( ndo , & bp [ i + 2 ] ) ) ) ; //<S2SV> break ; //<S2SV> case IP6MOPT_NONCEID : //<S2SV> if ( len - i < IP6MOPT_NONCEID_MINLEN ) { //<S2SV> ND_PRINT ( ( ndo , "(ni:<S2SV_blank>trunc)" ) ) ; //<S2SV> goto trunc ; //<S2SV> } //<S2SV> ND_TCHECK_16BITS ( & bp [ i + 2 ] ) ; //<S2SV> ND_TCHECK_16BITS ( & bp [ i + 4 ] ) ; //<S2SV> ND_PRINT ( ( ndo , "(ni:<S2SV_blank>ho=0x%04x<S2SV_blank>co=0x%04x)" , //<S2SV> EXTRACT_16BITS ( & bp [ i + 2 ] ) , //<S2SV> EXTRACT_16BITS ( & bp [ i + 4 ] ) ) ) ; //<S2SV> break ; //<S2SV> case IP6MOPT_AUTH : //<S2SV> if ( len - i < IP6MOPT_AUTH_MINLEN ) { //<S2SV> ND_PRINT ( ( ndo , "(auth:<S2SV_blank>trunc)" ) ) ; //<S2SV> goto trunc ; //<S2SV> } //<S2SV> ND_PRINT ( ( ndo , "(auth)" ) ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> if ( len - i < IP6MOPT_MINLEN ) { //<S2SV> ND_PRINT ( ( ndo , "(sopt_type<S2SV_blank>%u:<S2SV_blank>trunc)" , bp [ i ] ) ) ; //<S2SV> goto trunc ; //<S2SV> } //<S2SV> ND_PRINT ( ( ndo , "(type-0x%02x:<S2SV_blank>len=%u)" , bp [ i ] , bp [ i + 1 ] ) ) ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> return 0 ; //<S2SV> trunc : //<S2SV> return 1 ; //<S2SV> } //<S2SV> 