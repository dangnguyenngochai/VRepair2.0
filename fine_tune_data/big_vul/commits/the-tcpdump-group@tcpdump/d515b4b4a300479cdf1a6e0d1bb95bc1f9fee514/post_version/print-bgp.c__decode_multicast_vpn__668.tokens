static int //<S2SV> decode_multicast_vpn ( netdissect_options * ndo , //<S2SV> const u_char * pptr , char * buf , u_int buflen ) //<S2SV> { //<S2SV> uint8_t route_type , route_length , addr_length , sg_length ; //<S2SV> u_int offset ; //<S2SV> ND_TCHECK2 ( pptr [ 0 ] , 2 ) ; //<S2SV> route_type = * pptr ++ ; //<S2SV> route_length = * pptr ++ ; //<S2SV> snprintf ( buf , buflen , "Route-Type:<S2SV_blank>%s<S2SV_blank>(%u),<S2SV_blank>length:<S2SV_blank>%u" , //<S2SV> tok2str ( bgp_multicast_vpn_route_type_values , //<S2SV> "Unknown" , route_type ) , //<S2SV> route_type , route_length ) ; //<S2SV> switch ( route_type ) { //<S2SV> case BGP_MULTICAST_VPN_ROUTE_TYPE_INTRA_AS_I_PMSI : //<S2SV> ND_TCHECK2 ( pptr [ 0 ] , BGP_VPN_RD_LEN ) ; //<S2SV> offset = strlen ( buf ) ; //<S2SV> snprintf ( buf + offset , buflen - offset , ",<S2SV_blank>RD:<S2SV_blank>%s,<S2SV_blank>Originator<S2SV_blank>%s" , //<S2SV> bgp_vpn_rd_print ( ndo , pptr ) , //<S2SV> bgp_vpn_ip_print ( ndo , pptr + BGP_VPN_RD_LEN , //<S2SV> ( route_length - BGP_VPN_RD_LEN ) << 3 ) ) ; //<S2SV> break ; //<S2SV> case BGP_MULTICAST_VPN_ROUTE_TYPE_INTER_AS_I_PMSI : //<S2SV> ND_TCHECK2 ( pptr [ 0 ] , BGP_VPN_RD_LEN + 4 ) ; //<S2SV> offset = strlen ( buf ) ; //<S2SV> snprintf ( buf + offset , buflen - offset , ",<S2SV_blank>RD:<S2SV_blank>%s,<S2SV_blank>Source-AS<S2SV_blank>%s" , //<S2SV> bgp_vpn_rd_print ( ndo , pptr ) , //<S2SV> as_printf ( ndo , astostr , sizeof ( astostr ) , //<S2SV> EXTRACT_32BITS ( pptr + BGP_VPN_RD_LEN ) ) ) ; //<S2SV> break ; //<S2SV> case BGP_MULTICAST_VPN_ROUTE_TYPE_S_PMSI : //<S2SV> ND_TCHECK2 ( pptr [ 0 ] , BGP_VPN_RD_LEN ) ; //<S2SV> offset = strlen ( buf ) ; //<S2SV> snprintf ( buf + offset , buflen - offset , ",<S2SV_blank>RD:<S2SV_blank>%s" , //<S2SV> bgp_vpn_rd_print ( ndo , pptr ) ) ; //<S2SV> pptr += BGP_VPN_RD_LEN ; //<S2SV> sg_length = bgp_vpn_sg_print ( ndo , pptr , buf , buflen ) ; //<S2SV> addr_length = route_length - sg_length ; //<S2SV> ND_TCHECK2 ( pptr [ 0 ] , addr_length ) ; //<S2SV> offset = strlen ( buf ) ; //<S2SV> snprintf ( buf + offset , buflen - offset , ",<S2SV_blank>Originator<S2SV_blank>%s" , //<S2SV> bgp_vpn_ip_print ( ndo , pptr , addr_length << 3 ) ) ; //<S2SV> break ; //<S2SV> case BGP_MULTICAST_VPN_ROUTE_TYPE_SOURCE_ACTIVE : //<S2SV> ND_TCHECK2 ( pptr [ 0 ] , BGP_VPN_RD_LEN ) ; //<S2SV> offset = strlen ( buf ) ; //<S2SV> snprintf ( buf + offset , buflen - offset , ",<S2SV_blank>RD:<S2SV_blank>%s" , //<S2SV> bgp_vpn_rd_print ( ndo , pptr ) ) ; //<S2SV> pptr += BGP_VPN_RD_LEN ; //<S2SV> bgp_vpn_sg_print ( ndo , pptr , buf , buflen ) ; //<S2SV> break ; //<S2SV> case BGP_MULTICAST_VPN_ROUTE_TYPE_SHARED_TREE_JOIN : //<S2SV> case BGP_MULTICAST_VPN_ROUTE_TYPE_SOURCE_TREE_JOIN : //<S2SV> ND_TCHECK2 ( pptr [ 0 ] , BGP_VPN_RD_LEN + 4 ) ; //<S2SV> offset = strlen ( buf ) ; //<S2SV> snprintf ( buf + offset , buflen - offset , ",<S2SV_blank>RD:<S2SV_blank>%s,<S2SV_blank>Source-AS<S2SV_blank>%s" , //<S2SV> bgp_vpn_rd_print ( ndo , pptr ) , //<S2SV> as_printf ( ndo , astostr , sizeof ( astostr ) , //<S2SV> EXTRACT_32BITS ( pptr + BGP_VPN_RD_LEN ) ) ) ; //<S2SV> pptr += BGP_VPN_RD_LEN + 4 ; //<S2SV> bgp_vpn_sg_print ( ndo , pptr , buf , buflen ) ; //<S2SV> break ; //<S2SV> case BGP_MULTICAST_VPN_ROUTE_TYPE_INTRA_AS_SEG_LEAF : //<S2SV> default : //<S2SV> break ; //<S2SV> } //<S2SV> return route_length + 2 ; //<S2SV> trunc : //<S2SV> return - 2 ; //<S2SV> } //<S2SV> 