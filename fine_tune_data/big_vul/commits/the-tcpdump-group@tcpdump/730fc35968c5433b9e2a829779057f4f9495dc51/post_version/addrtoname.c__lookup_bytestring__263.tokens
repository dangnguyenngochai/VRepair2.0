static inline struct bsnamemem * //<S2SV> lookup_bytestring ( netdissect_options * ndo , register const u_char * bs , //<S2SV> const unsigned int nlen ) //<S2SV> { //<S2SV> struct bsnamemem * tp ; //<S2SV> register u_int i , j , k ; //<S2SV> if ( nlen >= 6 ) { //<S2SV> k = ( bs [ 0 ] << 8 ) | bs [ 1 ] ; //<S2SV> j = ( bs [ 2 ] << 8 ) | bs [ 3 ] ; //<S2SV> i = ( bs [ 4 ] << 8 ) | bs [ 5 ] ; //<S2SV> } else if ( nlen >= 4 ) { //<S2SV> k = ( bs [ 0 ] << 8 ) | bs [ 1 ] ; //<S2SV> j = ( bs [ 2 ] << 8 ) | bs [ 3 ] ; //<S2SV> i = 0 ; //<S2SV> } else //<S2SV> i = j = k = 0 ; //<S2SV> tp = & bytestringtable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ] ; //<S2SV> while ( tp -> bs_nxt ) //<S2SV> if ( nlen == tp -> bs_nbytes && //<S2SV> tp -> bs_addr0 == i && //<S2SV> tp -> bs_addr1 == j && //<S2SV> tp -> bs_addr2 == k && //<S2SV> memcmp ( ( const char * ) bs , ( const char * ) ( tp -> bs_bytes ) , nlen ) == 0 ) //<S2SV> return tp ; //<S2SV> else //<S2SV> tp = tp -> bs_nxt ; //<S2SV> tp -> bs_addr0 = i ; //<S2SV> tp -> bs_addr1 = j ; //<S2SV> tp -> bs_addr2 = k ; //<S2SV> tp -> bs_bytes = ( u_char * ) calloc ( 1 , nlen + 1 ) ; //<S2SV> if ( tp -> bs_bytes == NULL ) //<S2SV> ( * ndo -> ndo_error ) ( ndo , "lookup_bytestring:<S2SV_blank>calloc" ) ; //<S2SV> memcpy ( tp -> bs_bytes , bs , nlen ) ; //<S2SV> tp -> bs_nbytes = nlen ; //<S2SV> tp -> bs_nxt = ( struct bsnamemem * ) calloc ( 1 , sizeof ( * tp ) ) ; //<S2SV> if ( tp -> bs_nxt == NULL ) //<S2SV> ( * ndo -> ndo_error ) ( ndo , "lookup_bytestring:<S2SV_blank>calloc" ) ; //<S2SV> return tp ; //<S2SV> } //<S2SV> 