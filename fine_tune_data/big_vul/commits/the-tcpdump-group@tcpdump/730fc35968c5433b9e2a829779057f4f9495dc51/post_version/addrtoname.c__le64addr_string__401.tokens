const char * //<S2SV> le64addr_string ( netdissect_options * ndo , const u_char * ep ) //<S2SV> { //<S2SV> const unsigned int len = 8 ; //<S2SV> register u_int i ; //<S2SV> register char * cp ; //<S2SV> register struct bsnamemem * tp ; //<S2SV> char buf [ BUFSIZE ] ; //<S2SV> tp = lookup_bytestring ( ndo , ep , len ) ; //<S2SV> if ( tp -> bs_name ) //<S2SV> return ( tp -> bs_name ) ; //<S2SV> cp = buf ; //<S2SV> for ( i = len ; i > 0 ; -- i ) { //<S2SV> * cp ++ = hex [ * ( ep + i - 1 ) >> 4 ] ; //<S2SV> * cp ++ = hex [ * ( ep + i - 1 ) & 0xf ] ; //<S2SV> * cp ++ = ':' ; //<S2SV> } //<S2SV> cp -- ; //<S2SV> * cp = '\\0' ; //<S2SV> tp -> bs_name = strdup ( buf ) ; //<S2SV> if ( tp -> bs_name == NULL ) //<S2SV> ( * ndo -> ndo_error ) ( ndo , "le64addr_string:<S2SV_blank>strdup(buf)" ) ; //<S2SV> return ( tp -> bs_name ) ; //<S2SV> } //<S2SV> 