const u_char * //<S2SV> smb_fdata ( netdissect_options * ndo , //<S2SV> const u_char * buf , const char * fmt , const u_char * maxbuf , //<S2SV> int unicodestr ) //<S2SV> { //<S2SV> static int depth = 0 ; //<S2SV> char s [ 128 ] ; //<S2SV> char * p ; //<S2SV> while ( * fmt ) { //<S2SV> switch ( * fmt ) { //<S2SV> case '*' : //<S2SV> fmt ++ ; //<S2SV> while ( buf < maxbuf ) { //<S2SV> const u_char * buf2 ; //<S2SV> depth ++ ; //<S2SV> if ( depth == 10 ) //<S2SV> ND_PRINT ( ( ndo , "(too<S2SV_blank>many<S2SV_blank>nested<S2SV_blank>levels,<S2SV_blank>not<S2SV_blank>recursing)" ) ) ; //<S2SV> else //<S2SV> buf2 = smb_fdata ( ndo , buf , fmt , maxbuf , unicodestr ) ; //<S2SV> depth -- ; //<S2SV> if ( buf2 == NULL ) //<S2SV> return ( NULL ) ; //<S2SV> if ( buf2 == buf ) //<S2SV> return ( buf ) ; //<S2SV> buf = buf2 ; //<S2SV> } //<S2SV> return ( buf ) ; //<S2SV> case '|' : //<S2SV> fmt ++ ; //<S2SV> if ( buf >= maxbuf ) //<S2SV> return ( buf ) ; //<S2SV> break ; //<S2SV> case '%' : //<S2SV> fmt ++ ; //<S2SV> buf = maxbuf ; //<S2SV> break ; //<S2SV> case '#' : //<S2SV> fmt ++ ; //<S2SV> return ( buf ) ; //<S2SV> break ; //<S2SV> case '[' : //<S2SV> fmt ++ ; //<S2SV> if ( buf >= maxbuf ) //<S2SV> return ( buf ) ; //<S2SV> memset ( s , 0 , sizeof ( s ) ) ; //<S2SV> p = strchr ( fmt , ']' ) ; //<S2SV> if ( ( size_t ) ( p - fmt + 1 ) > sizeof ( s ) ) { //<S2SV> return ( buf ) ; //<S2SV> } //<S2SV> strncpy ( s , fmt , p - fmt ) ; //<S2SV> s [ p - fmt ] = '\\0' ; //<S2SV> fmt = p + 1 ; //<S2SV> buf = smb_fdata1 ( ndo , buf , s , maxbuf , unicodestr ) ; //<S2SV> if ( buf == NULL ) //<S2SV> return ( NULL ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> ND_PRINT ( ( ndo , "%c" , * fmt ) ) ; //<S2SV> fmt ++ ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> if ( ! depth && buf < maxbuf ) { //<S2SV> size_t len = PTR_DIFF ( maxbuf , buf ) ; //<S2SV> ND_PRINT ( ( ndo , "Data:<S2SV_blank>(%lu<S2SV_blank>bytes)\\n" , ( unsigned long ) len ) ) ; //<S2SV> smb_print_data ( ndo , buf , len ) ; //<S2SV> return ( buf + len ) ; //<S2SV> } //<S2SV> return ( buf ) ; //<S2SV> } //<S2SV> 