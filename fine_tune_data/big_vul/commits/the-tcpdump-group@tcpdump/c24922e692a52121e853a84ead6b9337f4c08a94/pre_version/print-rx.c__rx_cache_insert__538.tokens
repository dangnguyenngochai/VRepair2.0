static void //<S2SV> rx_cache_insert ( netdissect_options * ndo , //<S2SV> const u_char * bp , const struct ip * ip , int dport ) //<S2SV> { //<S2SV> struct rx_cache_entry * rxent ; //<S2SV> const struct rx_header * rxh = ( const struct rx_header * ) bp ; //<S2SV> if ( ndo -> ndo_snapend - bp + 1 <= ( int ) ( sizeof ( struct rx_header ) + sizeof ( int32_t ) ) ) //<S2SV> return ; //<S2SV> rxent = & rx_cache [ rx_cache_next ] ; //<S2SV> if ( ++ rx_cache_next >= RX_CACHE_SIZE ) //<S2SV> rx_cache_next = 0 ; //<S2SV> rxent -> callnum = EXTRACT_32BITS ( & rxh -> callNumber ) ; //<S2SV> UNALIGNED_MEMCPY ( & rxent -> client , & ip -> ip_src , sizeof ( uint32_t ) ) ; //<S2SV> UNALIGNED_MEMCPY ( & rxent -> server , & ip -> ip_dst , sizeof ( uint32_t ) ) ; //<S2SV> rxent -> dport = dport ; //<S2SV> rxent -> serviceId = EXTRACT_32BITS ( & rxh -> serviceId ) ; //<S2SV> rxent -> opcode = EXTRACT_32BITS ( bp + sizeof ( struct rx_header ) ) ; //<S2SV> } //<S2SV> 