static int //<S2SV> ip_printts ( netdissect_options * ndo , //<S2SV> register const u_char * cp , u_int length ) //<S2SV> { //<S2SV> register u_int ptr ; //<S2SV> register u_int len ; //<S2SV> int hoplen ; //<S2SV> const char * type ; //<S2SV> if ( length < 4 ) { //<S2SV> ND_PRINT ( ( ndo , "[bad<S2SV_blank>length<S2SV_blank>%u]" , length ) ) ; //<S2SV> return ( 0 ) ; //<S2SV> } //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>TS{" ) ) ; //<S2SV> hoplen = ( ( cp [ 3 ] & 0xF ) != IPOPT_TS_TSONLY ) ? 8 : 4 ; //<S2SV> if ( ( length - 4 ) & ( hoplen - 1 ) ) //<S2SV> ND_PRINT ( ( ndo , "[bad<S2SV_blank>length<S2SV_blank>%u]" , length ) ) ; //<S2SV> ND_TCHECK ( cp [ 2 ] ) ; //<S2SV> ptr = cp [ 2 ] - 1 ; //<S2SV> len = 0 ; //<S2SV> if ( ptr < 4 || ( ( ptr - 4 ) & ( hoplen - 1 ) ) || ptr > length + 1 ) //<S2SV> ND_PRINT ( ( ndo , "[bad<S2SV_blank>ptr<S2SV_blank>%u]" , cp [ 2 ] ) ) ; //<S2SV> ND_TCHECK ( cp [ 3 ] ) ; //<S2SV> switch ( cp [ 3 ] & 0xF ) { //<S2SV> case IPOPT_TS_TSONLY : //<S2SV> ND_PRINT ( ( ndo , "TSONLY" ) ) ; //<S2SV> break ; //<S2SV> case IPOPT_TS_TSANDADDR : //<S2SV> ND_PRINT ( ( ndo , "TS+ADDR" ) ) ; //<S2SV> break ; //<S2SV> case 2 : //<S2SV> ND_PRINT ( ( ndo , "PRESPEC2.0" ) ) ; //<S2SV> break ; //<S2SV> case 3 : //<S2SV> ND_PRINT ( ( ndo , "PRESPEC" ) ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> ND_PRINT ( ( ndo , "[bad<S2SV_blank>ts<S2SV_blank>type<S2SV_blank>%d]" , cp [ 3 ] & 0xF ) ) ; //<S2SV> goto done ; //<S2SV> } //<S2SV> type = "<S2SV_blank>" ; //<S2SV> for ( len = 4 ; len < length ; len += hoplen ) { //<S2SV> if ( ptr == len ) //<S2SV> type = "<S2SV_blank>^<S2SV_blank>" ; //<S2SV> ND_TCHECK2 ( cp [ len ] , hoplen ) ; //<S2SV> ND_PRINT ( ( ndo , "%s%d@%s" , type , EXTRACT_32BITS ( & cp [ len + hoplen - 4 ] ) , //<S2SV> hoplen != 8 ? "" : ipaddr_string ( ndo , & cp [ len ] ) ) ) ; //<S2SV> type = "<S2SV_blank>" ; //<S2SV> } //<S2SV> done : //<S2SV> ND_PRINT ( ( ndo , "%s" , ptr == len ? "<S2SV_blank>^<S2SV_blank>" : "" ) ) ; //<S2SV> if ( cp [ 3 ] >> 4 ) //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>[%d<S2SV_blank>hops<S2SV_blank>not<S2SV_blank>recorded]}<S2SV_blank>" , cp [ 3 ] >> 4 ) ) ; //<S2SV> else //<S2SV> ND_PRINT ( ( ndo , "}" ) ) ; //<S2SV> return ( 0 ) ; //<S2SV> trunc : //<S2SV> return ( - 1 ) ; //<S2SV> } //<S2SV> 