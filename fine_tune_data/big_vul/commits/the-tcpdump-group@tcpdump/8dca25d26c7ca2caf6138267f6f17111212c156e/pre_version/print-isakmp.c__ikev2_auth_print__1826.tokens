static const u_char * //<S2SV> ikev2_auth_print ( netdissect_options * ndo , u_char tpay , //<S2SV> const struct isakmp_gen * ext , //<S2SV> u_int item_len _U_ , const u_char * ep , //<S2SV> uint32_t phase _U_ , uint32_t doi _U_ , //<S2SV> uint32_t proto _U_ , int depth _U_ ) //<S2SV> { //<S2SV> struct ikev2_auth a ; //<S2SV> const char * v2_auth [ ] = { "invalid" , "rsasig" , //<S2SV> "shared-secret" , "dsssig" } ; //<S2SV> const u_char * authdata = ( const u_char * ) ext + sizeof ( a ) ; //<S2SV> unsigned int len ; //<S2SV> ND_TCHECK ( * ext ) ; //<S2SV> UNALIGNED_MEMCPY ( & a , ext , sizeof ( a ) ) ; //<S2SV> ikev2_pay_print ( ndo , NPSTR ( tpay ) , a . h . critical ) ; //<S2SV> len = ntohs ( a . h . len ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>len=%u<S2SV_blank>method=%s" , len - 4 , //<S2SV> STR_OR_ID ( a . auth_method , v2_auth ) ) ) ; //<S2SV> if ( len > 4 ) { //<S2SV> if ( ndo -> ndo_vflag > 1 ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>authdata=(" ) ) ; //<S2SV> if ( ! rawprint ( ndo , ( const uint8_t * ) authdata , len - sizeof ( a ) ) ) //<S2SV> goto trunc ; //<S2SV> ND_PRINT ( ( ndo , ")<S2SV_blank>" ) ) ; //<S2SV> } else if ( ndo -> ndo_vflag ) { //<S2SV> if ( ! ike_show_somedata ( ndo , authdata , ep ) ) //<S2SV> goto trunc ; //<S2SV> } //<S2SV> } //<S2SV> return ( const u_char * ) ext + len ; //<S2SV> trunc : //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>[|%s]" , NPSTR ( tpay ) ) ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> 