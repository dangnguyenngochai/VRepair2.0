static const u_char * //<S2SV> ikev2_ke_print ( netdissect_options * ndo , u_char tpay , //<S2SV> const struct isakmp_gen * ext , //<S2SV> u_int item_len _U_ , const u_char * ep _U_ , //<S2SV> uint32_t phase _U_ , uint32_t doi _U_ , //<S2SV> uint32_t proto _U_ , int depth _U_ ) //<S2SV> { //<S2SV> struct ikev2_ke ke ; //<S2SV> const struct ikev2_ke * k ; //<S2SV> k = ( const struct ikev2_ke * ) ext ; //<S2SV> ND_TCHECK ( * k ) ; //<S2SV> UNALIGNED_MEMCPY ( & ke , ext , sizeof ( ke ) ) ; //<S2SV> ikev2_pay_print ( ndo , NPSTR ( tpay ) , ke . h . critical ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>len=%u<S2SV_blank>group=%s" , ntohs ( ke . h . len ) - 8 , //<S2SV> STR_OR_ID ( ntohs ( ke . ke_group ) , dh_p_map ) ) ) ; //<S2SV> if ( 2 < ndo -> ndo_vflag && 8 < ntohs ( ke . h . len ) ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>" ) ) ; //<S2SV> if ( ! rawprint ( ndo , ( const uint8_t * ) ( k + 1 ) , ntohs ( ke . h . len ) - 8 ) ) //<S2SV> goto trunc ; //<S2SV> } //<S2SV> return ( const u_char * ) ext + ntohs ( ke . h . len ) ; //<S2SV> trunc : //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>[|%s]" , NPSTR ( tpay ) ) ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> 