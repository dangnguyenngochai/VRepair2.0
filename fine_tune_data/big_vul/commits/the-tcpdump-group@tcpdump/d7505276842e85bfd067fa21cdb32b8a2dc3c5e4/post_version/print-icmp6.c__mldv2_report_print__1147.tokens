static void //<S2SV> mldv2_report_print ( netdissect_options * ndo , const u_char * bp , u_int len ) //<S2SV> { //<S2SV> const struct icmp6_hdr * icp = ( const struct icmp6_hdr * ) bp ; //<S2SV> u_int group , nsrcs , ngroups ; //<S2SV> u_int i , j ; //<S2SV> if ( len < 8 ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>[invalid<S2SV_blank>len<S2SV_blank>%d]" , len ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> ND_TCHECK ( icp -> icmp6_data16 [ 1 ] ) ; //<S2SV> ngroups = EXTRACT_16BITS ( & icp -> icmp6_data16 [ 1 ] ) ; //<S2SV> ND_PRINT ( ( ndo , ",<S2SV_blank>%d<S2SV_blank>group<S2SV_blank>record(s)" , ngroups ) ) ; //<S2SV> if ( ndo -> ndo_vflag > 0 ) { //<S2SV> group = 8 ; //<S2SV> for ( i = 0 ; i < ngroups ; i ++ ) { //<S2SV> if ( len < group + 20 ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>[invalid<S2SV_blank>number<S2SV_blank>of<S2SV_blank>groups]" ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> ND_TCHECK2 ( bp [ group + 4 ] , sizeof ( struct in6_addr ) ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>[gaddr<S2SV_blank>%s" , ip6addr_string ( ndo , & bp [ group + 4 ] ) ) ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , tok2str ( mldv2report2str , "<S2SV_blank>[v2-report-#%d]" , //<S2SV> bp [ group ] ) ) ) ; //<S2SV> nsrcs = ( bp [ group + 2 ] << 8 ) + bp [ group + 3 ] ; //<S2SV> if ( len < group + 20 + ( nsrcs * sizeof ( struct in6_addr ) ) ) { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>[invalid<S2SV_blank>number<S2SV_blank>of<S2SV_blank>sources<S2SV_blank>%d]" , nsrcs ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> if ( ndo -> ndo_vflag == 1 ) //<S2SV> ND_PRINT ( ( ndo , ",<S2SV_blank>%d<S2SV_blank>source(s)" , nsrcs ) ) ; //<S2SV> else { //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>{" ) ) ; //<S2SV> for ( j = 0 ; j < nsrcs ; j ++ ) { //<S2SV> ND_TCHECK2 ( bp [ group + 20 + j * sizeof ( struct in6_addr ) ] , //<S2SV> sizeof ( struct in6_addr ) ) ; //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>%s" , ip6addr_string ( ndo , & bp [ group + 20 + j * sizeof ( struct in6_addr ) ] ) ) ) ; //<S2SV> } //<S2SV> ND_PRINT ( ( ndo , "<S2SV_blank>}" ) ) ; //<S2SV> } //<S2SV> group += 20 + nsrcs * sizeof ( struct in6_addr ) ; //<S2SV> ND_PRINT ( ( ndo , "]" ) ) ; //<S2SV> } //<S2SV> } //<S2SV> return ; //<S2SV> trunc : //<S2SV> ND_PRINT ( ( ndo , "%s" , mldv2_tstr ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> 