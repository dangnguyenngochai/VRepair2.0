int //<S2SV> llc_print ( netdissect_options * ndo , const u_char * p , u_int length , u_int caplen , //<S2SV> const struct lladdr_info * src , const struct lladdr_info * dst ) //<S2SV> { //<S2SV> uint8_t dsap_field , dsap , ssap_field , ssap ; //<S2SV> uint16_t control ; //<S2SV> int hdrlen ; //<S2SV> int is_u ; //<S2SV> if ( caplen < 3 ) { //<S2SV> ND_PRINT ( ( ndo , "[|llc]" ) ) ; //<S2SV> ND_DEFAULTPRINT ( ( const u_char * ) p , caplen ) ; //<S2SV> return ( caplen ) ; //<S2SV> } //<S2SV> if ( length < 3 ) { //<S2SV> ND_PRINT ( ( ndo , "[|llc]" ) ) ; //<S2SV> ND_DEFAULTPRINT ( ( const u_char * ) p , caplen ) ; //<S2SV> return ( length ) ; //<S2SV> } //<S2SV> dsap_field = * p ; //<S2SV> ssap_field = * ( p + 1 ) ; //<S2SV> control = * ( p + 2 ) ; //<S2SV> if ( ( control & LLC_U_FMT ) == LLC_U_FMT ) { //<S2SV> is_u = 1 ; //<S2SV> hdrlen = 3 ; //<S2SV> } else { //<S2SV> if ( caplen < 4 ) { //<S2SV> ND_PRINT ( ( ndo , "[|llc]" ) ) ; //<S2SV> ND_DEFAULTPRINT ( ( const u_char * ) p , caplen ) ; //<S2SV> return ( caplen ) ; //<S2SV> } //<S2SV> if ( length < 4 ) { //<S2SV> ND_PRINT ( ( ndo , "[|llc]" ) ) ; //<S2SV> ND_DEFAULTPRINT ( ( const u_char * ) p , caplen ) ; //<S2SV> return ( length ) ; //<S2SV> } //<S2SV> control = EXTRACT_LE_16BITS ( p + 2 ) ; //<S2SV> is_u = 0 ; //<S2SV> hdrlen = 4 ; //<S2SV> } //<S2SV> if ( ssap_field == LLCSAP_GLOBAL && dsap_field == LLCSAP_GLOBAL ) { //<S2SV> if ( ndo -> ndo_eflag ) //<S2SV> ND_PRINT ( ( ndo , "IPX<S2SV_blank>802.3:<S2SV_blank>" ) ) ; //<S2SV> ipx_print ( ndo , p , length ) ; //<S2SV> return ( 0 ) ; //<S2SV> } //<S2SV> dsap = dsap_field & ~ LLC_IG ; //<S2SV> ssap = ssap_field & ~ LLC_GSAP ; //<S2SV> if ( ndo -> ndo_eflag ) { //<S2SV> ND_PRINT ( ( ndo , "LLC,<S2SV_blank>dsap<S2SV_blank>%s<S2SV_blank>(0x%02x)<S2SV_blank>%s,<S2SV_blank>ssap<S2SV_blank>%s<S2SV_blank>(0x%02x)<S2SV_blank>%s" , //<S2SV> tok2str ( llc_values , "Unknown" , dsap ) , //<S2SV> dsap , //<S2SV> tok2str ( llc_ig_flag_values , "Unknown" , dsap_field & LLC_IG ) , //<S2SV> tok2str ( llc_values , "Unknown" , ssap ) , //<S2SV> ssap , //<S2SV> tok2str ( llc_flag_values , "Unknown" , ssap_field & LLC_GSAP ) ) ) ; //<S2SV> if ( is_u ) { //<S2SV> ND_PRINT ( ( ndo , ",<S2SV_blank>ctrl<S2SV_blank>0x%02x:<S2SV_blank>" , control ) ) ; //<S2SV> } else { //<S2SV> ND_PRINT ( ( ndo , ",<S2SV_blank>ctrl<S2SV_blank>0x%04x:<S2SV_blank>" , control ) ) ; //<S2SV> } //<S2SV> } //<S2SV> p += hdrlen ; //<S2SV> length -= hdrlen ; //<S2SV> caplen -= hdrlen ; //<S2SV> if ( ssap == LLCSAP_SNAP && dsap == LLCSAP_SNAP //<S2SV> && control == LLC_UI ) { //<S2SV> if ( ! snap_print ( ndo , p , length , caplen , src , dst , 2 ) ) { //<S2SV> return ( - ( hdrlen + 5 ) ) ; //<S2SV> } else //<S2SV> return ( hdrlen + 5 ) ; //<S2SV> } //<S2SV> if ( ssap == LLCSAP_8021D && dsap == LLCSAP_8021D && //<S2SV> control == LLC_UI ) { //<S2SV> stp_print ( ndo , p , length ) ; //<S2SV> return ( hdrlen ) ; //<S2SV> } //<S2SV> if ( ssap == LLCSAP_IP && dsap == LLCSAP_IP && //<S2SV> control == LLC_UI ) { //<S2SV> ip_print ( ndo , p , length ) ; //<S2SV> return ( hdrlen ) ; //<S2SV> } //<S2SV> if ( ssap == LLCSAP_IPX && dsap == LLCSAP_IPX && //<S2SV> control == LLC_UI ) { //<S2SV> if ( ndo -> ndo_eflag ) //<S2SV> ND_PRINT ( ( ndo , "IPX<S2SV_blank>802.2:<S2SV_blank>" ) ) ; //<S2SV> ipx_print ( ndo , p , length ) ; //<S2SV> return ( hdrlen ) ; //<S2SV> } //<S2SV> # ifdef ENABLE_SMB //<S2SV> if ( ssap == LLCSAP_NETBEUI && dsap == LLCSAP_NETBEUI //<S2SV> && ( ! ( control & LLC_S_FMT ) || control == LLC_U_FMT ) ) { //<S2SV> netbeui_print ( ndo , control , p , length ) ; //<S2SV> return ( hdrlen ) ; //<S2SV> } //<S2SV> # endif //<S2SV> if ( ssap == LLCSAP_ISONS && dsap == LLCSAP_ISONS //<S2SV> && control == LLC_UI ) { //<S2SV> isoclns_print ( ndo , p , length ) ; //<S2SV> return ( hdrlen ) ; //<S2SV> } //<S2SV> if ( ! ndo -> ndo_eflag ) { //<S2SV> if ( ssap == dsap ) { //<S2SV> if ( src == NULL || dst == NULL ) //<S2SV> ND_PRINT ( ( ndo , "%s<S2SV_blank>" , tok2str ( llc_values , "Unknown<S2SV_blank>DSAP<S2SV_blank>0x%02x" , dsap ) ) ) ; //<S2SV> else //<S2SV> ND_PRINT ( ( ndo , "%s<S2SV_blank>><S2SV_blank>%s<S2SV_blank>%s<S2SV_blank>" , //<S2SV> ( src -> addr_string ) ( ndo , src -> addr ) , //<S2SV> ( dst -> addr_string ) ( ndo , dst -> addr ) , //<S2SV> tok2str ( llc_values , "Unknown<S2SV_blank>DSAP<S2SV_blank>0x%02x" , dsap ) ) ) ; //<S2SV> } else { //<S2SV> if ( src == NULL || dst == NULL ) //<S2SV> ND_PRINT ( ( ndo , "%s<S2SV_blank>><S2SV_blank>%s<S2SV_blank>" , //<S2SV> tok2str ( llc_values , "Unknown<S2SV_blank>SSAP<S2SV_blank>0x%02x" , ssap ) , //<S2SV> tok2str ( llc_values , "Unknown<S2SV_blank>DSAP<S2SV_blank>0x%02x" , dsap ) ) ) ; //<S2SV> else //<S2SV> ND_PRINT ( ( ndo , "%s<S2SV_blank>%s<S2SV_blank>><S2SV_blank>%s<S2SV_blank>%s<S2SV_blank>" , //<S2SV> ( src -> addr_string ) ( ndo , src -> addr ) , //<S2SV> tok2str ( llc_values , "Unknown<S2SV_blank>SSAP<S2SV_blank>0x%02x" , ssap ) , //<S2SV> ( dst -> addr_string ) ( ndo , dst -> addr ) , //<S2SV> tok2str ( llc_values , "Unknown<S2SV_blank>DSAP<S2SV_blank>0x%02x" , dsap ) ) ) ; //<S2SV> } //<S2SV> } //<S2SV> if ( is_u ) { //<S2SV> ND_PRINT ( ( ndo , "Unnumbered,<S2SV_blank>%s,<S2SV_blank>Flags<S2SV_blank>[%s],<S2SV_blank>length<S2SV_blank>%u" , //<S2SV> tok2str ( llc_cmd_values , "%02x" , LLC_U_CMD ( control ) ) , //<S2SV> tok2str ( llc_flag_values , "?" , ( ssap_field & LLC_GSAP ) | ( control & LLC_U_POLL ) ) , //<S2SV> length + hdrlen ) ) ; //<S2SV> if ( ( control & ~ LLC_U_POLL ) == LLC_XID ) { //<S2SV> if ( length == 0 ) { //<S2SV> return ( hdrlen ) ; //<S2SV> } //<S2SV> if ( caplen < 1 ) { //<S2SV> ND_PRINT ( ( ndo , "[|llc]" ) ) ; //<S2SV> if ( caplen > 0 ) //<S2SV> ND_DEFAULTPRINT ( ( const u_char * ) p , caplen ) ; //<S2SV> return ( hdrlen ) ; //<S2SV> } //<S2SV> if ( * p == LLC_XID_FI ) { //<S2SV> if ( caplen < 3 || length < 3 ) { //<S2SV> ND_PRINT ( ( ndo , "[|llc]" ) ) ; //<S2SV> if ( caplen > 0 ) //<S2SV> ND_DEFAULTPRINT ( ( const u_char * ) p , caplen ) ; //<S2SV> } else //<S2SV> ND_PRINT ( ( ndo , ":<S2SV_blank>%02x<S2SV_blank>%02x" , p [ 1 ] , p [ 2 ] ) ) ; //<S2SV> return ( hdrlen ) ; //<S2SV> } //<S2SV> } //<S2SV> } else { //<S2SV> if ( ( control & LLC_S_FMT ) == LLC_S_FMT ) { //<S2SV> ND_PRINT ( ( ndo , "Supervisory,<S2SV_blank>%s,<S2SV_blank>rcv<S2SV_blank>seq<S2SV_blank>%u,<S2SV_blank>Flags<S2SV_blank>[%s],<S2SV_blank>length<S2SV_blank>%u" , //<S2SV> tok2str ( llc_supervisory_values , "?" , LLC_S_CMD ( control ) ) , //<S2SV> LLC_IS_NR ( control ) , //<S2SV> tok2str ( llc_flag_values , "?" , ( ssap_field & LLC_GSAP ) | ( control & LLC_IS_POLL ) ) , //<S2SV> length + hdrlen ) ) ; //<S2SV> return ( hdrlen ) ; //<S2SV> } else { //<S2SV> ND_PRINT ( ( ndo , "Information,<S2SV_blank>send<S2SV_blank>seq<S2SV_blank>%u,<S2SV_blank>rcv<S2SV_blank>seq<S2SV_blank>%u,<S2SV_blank>Flags<S2SV_blank>[%s],<S2SV_blank>length<S2SV_blank>%u" , //<S2SV> LLC_I_NS ( control ) , //<S2SV> LLC_IS_NR ( control ) , //<S2SV> tok2str ( llc_flag_values , "?" , ( ssap_field & LLC_GSAP ) | ( control & LLC_IS_POLL ) ) , //<S2SV> length + hdrlen ) ) ; //<S2SV> } //<S2SV> } //<S2SV> return ( - hdrlen ) ; //<S2SV> } //<S2SV> 