void //<S2SV> isoclns_print ( netdissect_options * ndo , //<S2SV> const uint8_t * p , u_int length , u_int caplen ) //<S2SV> { //<S2SV> if ( caplen <= 1 ) { //<S2SV> ND_PRINT ( ( ndo , "|OSI" ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> if ( ndo -> ndo_eflag ) //<S2SV> ND_PRINT ( ( ndo , "OSI<S2SV_blank>NLPID<S2SV_blank>%s<S2SV_blank>(0x%02x):<S2SV_blank>" , tok2str ( nlpid_values , "Unknown" , * p ) , * p ) ) ; //<S2SV> switch ( * p ) { //<S2SV> case NLPID_CLNP : //<S2SV> if ( ! clnp_print ( ndo , p , length ) ) //<S2SV> print_unknown_data ( ndo , p , "\\n\\t" , caplen ) ; //<S2SV> break ; //<S2SV> case NLPID_ESIS : //<S2SV> esis_print ( ndo , p , length ) ; //<S2SV> return ; //<S2SV> case NLPID_ISIS : //<S2SV> if ( ! isis_print ( ndo , p , length ) ) //<S2SV> print_unknown_data ( ndo , p , "\\n\\t" , caplen ) ; //<S2SV> break ; //<S2SV> case NLPID_NULLNS : //<S2SV> ND_PRINT ( ( ndo , "%slength:<S2SV_blank>%u" , ndo -> ndo_eflag ? "" : ",<S2SV_blank>" , length ) ) ; //<S2SV> break ; //<S2SV> case NLPID_Q933 : //<S2SV> q933_print ( ndo , p + 1 , length - 1 ) ; //<S2SV> break ; //<S2SV> case NLPID_IP : //<S2SV> ip_print ( ndo , p + 1 , length - 1 ) ; //<S2SV> break ; //<S2SV> case NLPID_IP6 : //<S2SV> ip6_print ( ndo , p + 1 , length - 1 ) ; //<S2SV> break ; //<S2SV> case NLPID_PPP : //<S2SV> ppp_print ( ndo , p + 1 , length - 1 ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> if ( ! ndo -> ndo_eflag ) //<S2SV> ND_PRINT ( ( ndo , "OSI<S2SV_blank>NLPID<S2SV_blank>0x%02x<S2SV_blank>unknown" , * p ) ) ; //<S2SV> ND_PRINT ( ( ndo , "%slength:<S2SV_blank>%u" , ndo -> ndo_eflag ? "" : ",<S2SV_blank>" , length ) ) ; //<S2SV> if ( caplen > 1 ) //<S2SV> print_unknown_data ( ndo , p , "\\n\\t" , caplen ) ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> 