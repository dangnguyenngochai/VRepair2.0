const char * string_of_NPNVariable ( int variable ) //<S2SV> { //<S2SV> const char * str ; //<S2SV> switch ( variable ) { //<S2SV> # define _ ( VAL ) case VAL : str = # VAL ; break ; //<S2SV> _ ( NPNVxDisplay ) ; //<S2SV> _ ( NPNVxtAppContext ) ; //<S2SV> _ ( NPNVnetscapeWindow ) ; //<S2SV> _ ( NPNVjavascriptEnabledBool ) ; //<S2SV> _ ( NPNVasdEnabledBool ) ; //<S2SV> _ ( NPNVisOfflineBool ) ; //<S2SV> _ ( NPNVserviceManager ) ; //<S2SV> _ ( NPNVDOMElement ) ; //<S2SV> _ ( NPNVDOMWindow ) ; //<S2SV> _ ( NPNVToolkit ) ; //<S2SV> _ ( NPNVSupportsXEmbedBool ) ; //<S2SV> _ ( NPNVWindowNPObject ) ; //<S2SV> _ ( NPNVPluginElementNPObject ) ; //<S2SV> _ ( NPNVSupportsWindowless ) ; //<S2SV> # undef _ //<S2SV> default : //<S2SV> switch ( variable & 0xff ) { //<S2SV> # define _ ( VAL , VAR ) case VAL : str = # VAR ; break //<S2SV> _ ( 10 , NPNVserviceManager ) ; //<S2SV> _ ( 11 , NPNVDOMElement ) ; //<S2SV> _ ( 12 , NPNVDOMWindow ) ; //<S2SV> _ ( 13 , NPNVToolkit ) ; //<S2SV> # undef _ //<S2SV> default : //<S2SV> str = "<unknown<S2SV_blank>variable>" ; //<S2SV> break ; //<S2SV> } //<S2SV> break ; //<S2SV> } //<S2SV> return str ; //<S2SV> } //<S2SV> 