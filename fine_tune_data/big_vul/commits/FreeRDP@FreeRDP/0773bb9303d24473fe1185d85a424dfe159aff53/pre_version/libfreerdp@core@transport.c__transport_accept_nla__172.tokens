BOOL transport_accept_nla ( rdpTransport * transport ) //<S2SV> { //<S2SV> freerdp * instance ; //<S2SV> rdpSettings * settings ; //<S2SV> if ( transport -> TlsIn == NULL ) //<S2SV> transport -> TlsIn = tls_new ( transport -> settings ) ; //<S2SV> if ( transport -> TlsOut == NULL ) //<S2SV> transport -> TlsOut = transport -> TlsIn ; //<S2SV> transport -> layer = TRANSPORT_LAYER_TLS ; //<S2SV> transport -> TlsIn -> sockfd = transport -> TcpIn -> sockfd ; //<S2SV> if ( tls_accept ( transport -> TlsIn , transport -> settings -> CertificateFile , transport -> settings -> PrivateKeyFile ) != TRUE ) //<S2SV> return FALSE ; //<S2SV> if ( transport -> settings -> Authentication != TRUE ) //<S2SV> return TRUE ; //<S2SV> settings = transport -> settings ; //<S2SV> instance = ( freerdp * ) settings -> instance ; //<S2SV> if ( transport -> credssp == NULL ) //<S2SV> transport -> credssp = credssp_new ( instance , transport , settings ) ; //<S2SV> if ( credssp_authenticate ( transport -> credssp ) < 0 ) //<S2SV> { //<S2SV> fprintf ( stderr , "client<S2SV_blank>authentication<S2SV_blank>failure\\n" ) ; //<S2SV> credssp_free ( transport -> credssp ) ; //<S2SV> return FALSE ; //<S2SV> } //<S2SV> return TRUE ; //<S2SV> } //<S2SV> 