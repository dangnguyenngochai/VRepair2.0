static UINT32 nsc_rle_encode ( const BYTE * in , BYTE * out , UINT32 originalSize ) //<S2SV> { //<S2SV> UINT32 left ; //<S2SV> UINT32 runlength = 1 ; //<S2SV> UINT32 planeSize = 0 ; //<S2SV> left = originalSize ; //<S2SV> while ( left > 4 && planeSize < originalSize - 4 ) //<S2SV> { //<S2SV> if ( left > 5 && * in == * ( in + 1 ) ) //<S2SV> { //<S2SV> runlength ++ ; //<S2SV> } //<S2SV> else if ( runlength == 1 ) //<S2SV> { //<S2SV> * out ++ = * in ; //<S2SV> planeSize ++ ; //<S2SV> } //<S2SV> else if ( runlength < 256 ) //<S2SV> { //<S2SV> * out ++ = * in ; //<S2SV> * out ++ = * in ; //<S2SV> * out ++ = runlength - 2 ; //<S2SV> runlength = 1 ; //<S2SV> planeSize += 3 ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> * out ++ = * in ; //<S2SV> * out ++ = * in ; //<S2SV> * out ++ = 0xFF ; //<S2SV> * out ++ = ( runlength & 0x000000FF ) ; //<S2SV> * out ++ = ( runlength & 0x0000FF00 ) >> 8 ; //<S2SV> * out ++ = ( runlength & 0x00FF0000 ) >> 16 ; //<S2SV> * out ++ = ( runlength & 0xFF000000 ) >> 24 ; //<S2SV> runlength = 1 ; //<S2SV> planeSize += 7 ; //<S2SV> } //<S2SV> in ++ ; //<S2SV> left -- ; //<S2SV> } //<S2SV> if ( planeSize < originalSize - 4 ) //<S2SV> CopyMemory ( out , in , 4 ) ; //<S2SV> planeSize += 4 ; //<S2SV> return planeSize ; //<S2SV> } //<S2SV> 