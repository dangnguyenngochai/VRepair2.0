static BOOL nsc_encode_subsampling ( NSC_CONTEXT * context ) //<S2SV> { //<S2SV> UINT16 x ; //<S2SV> UINT16 y ; //<S2SV> UINT32 tempWidth ; //<S2SV> UINT32 tempHeight ; //<S2SV> if ( ! context ) //<S2SV> return FALSE ; //<S2SV> tempWidth = ROUND_UP_TO ( context -> width , 8 ) ; //<S2SV> tempHeight = ROUND_UP_TO ( context -> height , 2 ) ; //<S2SV> if ( tempHeight == 0 ) //<S2SV> return FALSE ; //<S2SV> if ( tempWidth > context -> priv -> PlaneBuffersLength / tempHeight ) //<S2SV> return FALSE ; //<S2SV> for ( y = 0 ; y < tempHeight >> 1 ; y ++ ) //<S2SV> { //<S2SV> BYTE * co_dst = context -> priv -> PlaneBuffers [ 1 ] + y * ( tempWidth >> 1 ) ; //<S2SV> BYTE * cg_dst = context -> priv -> PlaneBuffers [ 2 ] + y * ( tempWidth >> 1 ) ; //<S2SV> const INT8 * co_src0 = ( INT8 * ) context -> priv -> PlaneBuffers [ 1 ] + ( y << 1 ) * tempWidth ; //<S2SV> const INT8 * co_src1 = co_src0 + tempWidth ; //<S2SV> const INT8 * cg_src0 = ( INT8 * ) context -> priv -> PlaneBuffers [ 2 ] + ( y << 1 ) * tempWidth ; //<S2SV> const INT8 * cg_src1 = cg_src0 + tempWidth ; //<S2SV> for ( x = 0 ; x < tempWidth >> 1 ; x ++ ) //<S2SV> { //<S2SV> * co_dst ++ = ( BYTE ) ( ( ( INT16 ) * co_src0 + ( INT16 ) * ( co_src0 + 1 ) + //<S2SV> ( INT16 ) * co_src1 + ( INT16 ) * ( co_src1 + 1 ) ) >> 2 ) ; //<S2SV> * cg_dst ++ = ( BYTE ) ( ( ( INT16 ) * cg_src0 + ( INT16 ) * ( cg_src0 + 1 ) + //<S2SV> ( INT16 ) * cg_src1 + ( INT16 ) * ( cg_src1 + 1 ) ) >> 2 ) ; //<S2SV> co_src0 += 2 ; //<S2SV> co_src1 += 2 ; //<S2SV> cg_src0 += 2 ; //<S2SV> cg_src1 += 2 ; //<S2SV> } //<S2SV> } //<S2SV> return TRUE ; //<S2SV> } //<S2SV> 