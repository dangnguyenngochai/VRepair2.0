static BOOL gdi_Bitmap_Decompress ( rdpContext * context , rdpBitmap * bitmap , //<S2SV> const BYTE * pSrcData , UINT32 DstWidth , UINT32 DstHeight , //<S2SV> UINT32 bpp , UINT32 length , BOOL compressed , //<S2SV> UINT32 codecId ) //<S2SV> { //<S2SV> UINT32 SrcSize = length ; //<S2SV> rdpGdi * gdi = context -> gdi ; //<S2SV> UINT32 size = DstWidth * DstHeight ; //<S2SV> bitmap -> compressed = FALSE ; //<S2SV> bitmap -> format = gdi -> dstFormat ; //<S2SV> if ( ( GetBytesPerPixel ( bitmap -> format ) == 0 ) || //<S2SV> ( DstWidth == 0 ) || ( DstHeight == 0 ) || ( DstWidth > UINT32_MAX / DstHeight ) || //<S2SV> ( size > ( UINT32_MAX / GetBytesPerPixel ( bitmap -> format ) ) ) ) //<S2SV> return FALSE ; //<S2SV> size *= GetBytesPerPixel ( bitmap -> format ) ; //<S2SV> bitmap -> length = size ; //<S2SV> bitmap -> data = ( BYTE * ) _aligned_malloc ( bitmap -> length , 16 ) ; //<S2SV> if ( ! bitmap -> data ) //<S2SV> return FALSE ; //<S2SV> if ( compressed ) //<S2SV> { //<S2SV> if ( bpp < 32 ) //<S2SV> { //<S2SV> if ( ! interleaved_decompress ( context -> codecs -> interleaved , //<S2SV> pSrcData , SrcSize , //<S2SV> DstWidth , DstHeight , //<S2SV> bpp , //<S2SV> bitmap -> data , bitmap -> format , //<S2SV> 0 , 0 , 0 , DstWidth , DstHeight , //<S2SV> & gdi -> palette ) ) //<S2SV> return FALSE ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> if ( ! planar_decompress ( context -> codecs -> planar , pSrcData , SrcSize , //<S2SV> DstWidth , DstHeight , //<S2SV> bitmap -> data , bitmap -> format , 0 , 0 , 0 , //<S2SV> DstWidth , DstHeight , TRUE ) ) //<S2SV> return FALSE ; //<S2SV> } //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> const UINT32 SrcFormat = gdi_get_pixel_format ( bpp ) ; //<S2SV> const size_t sbpp = GetBytesPerPixel ( SrcFormat ) ; //<S2SV> const size_t dbpp = GetBytesPerPixel ( bitmap -> format ) ; //<S2SV> if ( ( sbpp == 0 ) || ( dbpp == 0 ) ) //<S2SV> return FALSE ; //<S2SV> else //<S2SV> { //<S2SV> const size_t dstSize = SrcSize * dbpp / sbpp ; //<S2SV> if ( dstSize < bitmap -> length ) //<S2SV> return FALSE ; //<S2SV> } //<S2SV> if ( ! freerdp_image_copy ( bitmap -> data , bitmap -> format , 0 , 0 , 0 , //<S2SV> DstWidth , DstHeight , pSrcData , SrcFormat , //<S2SV> 0 , 0 , 0 , & gdi -> palette , FREERDP_FLIP_VERTICAL ) ) //<S2SV> return FALSE ; //<S2SV> } //<S2SV> return TRUE ; //<S2SV> } //<S2SV> 