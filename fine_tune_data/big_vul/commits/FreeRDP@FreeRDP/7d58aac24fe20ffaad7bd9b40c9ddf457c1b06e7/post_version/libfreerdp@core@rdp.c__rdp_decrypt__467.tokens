BOOL rdp_decrypt ( rdpRdp * rdp , STREAM * s , int length , UINT16 securityFlags ) //<S2SV> { //<S2SV> BYTE cmac [ 8 ] ; //<S2SV> BYTE wmac [ 8 ] ; //<S2SV> if ( rdp -> settings -> EncryptionMethods == ENCRYPTION_METHOD_FIPS ) //<S2SV> { //<S2SV> UINT16 len ; //<S2SV> BYTE version , pad ; //<S2SV> BYTE * sig ; //<S2SV> if ( stream_get_left ( s ) < 12 ) //<S2SV> return FALSE ; //<S2SV> stream_read_UINT16 ( s , len ) ; //<S2SV> stream_read_BYTE ( s , version ) ; //<S2SV> stream_read_BYTE ( s , pad ) ; //<S2SV> sig = s -> p ; //<S2SV> stream_seek ( s , 8 ) ; //<S2SV> length -= 12 ; //<S2SV> if ( ! security_fips_decrypt ( s -> p , length , rdp ) ) //<S2SV> { //<S2SV> printf ( "FATAL:<S2SV_blank>cannot<S2SV_blank>decrypt\\n" ) ; //<S2SV> return FALSE ; //<S2SV> } //<S2SV> if ( ! security_fips_check_signature ( s -> p , length - pad , sig , rdp ) ) //<S2SV> { //<S2SV> printf ( "FATAL:<S2SV_blank>invalid<S2SV_blank>packet<S2SV_blank>signature\\n" ) ; //<S2SV> return FALSE ; //<S2SV> } //<S2SV> s -> size -= pad ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> if ( stream_get_left ( s ) < 8 ) //<S2SV> return FALSE ; //<S2SV> stream_read ( s , wmac , sizeof ( wmac ) ) ; //<S2SV> length -= sizeof ( wmac ) ; //<S2SV> if ( ! security_decrypt ( s -> p , length , rdp ) ) //<S2SV> return FALSE ; //<S2SV> if ( securityFlags & SEC_SECURE_CHECKSUM ) //<S2SV> security_salted_mac_signature ( rdp , s -> p , length , FALSE , cmac ) ; //<S2SV> else //<S2SV> security_mac_signature ( rdp , s -> p , length , cmac ) ; //<S2SV> if ( memcmp ( wmac , cmac , sizeof ( wmac ) ) != 0 ) //<S2SV> { //<S2SV> printf ( "WARNING:<S2SV_blank>invalid<S2SV_blank>packet<S2SV_blank>signature\\n" ) ; //<S2SV> } //<S2SV> return TRUE ; //<S2SV> } //<S2SV> 