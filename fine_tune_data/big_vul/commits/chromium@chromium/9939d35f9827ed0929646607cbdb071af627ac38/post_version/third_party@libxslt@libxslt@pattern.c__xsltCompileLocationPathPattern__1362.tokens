static void //<S2SV> xsltCompileLocationPathPattern ( xsltParserContextPtr ctxt , int novar ) { //<S2SV> SKIP_BLANKS ; //<S2SV> if ( ( CUR == '/' ) && ( NXT ( 1 ) == '/' ) ) { //<S2SV> NEXT ; //<S2SV> NEXT ; //<S2SV> ctxt -> comp -> priority = 0.5 ; //<S2SV> xsltCompileRelativePathPattern ( ctxt , NULL , novar ) ; //<S2SV> } else if ( CUR == '/' ) { //<S2SV> NEXT ; //<S2SV> SKIP_BLANKS ; //<S2SV> PUSH ( XSLT_OP_ROOT , NULL , NULL , novar ) ; //<S2SV> if ( ( CUR != 0 ) && ( CUR != '|' ) ) { //<S2SV> PUSH ( XSLT_OP_PARENT , NULL , NULL , novar ) ; //<S2SV> xsltCompileRelativePathPattern ( ctxt , NULL , novar ) ; //<S2SV> } //<S2SV> } else if ( CUR == '*' ) { //<S2SV> xsltCompileRelativePathPattern ( ctxt , NULL , novar ) ; //<S2SV> } else if ( CUR == '@' ) { //<S2SV> xsltCompileRelativePathPattern ( ctxt , NULL , novar ) ; //<S2SV> } else { //<S2SV> xmlChar * name ; //<S2SV> name = xsltScanNCName ( ctxt ) ; //<S2SV> if ( name == NULL ) { //<S2SV> xsltTransformError ( NULL , NULL , NULL , //<S2SV> "xsltCompileLocationPathPattern<S2SV_blank>:<S2SV_blank>Name<S2SV_blank>expected\\n" ) ; //<S2SV> ctxt -> error = 1 ; //<S2SV> return ; //<S2SV> } //<S2SV> SKIP_BLANKS ; //<S2SV> if ( ( CUR == '(' ) && ! xmlXPathIsNodeType ( name ) ) { //<S2SV> xsltCompileIdKeyPattern ( ctxt , name , 1 , novar , 0 ) ; //<S2SV> if ( ctxt -> error ) //<S2SV> return ; //<S2SV> if ( ( CUR == '/' ) && ( NXT ( 1 ) == '/' ) ) { //<S2SV> PUSH ( XSLT_OP_ANCESTOR , NULL , NULL , novar ) ; //<S2SV> NEXT ; //<S2SV> NEXT ; //<S2SV> SKIP_BLANKS ; //<S2SV> xsltCompileRelativePathPattern ( ctxt , NULL , novar ) ; //<S2SV> } else if ( CUR == '/' ) { //<S2SV> PUSH ( XSLT_OP_PARENT , NULL , NULL , novar ) ; //<S2SV> NEXT ; //<S2SV> SKIP_BLANKS ; //<S2SV> xsltCompileRelativePathPattern ( ctxt , NULL , novar ) ; //<S2SV> } //<S2SV> return ; //<S2SV> } //<S2SV> xsltCompileRelativePathPattern ( ctxt , name , novar ) ; //<S2SV> } //<S2SV> error : //<S2SV> return ; //<S2SV> } //<S2SV> 