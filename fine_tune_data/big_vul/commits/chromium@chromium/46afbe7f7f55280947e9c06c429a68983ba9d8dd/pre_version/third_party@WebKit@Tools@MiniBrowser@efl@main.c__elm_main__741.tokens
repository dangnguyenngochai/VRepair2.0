EAPI_MAIN int //<S2SV> elm_main ( int argc , char * argv [ ] ) //<S2SV> { //<S2SV> int args = 1 ; //<S2SV> unsigned char quitOption = 0 ; //<S2SV> Browser_Window * window ; //<S2SV> Ecore_Getopt_Value values [ ] = { //<S2SV> ECORE_GETOPT_VALUE_STR ( evas_engine_name ) , //<S2SV> ECORE_GETOPT_VALUE_BOOL ( quitOption ) , //<S2SV> ECORE_GETOPT_VALUE_BOOL ( frame_flattening_enabled ) , //<S2SV> ECORE_GETOPT_VALUE_BOOL ( quitOption ) , //<S2SV> ECORE_GETOPT_VALUE_BOOL ( quitOption ) , //<S2SV> ECORE_GETOPT_VALUE_BOOL ( quitOption ) , //<S2SV> ECORE_GETOPT_VALUE_NONE //<S2SV> } ; //<S2SV> if ( ! ewk_init ( ) ) //<S2SV> return EXIT_FAILURE ; //<S2SV> ewk_view_smart_class_set ( miniBrowserViewSmartClass ( ) ) ; //<S2SV> ecore_app_args_set ( argc , ( const char * * ) argv ) ; //<S2SV> args = ecore_getopt_parse ( & options , values , argc , argv ) ; //<S2SV> if ( args < 0 ) //<S2SV> return quit ( EINA_FALSE , "ERROR:<S2SV_blank>could<S2SV_blank>not<S2SV_blank>parse<S2SV_blank>options.\\n" ) ; //<S2SV> if ( quitOption ) //<S2SV> return quit ( EINA_TRUE , NULL ) ; //<S2SV> if ( evas_engine_name ) //<S2SV> elm_config_preferred_engine_set ( evas_engine_name ) ; //<S2SV> # if defined ( WTF_USE_ACCELERATED_COMPOSITING ) && defined ( HAVE_ECORE_X ) //<S2SV> else { //<S2SV> evas_engine_name = "opengl_x11" ; //<S2SV> elm_config_preferred_engine_set ( evas_engine_name ) ; //<S2SV> } //<S2SV> # endif //<S2SV> Ewk_Context * context = ewk_context_default_get ( ) ; //<S2SV> ewk_context_favicon_database_directory_set ( context , NULL ) ; //<S2SV> if ( args < argc ) { //<S2SV> char * url = url_from_user_input ( argv [ args ] ) ; //<S2SV> window = window_create ( url ) ; //<S2SV> free ( url ) ; //<S2SV> } else //<S2SV> window = window_create ( DEFAULT_URL ) ; //<S2SV> if ( ! window ) //<S2SV> return quit ( EINA_FALSE , "ERROR:<S2SV_blank>could<S2SV_blank>not<S2SV_blank>create<S2SV_blank>browser<S2SV_blank>window.\\n" ) ; //<S2SV> windows = eina_list_append ( windows , window ) ; //<S2SV> elm_run ( ) ; //<S2SV> return quit ( EINA_TRUE , NULL ) ; //<S2SV> } //<S2SV> 