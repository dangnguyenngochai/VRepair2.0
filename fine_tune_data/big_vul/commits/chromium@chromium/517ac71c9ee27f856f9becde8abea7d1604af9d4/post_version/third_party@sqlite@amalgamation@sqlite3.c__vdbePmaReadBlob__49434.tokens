static int vdbePmaReadBlob ( //<S2SV> PmaReader * p , //<S2SV> int nByte , //<S2SV> u8 * * ppOut //<S2SV> ) { //<S2SV> int iBuf ; //<S2SV> int nAvail ; //<S2SV> if ( p -> aMap ) { //<S2SV> * ppOut = & p -> aMap [ p -> iReadOff ] ; //<S2SV> p -> iReadOff += nByte ; //<S2SV> return SQLITE_OK ; //<S2SV> } //<S2SV> assert ( p -> aBuffer ) ; //<S2SV> iBuf = p -> iReadOff % p -> nBuffer ; //<S2SV> if ( iBuf == 0 ) { //<S2SV> int nRead ; //<S2SV> int rc ; //<S2SV> if ( ( p -> iEof - p -> iReadOff ) > ( i64 ) p -> nBuffer ) { //<S2SV> nRead = p -> nBuffer ; //<S2SV> } else { //<S2SV> nRead = ( int ) ( p -> iEof - p -> iReadOff ) ; //<S2SV> } //<S2SV> assert ( nRead > 0 ) ; //<S2SV> rc = sqlite3OsRead ( p -> pFd , p -> aBuffer , nRead , p -> iReadOff ) ; //<S2SV> assert ( rc != SQLITE_IOERR_SHORT_READ ) ; //<S2SV> if ( rc != SQLITE_OK ) return rc ; //<S2SV> } //<S2SV> nAvail = p -> nBuffer - iBuf ; //<S2SV> if ( nByte <= nAvail ) { //<S2SV> * ppOut = & p -> aBuffer [ iBuf ] ; //<S2SV> p -> iReadOff += nByte ; //<S2SV> } else { //<S2SV> int nRem ; //<S2SV> if ( p -> nAlloc < nByte ) { //<S2SV> u8 * aNew ; //<S2SV> sqlite3_int64 nNew = MAX ( 128 , 2 * ( sqlite3_int64 ) p -> nAlloc ) ; //<S2SV> while ( nByte > nNew ) nNew = nNew * 2 ; //<S2SV> aNew = sqlite3Realloc ( p -> aAlloc , nNew ) ; //<S2SV> if ( ! aNew ) return SQLITE_NOMEM_BKPT ; //<S2SV> p -> nAlloc = nNew ; //<S2SV> p -> aAlloc = aNew ; //<S2SV> } //<S2SV> memcpy ( p -> aAlloc , & p -> aBuffer [ iBuf ] , nAvail ) ; //<S2SV> p -> iReadOff += nAvail ; //<S2SV> nRem = nByte - nAvail ; //<S2SV> while ( nRem > 0 ) { //<S2SV> int rc ; //<S2SV> int nCopy ; //<S2SV> u8 * aNext ; //<S2SV> nCopy = nRem ; //<S2SV> if ( nRem > p -> nBuffer ) nCopy = p -> nBuffer ; //<S2SV> rc = vdbePmaReadBlob ( p , nCopy , & aNext ) ; //<S2SV> if ( rc != SQLITE_OK ) return rc ; //<S2SV> assert ( aNext != p -> aAlloc ) ; //<S2SV> memcpy ( & p -> aAlloc [ nByte - nRem ] , aNext , nCopy ) ; //<S2SV> nRem -= nCopy ; //<S2SV> } //<S2SV> * ppOut = p -> aAlloc ; //<S2SV> } //<S2SV> return SQLITE_OK ; //<S2SV> } //<S2SV> 