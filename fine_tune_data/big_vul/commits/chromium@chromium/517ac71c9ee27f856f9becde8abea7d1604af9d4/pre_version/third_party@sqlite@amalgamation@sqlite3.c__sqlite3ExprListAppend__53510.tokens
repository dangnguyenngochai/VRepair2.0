SQLITE_PRIVATE ExprList * sqlite3ExprListAppend ( //<S2SV> Parse * pParse , //<S2SV> ExprList * pList , //<S2SV> Expr * pExpr //<S2SV> ) { //<S2SV> struct ExprList_item * pItem ; //<S2SV> sqlite3 * db = pParse -> db ; //<S2SV> assert ( db != 0 ) ; //<S2SV> if ( pList == 0 ) { //<S2SV> pList = sqlite3DbMallocRawNN ( db , sizeof ( ExprList ) ) ; //<S2SV> if ( pList == 0 ) { //<S2SV> goto no_mem ; //<S2SV> } //<S2SV> pList -> nExpr = 0 ; //<S2SV> } else if ( ( pList -> nExpr & ( pList -> nExpr - 1 ) ) == 0 ) { //<S2SV> ExprList * pNew ; //<S2SV> pNew = sqlite3DbRealloc ( db , pList , //<S2SV> sizeof ( * pList ) + ( 2 * pList -> nExpr - 1 ) * sizeof ( pList -> a [ 0 ] ) ) ; //<S2SV> if ( pNew == 0 ) { //<S2SV> goto no_mem ; //<S2SV> } //<S2SV> pList = pNew ; //<S2SV> } //<S2SV> pItem = & pList -> a [ pList -> nExpr ++ ] ; //<S2SV> assert ( offsetof ( struct ExprList_item , zName ) == sizeof ( pItem -> pExpr ) ) ; //<S2SV> assert ( offsetof ( struct ExprList_item , pExpr ) == 0 ) ; //<S2SV> memset ( & pItem -> zName , 0 , sizeof ( * pItem ) - offsetof ( struct ExprList_item , zName ) ) ; //<S2SV> pItem -> pExpr = pExpr ; //<S2SV> return pList ; //<S2SV> no_mem : //<S2SV> sqlite3ExprDelete ( db , pExpr ) ; //<S2SV> sqlite3ExprListDelete ( db , pList ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 