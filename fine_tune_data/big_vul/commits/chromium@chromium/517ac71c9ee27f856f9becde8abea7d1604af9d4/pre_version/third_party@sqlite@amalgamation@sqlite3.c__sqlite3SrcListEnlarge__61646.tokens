SQLITE_PRIVATE SrcList * sqlite3SrcListEnlarge ( //<S2SV> Parse * pParse , //<S2SV> SrcList * pSrc , //<S2SV> int nExtra , //<S2SV> int iStart //<S2SV> ) { //<S2SV> int i ; //<S2SV> assert ( iStart >= 0 ) ; //<S2SV> assert ( nExtra >= 1 ) ; //<S2SV> assert ( pSrc != 0 ) ; //<S2SV> assert ( iStart <= pSrc -> nSrc ) ; //<S2SV> if ( ( u32 ) pSrc -> nSrc + nExtra > pSrc -> nAlloc ) { //<S2SV> SrcList * pNew ; //<S2SV> int nAlloc = pSrc -> nSrc * 2 + nExtra ; //<S2SV> sqlite3 * db = pParse -> db ; //<S2SV> if ( pSrc -> nSrc + nExtra >= SQLITE_MAX_SRCLIST ) { //<S2SV> sqlite3ErrorMsg ( pParse , "too<S2SV_blank>many<S2SV_blank>FROM<S2SV_blank>clause<S2SV_blank>terms,<S2SV_blank>max:<S2SV_blank>%d" , //<S2SV> SQLITE_MAX_SRCLIST ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( nAlloc > SQLITE_MAX_SRCLIST ) nAlloc = SQLITE_MAX_SRCLIST ; //<S2SV> pNew = sqlite3DbRealloc ( db , pSrc , //<S2SV> sizeof ( * pSrc ) + ( nAlloc - 1 ) * sizeof ( pSrc -> a [ 0 ] ) ) ; //<S2SV> if ( pNew == 0 ) { //<S2SV> assert ( db -> mallocFailed ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> pSrc = pNew ; //<S2SV> pSrc -> nAlloc = nAlloc ; //<S2SV> } //<S2SV> for ( i = pSrc -> nSrc - 1 ; i >= iStart ; i -- ) { //<S2SV> pSrc -> a [ i + nExtra ] = pSrc -> a [ i ] ; //<S2SV> } //<S2SV> pSrc -> nSrc += nExtra ; //<S2SV> memset ( & pSrc -> a [ iStart ] , 0 , sizeof ( pSrc -> a [ 0 ] ) * nExtra ) ; //<S2SV> for ( i = iStart ; i < iStart + nExtra ; i ++ ) { //<S2SV> pSrc -> a [ i ] . iCursor = - 1 ; //<S2SV> } //<S2SV> return pSrc ; //<S2SV> } //<S2SV> 