void //<S2SV> xsltGenerateIdFunction ( xmlXPathParserContextPtr ctxt , int nargs ) { //<S2SV> xmlNodePtr cur = NULL ; //<S2SV> xmlXPathObjectPtr obj = NULL ; //<S2SV> long val ; //<S2SV> xmlChar str [ 30 ] ; //<S2SV> xmlDocPtr doc ; //<S2SV> if ( nargs == 0 ) { //<S2SV> cur = ctxt -> context -> node ; //<S2SV> } else if ( nargs == 1 ) { //<S2SV> xmlNodeSetPtr nodelist ; //<S2SV> int i , ret ; //<S2SV> if ( ( ctxt -> value == NULL ) || ( ctxt -> value -> type != XPATH_NODESET ) ) { //<S2SV> ctxt -> error = XPATH_INVALID_TYPE ; //<S2SV> xsltTransformError ( xsltXPathGetTransformContext ( ctxt ) , NULL , NULL , //<S2SV> "generate-id()<S2SV_blank>:<S2SV_blank>invalid<S2SV_blank>arg<S2SV_blank>expecting<S2SV_blank>a<S2SV_blank>node-set\\n" ) ; //<S2SV> return ; //<S2SV> } //<S2SV> obj = valuePop ( ctxt ) ; //<S2SV> nodelist = obj -> nodesetval ; //<S2SV> if ( ( nodelist == NULL ) || ( nodelist -> nodeNr <= 0 ) ) { //<S2SV> xmlXPathFreeObject ( obj ) ; //<S2SV> valuePush ( ctxt , xmlXPathNewCString ( "" ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> cur = nodelist -> nodeTab [ 0 ] ; //<S2SV> for ( i = 1 ; i < nodelist -> nodeNr ; i ++ ) { //<S2SV> ret = xmlXPathCmpNodes ( cur , nodelist -> nodeTab [ i ] ) ; //<S2SV> if ( ret == - 1 ) //<S2SV> cur = nodelist -> nodeTab [ i ] ; //<S2SV> } //<S2SV> } else { //<S2SV> xsltTransformError ( xsltXPathGetTransformContext ( ctxt ) , NULL , NULL , //<S2SV> "generate-id()<S2SV_blank>:<S2SV_blank>invalid<S2SV_blank>number<S2SV_blank>of<S2SV_blank>args<S2SV_blank>%d\\n" , nargs ) ; //<S2SV> ctxt -> error = XPATH_INVALID_ARITY ; //<S2SV> return ; //<S2SV> } //<S2SV> if ( cur -> type != XML_NAMESPACE_DECL ) //<S2SV> doc = cur -> doc ; //<S2SV> else { //<S2SV> xmlNsPtr ns = ( xmlNsPtr ) cur ; //<S2SV> if ( ns -> context != NULL ) //<S2SV> doc = ns -> context ; //<S2SV> else //<S2SV> doc = ctxt -> context -> doc ; //<S2SV> } //<S2SV> if ( obj ) //<S2SV> xmlXPathFreeObject ( obj ) ; //<S2SV> val = ( long ) ( ( char * ) cur - ( char * ) doc ) ; //<S2SV> if ( val >= 0 ) { //<S2SV> sprintf ( ( char * ) str , "idp%ld" , val ) ; //<S2SV> } else { //<S2SV> sprintf ( ( char * ) str , "idm%ld" , - val ) ; //<S2SV> } //<S2SV> valuePush ( ctxt , xmlXPathNewString ( str ) ) ; //<S2SV> } //<S2SV> 