private int //<S2SV> cdf_file_property_info ( struct magic_set * ms , const cdf_property_info_t * info , //<S2SV> size_t count , const uint64_t clsid [ 2 ] ) //<S2SV> { //<S2SV> size_t i ; //<S2SV> cdf_timestamp_t tp ; //<S2SV> struct timespec ts ; //<S2SV> char buf [ 64 ] ; //<S2SV> const char * str = NULL ; //<S2SV> const char * s ; //<S2SV> int len ; //<S2SV> if ( ! NOTMIME ( ms ) ) //<S2SV> str = cdf_clsid_to_mime ( clsid , clsid2mime ) ; //<S2SV> for ( i = 0 ; i < count ; i ++ ) { //<S2SV> cdf_print_property_name ( buf , sizeof ( buf ) , info [ i ] . pi_id ) ; //<S2SV> switch ( info [ i ] . pi_type ) { //<S2SV> case CDF_NULL : //<S2SV> break ; //<S2SV> case CDF_SIGNED16 : //<S2SV> if ( NOTMIME ( ms ) && file_printf ( ms , ",<S2SV_blank>%s:<S2SV_blank>%hd" , buf , //<S2SV> info [ i ] . pi_s16 ) == - 1 ) //<S2SV> return - 1 ; //<S2SV> break ; //<S2SV> case CDF_SIGNED32 : //<S2SV> if ( NOTMIME ( ms ) && file_printf ( ms , ",<S2SV_blank>%s:<S2SV_blank>%d" , buf , //<S2SV> info [ i ] . pi_s32 ) == - 1 ) //<S2SV> return - 1 ; //<S2SV> break ; //<S2SV> case CDF_UNSIGNED32 : //<S2SV> if ( NOTMIME ( ms ) && file_printf ( ms , ",<S2SV_blank>%s:<S2SV_blank>%u" , buf , //<S2SV> info [ i ] . pi_u32 ) == - 1 ) //<S2SV> return - 1 ; //<S2SV> break ; //<S2SV> case CDF_FLOAT : //<S2SV> if ( NOTMIME ( ms ) && file_printf ( ms , ",<S2SV_blank>%s:<S2SV_blank>%g" , buf , //<S2SV> info [ i ] . pi_f ) == - 1 ) //<S2SV> return - 1 ; //<S2SV> break ; //<S2SV> case CDF_DOUBLE : //<S2SV> if ( NOTMIME ( ms ) && file_printf ( ms , ",<S2SV_blank>%s:<S2SV_blank>%g" , buf , //<S2SV> info [ i ] . pi_d ) == - 1 ) //<S2SV> return - 1 ; //<S2SV> break ; //<S2SV> case CDF_LENGTH32_STRING : //<S2SV> case CDF_LENGTH32_WSTRING : //<S2SV> len = info [ i ] . pi_str . s_len ; //<S2SV> if ( len > 1 ) { //<S2SV> char vbuf [ 1024 ] ; //<S2SV> size_t j , k = 1 ; //<S2SV> if ( info [ i ] . pi_type == CDF_LENGTH32_WSTRING ) //<S2SV> k ++ ; //<S2SV> s = info [ i ] . pi_str . s_buf ; //<S2SV> for ( j = 0 ; j < sizeof ( vbuf ) && len -- ; //<S2SV> j ++ , s += k ) { //<S2SV> if ( * s == '\\0' ) //<S2SV> break ; //<S2SV> if ( isprint ( ( unsigned char ) * s ) ) //<S2SV> vbuf [ j ] = * s ; //<S2SV> } //<S2SV> if ( j == sizeof ( vbuf ) ) //<S2SV> -- j ; //<S2SV> vbuf [ j ] = '\\0' ; //<S2SV> if ( NOTMIME ( ms ) ) { //<S2SV> if ( vbuf [ 0 ] ) { //<S2SV> if ( file_printf ( ms , ",<S2SV_blank>%s:<S2SV_blank>%s" , //<S2SV> buf , vbuf ) == - 1 ) //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } else if ( str == NULL && info [ i ] . pi_id == //<S2SV> CDF_PROPERTY_NAME_OF_APPLICATION ) { //<S2SV> str = cdf_app_to_mime ( vbuf , app2mime ) ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case CDF_FILETIME : //<S2SV> tp = info [ i ] . pi_tp ; //<S2SV> if ( tp != 0 ) { //<S2SV> char tbuf [ 64 ] ; //<S2SV> if ( tp < 1000000000000000LL ) { //<S2SV> cdf_print_elapsed_time ( tbuf , //<S2SV> sizeof ( tbuf ) , tp ) ; //<S2SV> if ( NOTMIME ( ms ) && file_printf ( ms , //<S2SV> ",<S2SV_blank>%s:<S2SV_blank>%s" , buf , tbuf ) == - 1 ) //<S2SV> return - 1 ; //<S2SV> } else { //<S2SV> char * c , * ec ; //<S2SV> cdf_timestamp_to_timespec ( & ts , tp ) ; //<S2SV> c = cdf_ctime ( & ts . tv_sec , tbuf ) ; //<S2SV> if ( c != NULL && //<S2SV> ( ec = strchr ( c , '\\n' ) ) != NULL ) //<S2SV> * ec = '\\0' ; //<S2SV> if ( NOTMIME ( ms ) && file_printf ( ms , //<S2SV> ",<S2SV_blank>%s:<S2SV_blank>%s" , buf , c ) == - 1 ) //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case CDF_CLIPBOARD : //<S2SV> break ; //<S2SV> default : //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> if ( ! NOTMIME ( ms ) ) { //<S2SV> if ( str == NULL ) //<S2SV> return 0 ; //<S2SV> if ( file_printf ( ms , "application/%s" , str ) == - 1 ) //<S2SV> return - 1 ; //<S2SV> } //<S2SV> return 1 ; //<S2SV> } //<S2SV> 