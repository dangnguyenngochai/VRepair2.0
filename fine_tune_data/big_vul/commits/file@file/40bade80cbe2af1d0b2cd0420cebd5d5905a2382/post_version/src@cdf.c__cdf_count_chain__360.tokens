size_t //<S2SV> cdf_count_chain ( const cdf_sat_t * sat , cdf_secid_t sid , size_t size ) //<S2SV> { //<S2SV> size_t i , j ; //<S2SV> cdf_secid_t maxsector = ( cdf_secid_t ) ( ( sat -> sat_len * size ) //<S2SV> / sizeof ( maxsector ) ) ; //<S2SV> DPRINTF ( ( "Chain:" ) ) ; //<S2SV> for ( j = i = 0 ; sid >= 0 ; i ++ , j ++ ) { //<S2SV> DPRINTF ( ( "<S2SV_blank>%d" , sid ) ) ; //<S2SV> if ( j >= CDF_LOOP_LIMIT ) { //<S2SV> DPRINTF ( ( "Counting<S2SV_blank>chain<S2SV_blank>loop<S2SV_blank>limit" ) ) ; //<S2SV> errno = EFTYPE ; //<S2SV> return ( size_t ) - 1 ; //<S2SV> } //<S2SV> if ( sid >= maxsector ) { //<S2SV> DPRINTF ( ( "Sector<S2SV_blank>%d<S2SV_blank>>=<S2SV_blank>%d\\n" , sid , maxsector ) ) ; //<S2SV> errno = EFTYPE ; //<S2SV> return ( size_t ) - 1 ; //<S2SV> } //<S2SV> sid = CDF_TOLE4 ( ( uint32_t ) sat -> sat_tab [ sid ] ) ; //<S2SV> } //<S2SV> if ( i == 0 ) { //<S2SV> DPRINTF ( ( "<S2SV_blank>none,<S2SV_blank>sid:<S2SV_blank>%d\\n" , sid ) ) ; //<S2SV> return ( size_t ) - 1 ; //<S2SV> } //<S2SV> DPRINTF ( ( "\\n" ) ) ; //<S2SV> return i ; //<S2SV> } //<S2SV> 