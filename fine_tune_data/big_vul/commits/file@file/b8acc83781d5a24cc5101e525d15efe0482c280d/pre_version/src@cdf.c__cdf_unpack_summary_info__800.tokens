int //<S2SV> cdf_unpack_summary_info ( const cdf_stream_t * sst , const cdf_header_t * h , //<S2SV> cdf_summary_info_header_t * ssi , cdf_property_info_t * * info , size_t * count ) //<S2SV> { //<S2SV> size_t i , maxcount ; //<S2SV> const cdf_summary_info_header_t * si = //<S2SV> CAST ( const cdf_summary_info_header_t * , sst -> sst_tab ) ; //<S2SV> const cdf_section_declaration_t * sd = //<S2SV> CAST ( const cdf_section_declaration_t * , ( const void * ) //<S2SV> ( ( const char * ) sst -> sst_tab + CDF_SECTION_DECLARATION_OFFSET ) ) ; //<S2SV> if ( cdf_check_stream_offset ( sst , h , si , sizeof ( * si ) , __LINE__ ) == - 1 || //<S2SV> cdf_check_stream_offset ( sst , h , sd , sizeof ( * sd ) , __LINE__ ) == - 1 ) //<S2SV> return - 1 ; //<S2SV> ssi -> si_byte_order = CDF_TOLE2 ( si -> si_byte_order ) ; //<S2SV> ssi -> si_os_version = CDF_TOLE2 ( si -> si_os_version ) ; //<S2SV> ssi -> si_os = CDF_TOLE2 ( si -> si_os ) ; //<S2SV> ssi -> si_class = si -> si_class ; //<S2SV> cdf_swap_class ( & ssi -> si_class ) ; //<S2SV> ssi -> si_count = CDF_TOLE2 ( si -> si_count ) ; //<S2SV> * count = 0 ; //<S2SV> maxcount = 0 ; //<S2SV> * info = NULL ; //<S2SV> for ( i = 0 ; i < CDF_TOLE4 ( si -> si_count ) ; i ++ ) { //<S2SV> if ( i >= CDF_LOOP_LIMIT ) { //<S2SV> DPRINTF ( ( "Unpack<S2SV_blank>summary<S2SV_blank>info<S2SV_blank>loop<S2SV_blank>limit" ) ) ; //<S2SV> errno = EFTYPE ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> if ( cdf_read_property_info ( sst , h , CDF_TOLE4 ( sd -> sd_offset ) , //<S2SV> info , count , & maxcount ) == - 1 ) { //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 