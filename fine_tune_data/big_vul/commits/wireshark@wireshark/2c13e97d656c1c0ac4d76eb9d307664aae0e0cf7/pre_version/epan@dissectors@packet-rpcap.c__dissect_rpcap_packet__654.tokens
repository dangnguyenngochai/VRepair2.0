static void //<S2SV> dissect_rpcap_packet ( tvbuff_t * tvb , packet_info * pinfo , proto_tree * top_tree , //<S2SV> proto_tree * parent_tree , gint offset , proto_item * top_item ) //<S2SV> { //<S2SV> proto_tree * tree ; //<S2SV> proto_item * ti ; //<S2SV> nstime_t ts ; //<S2SV> tvbuff_t * new_tvb ; //<S2SV> guint caplen , len , frame_no ; //<S2SV> gint reported_length_remaining ; //<S2SV> ti = proto_tree_add_item ( parent_tree , hf_packet , tvb , offset , 20 , ENC_NA ) ; //<S2SV> tree = proto_item_add_subtree ( ti , ett_packet ) ; //<S2SV> ts . secs = tvb_get_ntohl ( tvb , offset ) ; //<S2SV> ts . nsecs = tvb_get_ntohl ( tvb , offset + 4 ) * 1000 ; //<S2SV> proto_tree_add_time ( tree , hf_timestamp , tvb , offset , 8 , & ts ) ; //<S2SV> offset += 8 ; //<S2SV> caplen = tvb_get_ntohl ( tvb , offset ) ; //<S2SV> ti = proto_tree_add_item ( tree , hf_caplen , tvb , offset , 4 , ENC_BIG_ENDIAN ) ; //<S2SV> offset += 4 ; //<S2SV> len = tvb_get_ntohl ( tvb , offset ) ; //<S2SV> proto_tree_add_item ( tree , hf_len , tvb , offset , 4 , ENC_BIG_ENDIAN ) ; //<S2SV> offset += 4 ; //<S2SV> frame_no = tvb_get_ntohl ( tvb , offset ) ; //<S2SV> proto_tree_add_item ( tree , hf_npkt , tvb , offset , 4 , ENC_BIG_ENDIAN ) ; //<S2SV> offset += 4 ; //<S2SV> proto_item_append_text ( ti , ",<S2SV_blank>Frame<S2SV_blank>%u" , frame_no ) ; //<S2SV> proto_item_append_text ( top_item , "<S2SV_blank>Frame<S2SV_blank>%u" , frame_no ) ; //<S2SV> reported_length_remaining = tvb_reported_length_remaining ( tvb , offset ) ; //<S2SV> if ( caplen > ( guint ) reported_length_remaining ) { //<S2SV> expert_add_info ( pinfo , ti , & ei_caplen_too_big ) ; //<S2SV> return ; //<S2SV> } //<S2SV> new_tvb = tvb_new_subset ( tvb , offset , caplen , len ) ; //<S2SV> if ( decode_content && linktype != WTAP_ENCAP_UNKNOWN ) { //<S2SV> dissector_try_uint ( wtap_encap_dissector_table , linktype , new_tvb , pinfo , top_tree ) ; //<S2SV> if ( ! info_added ) { //<S2SV> col_prepend_fence_fstr ( pinfo -> cinfo , COL_PROTOCOL , "R|" ) ; //<S2SV> col_prepend_fence_fstr ( pinfo -> cinfo , COL_INFO , "Remote<S2SV_blank>|<S2SV_blank>" ) ; //<S2SV> info_added = TRUE ; //<S2SV> register_frame_end_routine ( pinfo , rpcap_frame_end ) ; //<S2SV> } //<S2SV> } else { //<S2SV> if ( linktype == WTAP_ENCAP_UNKNOWN ) { //<S2SV> proto_item_append_text ( ti , ",<S2SV_blank>Unknown<S2SV_blank>link-layer<S2SV_blank>type" ) ; //<S2SV> } //<S2SV> call_dissector ( data_handle , new_tvb , pinfo , top_tree ) ; //<S2SV> } //<S2SV> } //<S2SV> 