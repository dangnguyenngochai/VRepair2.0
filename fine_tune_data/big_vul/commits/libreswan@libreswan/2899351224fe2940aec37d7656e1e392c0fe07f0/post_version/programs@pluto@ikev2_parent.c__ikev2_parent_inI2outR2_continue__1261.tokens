static void ikev2_parent_inI2outR2_continue ( struct pluto_crypto_req_cont * pcrc , //<S2SV> struct pluto_crypto_req * r , //<S2SV> err_t ugh ) //<S2SV> { //<S2SV> struct dh_continuation * dh = ( struct dh_continuation * ) pcrc ; //<S2SV> struct msg_digest * md = dh -> md ; //<S2SV> struct state * const st = md -> st ; //<S2SV> stf_status e ; //<S2SV> DBG ( DBG_CONTROLMORE , //<S2SV> DBG_log ( "ikev2<S2SV_blank>parent<S2SV_blank>inI2outR2:<S2SV_blank>calculating<S2SV_blank>g^{xy},<S2SV_blank>sending<S2SV_blank>R2" ) ) ; //<S2SV> if ( st == NULL ) { //<S2SV> loglog ( RC_LOG_SERIOUS , //<S2SV> "%s:<S2SV_blank>Request<S2SV_blank>was<S2SV_blank>disconnected<S2SV_blank>from<S2SV_blank>state" , //<S2SV> __FUNCTION__ ) ; //<S2SV> if ( dh -> md ) //<S2SV> release_md ( dh -> md ) ; //<S2SV> return ; //<S2SV> } //<S2SV> passert ( ugh == NULL ) ; //<S2SV> passert ( cur_state == NULL ) ; //<S2SV> passert ( st != NULL ) ; //<S2SV> passert ( st -> st_suspended_md == dh -> md ) ; //<S2SV> set_suspended ( st , NULL ) ; //<S2SV> set_cur_state ( st ) ; //<S2SV> st -> st_calculating = FALSE ; //<S2SV> e = ikev2_parent_inI2outR2_tail ( pcrc , r ) ; //<S2SV> if ( e > STF_FAIL ) { //<S2SV> int v2_notify_num = e - STF_FAIL ; //<S2SV> DBG_log ( //<S2SV> "ikev2_parent_inI2outR2_tail<S2SV_blank>returned<S2SV_blank>STF_FAIL<S2SV_blank>with<S2SV_blank>%s" , //<S2SV> enum_name ( & ikev2_notify_names , v2_notify_num ) ) ; //<S2SV> } else if ( e != STF_OK ) { //<S2SV> DBG_log ( "ikev2_parent_inI2outR2_tail<S2SV_blank>returned<S2SV_blank>%s" , //<S2SV> enum_name ( & stfstatus_name , e ) ) ; //<S2SV> } //<S2SV> if ( dh -> md != NULL ) { //<S2SV> complete_v2_state_transition ( & dh -> md , e ) ; //<S2SV> if ( dh -> md ) //<S2SV> release_md ( dh -> md ) ; //<S2SV> } //<S2SV> reset_globals ( ) ; //<S2SV> } //<S2SV> 