static rsRetVal initZMQ ( instanceData * pData ) { //<S2SV> DEFiRet ; //<S2SV> if ( NULL == s_context ) { //<S2SV> zsys_handler_set ( NULL ) ; //<S2SV> s_context = zctx_new ( ) ; //<S2SV> if ( s_workerThreads > 0 ) zctx_set_iothreads ( s_context , s_workerThreads ) ; //<S2SV> } //<S2SV> pData -> socket = zsocket_new ( s_context , pData -> type ) ; //<S2SV> if ( NULL == pData -> socket ) { //<S2SV> errmsg . LogError ( 0 , RS_RET_NO_ERRCODE , //<S2SV> "omzmq3:<S2SV_blank>zsocket_new<S2SV_blank>failed<S2SV_blank>for<S2SV_blank>%s:<S2SV_blank>%s" , //<S2SV> pData -> description , zmq_strerror ( errno ) ) ; //<S2SV> ABORT_FINALIZE ( RS_RET_NO_ERRCODE ) ; //<S2SV> } //<S2SV> if ( pData -> identity ) zsocket_set_identity ( pData -> socket , ( char * ) pData -> identity ) ; //<S2SV> if ( pData -> sndBuf > - 1 ) zsocket_set_sndbuf ( pData -> socket , pData -> sndBuf ) ; //<S2SV> if ( pData -> rcvBuf > - 1 ) zsocket_set_sndbuf ( pData -> socket , pData -> rcvBuf ) ; //<S2SV> if ( pData -> linger > - 1 ) zsocket_set_linger ( pData -> socket , pData -> linger ) ; //<S2SV> if ( pData -> backlog > - 1 ) zsocket_set_backlog ( pData -> socket , pData -> backlog ) ; //<S2SV> if ( pData -> sndTimeout > - 1 ) zsocket_set_sndtimeo ( pData -> socket , pData -> sndTimeout ) ; //<S2SV> if ( pData -> rcvTimeout > - 1 ) zsocket_set_rcvtimeo ( pData -> socket , pData -> rcvTimeout ) ; //<S2SV> if ( pData -> maxMsgSize > - 1 ) zsocket_set_maxmsgsize ( pData -> socket , pData -> maxMsgSize ) ; //<S2SV> if ( pData -> rate > - 1 ) zsocket_set_rate ( pData -> socket , pData -> rate ) ; //<S2SV> if ( pData -> recoveryIVL > - 1 ) zsocket_set_recovery_ivl ( pData -> socket , pData -> recoveryIVL ) ; //<S2SV> if ( pData -> multicastHops > - 1 ) zsocket_set_multicast_hops ( pData -> socket , pData -> multicastHops ) ; //<S2SV> if ( pData -> reconnectIVL > - 1 ) zsocket_set_reconnect_ivl ( pData -> socket , pData -> reconnectIVL ) ; //<S2SV> if ( pData -> reconnectIVLMax > - 1 ) zsocket_set_reconnect_ivl_max ( pData -> socket , pData -> reconnectIVLMax ) ; //<S2SV> if ( pData -> ipv4Only > - 1 ) zsocket_set_ipv4only ( pData -> socket , pData -> ipv4Only ) ; //<S2SV> if ( pData -> affinity != 1 ) zsocket_set_affinity ( pData -> socket , pData -> affinity ) ; //<S2SV> if ( pData -> rcvHWM > - 1 ) zsocket_set_rcvhwm ( pData -> socket , pData -> rcvHWM ) ; //<S2SV> if ( pData -> sndHWM > - 1 ) zsocket_set_sndhwm ( pData -> socket , pData -> sndHWM ) ; //<S2SV> if ( pData -> action == ACTION_BIND ) { //<S2SV> if ( - 1 == zsocket_bind ( pData -> socket , ( char * ) pData -> description ) ) { //<S2SV> errmsg . LogError ( 0 , RS_RET_NO_ERRCODE , "omzmq3:<S2SV_blank>bind<S2SV_blank>failed<S2SV_blank>for<S2SV_blank>%s:<S2SV_blank>%s" , //<S2SV> pData -> description , zmq_strerror ( errno ) ) ; //<S2SV> ABORT_FINALIZE ( RS_RET_NO_ERRCODE ) ; //<S2SV> } //<S2SV> DBGPRINTF ( "omzmq3:<S2SV_blank>bind<S2SV_blank>to<S2SV_blank>%s<S2SV_blank>successful\\n" , pData -> description ) ; //<S2SV> } else { //<S2SV> if ( - 1 == zsocket_connect ( pData -> socket , ( char * ) pData -> description ) ) { //<S2SV> errmsg . LogError ( 0 , RS_RET_NO_ERRCODE , "omzmq3:<S2SV_blank>connect<S2SV_blank>failed<S2SV_blank>for<S2SV_blank>%s:<S2SV_blank>%s" , //<S2SV> pData -> description , zmq_strerror ( errno ) ) ; //<S2SV> ABORT_FINALIZE ( RS_RET_NO_ERRCODE ) ; //<S2SV> } //<S2SV> DBGPRINTF ( "omzmq3:<S2SV_blank>connect<S2SV_blank>to<S2SV_blank>%s<S2SV_blank>successful" , pData -> description ) ; //<S2SV> } //<S2SV> finalize_it : //<S2SV> RETiRet ; //<S2SV> } //<S2SV> 