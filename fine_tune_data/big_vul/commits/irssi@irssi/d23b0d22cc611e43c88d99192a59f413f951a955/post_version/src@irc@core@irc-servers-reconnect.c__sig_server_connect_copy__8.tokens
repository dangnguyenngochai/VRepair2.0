static void sig_server_connect_copy ( SERVER_CONNECT_REC * * dest , //<S2SV> IRC_SERVER_CONNECT_REC * src ) //<S2SV> { //<S2SV> IRC_SERVER_CONNECT_REC * rec ; //<S2SV> g_return_if_fail ( dest != NULL ) ; //<S2SV> if ( ! IS_IRC_SERVER_CONNECT ( src ) ) //<S2SV> return ; //<S2SV> rec = g_new0 ( IRC_SERVER_CONNECT_REC , 1 ) ; //<S2SV> rec -> chat_type = IRC_PROTOCOL ; //<S2SV> rec -> max_cmds_at_once = src -> max_cmds_at_once ; //<S2SV> rec -> cmd_queue_speed = src -> cmd_queue_speed ; //<S2SV> rec -> max_query_chans = src -> max_query_chans ; //<S2SV> rec -> max_kicks = src -> max_kicks ; //<S2SV> rec -> max_modes = src -> max_modes ; //<S2SV> rec -> max_msgs = src -> max_msgs ; //<S2SV> rec -> max_whois = src -> max_whois ; //<S2SV> rec -> usermode = g_strdup ( src -> usermode ) ; //<S2SV> rec -> alternate_nick = g_strdup ( src -> alternate_nick ) ; //<S2SV> rec -> sasl_mechanism = src -> sasl_mechanism ; //<S2SV> rec -> sasl_username = g_strdup ( src -> sasl_username ) ; //<S2SV> rec -> sasl_password = g_strdup ( src -> sasl_password ) ; //<S2SV> * dest = ( SERVER_CONNECT_REC * ) rec ; //<S2SV> } //<S2SV> 