static int decode_cblk ( Jpeg2000DecoderContext * s , Jpeg2000CodingStyle * codsty , //<S2SV> Jpeg2000T1Context * t1 , Jpeg2000Cblk * cblk , //<S2SV> int width , int height , int bandpos ) //<S2SV> { //<S2SV> int passno = cblk -> npasses , pass_t = 2 , bpno = cblk -> nonzerobits - 1 , y ; //<S2SV> int clnpass_cnt = 0 ; //<S2SV> int bpass_csty_symbol = codsty -> cblk_style & JPEG2000_CBLK_BYPASS ; //<S2SV> int vert_causal_ctx_csty_symbol = codsty -> cblk_style & JPEG2000_CBLK_VSC ; //<S2SV> av_assert0 ( width <= JPEG2000_MAX_CBLKW ) ; //<S2SV> av_assert0 ( height <= JPEG2000_MAX_CBLKH ) ; //<S2SV> for ( y = 0 ; y < height ; y ++ ) //<S2SV> memset ( t1 -> data [ y ] , 0 , width * sizeof ( * * t1 -> data ) ) ; //<S2SV> if ( ! cblk -> length ) //<S2SV> return 0 ; //<S2SV> for ( y = 0 ; y < height + 2 ; y ++ ) //<S2SV> memset ( t1 -> flags [ y ] , 0 , ( width + 2 ) * sizeof ( * * t1 -> flags ) ) ; //<S2SV> cblk -> data [ cblk -> length ] = 0xff ; //<S2SV> cblk -> data [ cblk -> length + 1 ] = 0xff ; //<S2SV> ff_mqc_initdec ( & t1 -> mqc , cblk -> data ) ; //<S2SV> while ( passno -- ) { //<S2SV> switch ( pass_t ) { //<S2SV> case 0 : //<S2SV> decode_sigpass ( t1 , width , height , bpno + 1 , bandpos , //<S2SV> bpass_csty_symbol && ( clnpass_cnt >= 4 ) , //<S2SV> vert_causal_ctx_csty_symbol ) ; //<S2SV> break ; //<S2SV> case 1 : //<S2SV> decode_refpass ( t1 , width , height , bpno + 1 ) ; //<S2SV> if ( bpass_csty_symbol && clnpass_cnt >= 4 ) //<S2SV> ff_mqc_initdec ( & t1 -> mqc , cblk -> data ) ; //<S2SV> break ; //<S2SV> case 2 : //<S2SV> decode_clnpass ( s , t1 , width , height , bpno + 1 , bandpos , //<S2SV> codsty -> cblk_style & JPEG2000_CBLK_SEGSYM , //<S2SV> vert_causal_ctx_csty_symbol ) ; //<S2SV> clnpass_cnt = clnpass_cnt + 1 ; //<S2SV> if ( bpass_csty_symbol && clnpass_cnt >= 4 ) //<S2SV> ff_mqc_initdec ( & t1 -> mqc , cblk -> data ) ; //<S2SV> break ; //<S2SV> } //<S2SV> pass_t ++ ; //<S2SV> if ( pass_t == 3 ) { //<S2SV> bpno -- ; //<S2SV> pass_t = 0 ; //<S2SV> } //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 