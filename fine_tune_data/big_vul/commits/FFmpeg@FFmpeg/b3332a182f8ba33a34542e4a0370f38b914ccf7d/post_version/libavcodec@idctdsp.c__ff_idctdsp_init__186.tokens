av_cold void ff_idctdsp_init ( IDCTDSPContext * c , AVCodecContext * avctx ) //<S2SV> { //<S2SV> const unsigned high_bit_depth = avctx -> bits_per_raw_sample > 8 ; //<S2SV> if ( avctx -> lowres == 1 ) { //<S2SV> c -> idct_put = ff_jref_idct4_put ; //<S2SV> c -> idct_add = ff_jref_idct4_add ; //<S2SV> c -> idct = ff_j_rev_dct4 ; //<S2SV> c -> perm_type = FF_IDCT_PERM_NONE ; //<S2SV> } else if ( avctx -> lowres == 2 ) { //<S2SV> c -> idct_put = ff_jref_idct2_put ; //<S2SV> c -> idct_add = ff_jref_idct2_add ; //<S2SV> c -> idct = ff_j_rev_dct2 ; //<S2SV> c -> perm_type = FF_IDCT_PERM_NONE ; //<S2SV> } else if ( avctx -> lowres == 3 ) { //<S2SV> c -> idct_put = ff_jref_idct1_put ; //<S2SV> c -> idct_add = ff_jref_idct1_add ; //<S2SV> c -> idct = ff_j_rev_dct1 ; //<S2SV> c -> perm_type = FF_IDCT_PERM_NONE ; //<S2SV> } else { //<S2SV> if ( avctx -> bits_per_raw_sample == 10 || avctx -> bits_per_raw_sample == 9 ) { //<S2SV> if ( c -> mpeg4_studio_profile ) //<S2SV> c -> idct_put = ff_simple_idct_put_int32_10bit ; //<S2SV> else { //<S2SV> c -> idct_put = ff_simple_idct_put_int16_10bit ; //<S2SV> c -> idct_add = ff_simple_idct_add_int16_10bit ; //<S2SV> c -> idct = ff_simple_idct_int16_10bit ; //<S2SV> } //<S2SV> c -> perm_type = FF_IDCT_PERM_NONE ; //<S2SV> } else if ( avctx -> bits_per_raw_sample == 12 ) { //<S2SV> c -> idct_put = ff_simple_idct_put_int16_12bit ; //<S2SV> c -> idct_add = ff_simple_idct_add_int16_12bit ; //<S2SV> c -> idct = ff_simple_idct_int16_12bit ; //<S2SV> c -> perm_type = FF_IDCT_PERM_NONE ; //<S2SV> } else { //<S2SV> if ( avctx -> idct_algo == FF_IDCT_INT ) { //<S2SV> c -> idct_put = ff_jref_idct_put ; //<S2SV> c -> idct_add = ff_jref_idct_add ; //<S2SV> c -> idct = ff_j_rev_dct ; //<S2SV> c -> perm_type = FF_IDCT_PERM_LIBMPEG2 ; //<S2SV> # if CONFIG_FAANIDCT //<S2SV> } else if ( avctx -> idct_algo == FF_IDCT_FAAN ) { //<S2SV> c -> idct_put = ff_faanidct_put ; //<S2SV> c -> idct_add = ff_faanidct_add ; //<S2SV> c -> idct = ff_faanidct ; //<S2SV> c -> perm_type = FF_IDCT_PERM_NONE ; //<S2SV> # endif //<S2SV> } else { //<S2SV> c -> idct_put = ff_simple_idct_put_int16_8bit ; //<S2SV> c -> idct_add = ff_simple_idct_add_int16_8bit ; //<S2SV> c -> idct = ff_simple_idct_int16_8bit ; //<S2SV> c -> perm_type = FF_IDCT_PERM_NONE ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> c -> put_pixels_clamped = ff_put_pixels_clamped_c ; //<S2SV> c -> put_signed_pixels_clamped = put_signed_pixels_clamped_c ; //<S2SV> c -> add_pixels_clamped = ff_add_pixels_clamped_c ; //<S2SV> if ( CONFIG_MPEG4_DECODER && avctx -> idct_algo == FF_IDCT_XVID ) //<S2SV> ff_xvid_idct_init ( c , avctx ) ; //<S2SV> if ( ARCH_AARCH64 ) //<S2SV> ff_idctdsp_init_aarch64 ( c , avctx , high_bit_depth ) ; //<S2SV> if ( ARCH_ALPHA ) //<S2SV> ff_idctdsp_init_alpha ( c , avctx , high_bit_depth ) ; //<S2SV> if ( ARCH_ARM ) //<S2SV> ff_idctdsp_init_arm ( c , avctx , high_bit_depth ) ; //<S2SV> if ( ARCH_PPC ) //<S2SV> ff_idctdsp_init_ppc ( c , avctx , high_bit_depth ) ; //<S2SV> if ( ARCH_X86 ) //<S2SV> ff_idctdsp_init_x86 ( c , avctx , high_bit_depth ) ; //<S2SV> if ( ARCH_MIPS ) //<S2SV> ff_idctdsp_init_mips ( c , avctx , high_bit_depth ) ; //<S2SV> ff_init_scantable_permutation ( c -> idct_permutation , //<S2SV> c -> perm_type ) ; //<S2SV> } //<S2SV> 