static int open_url ( AVFormatContext * s , AVIOContext * * pb , const char * url , //<S2SV> AVDictionary * opts , AVDictionary * opts2 , int * is_http ) //<S2SV> { //<S2SV> HLSContext * c = s -> priv_data ; //<S2SV> AVDictionary * tmp = NULL ; //<S2SV> const char * proto_name = NULL ; //<S2SV> int ret ; //<S2SV> av_dict_copy ( & tmp , opts , 0 ) ; //<S2SV> av_dict_copy ( & tmp , opts2 , 0 ) ; //<S2SV> if ( av_strstart ( url , "crypto" , NULL ) ) { //<S2SV> if ( url [ 6 ] == '+' || url [ 6 ] == ':' ) //<S2SV> proto_name = avio_find_protocol_name ( url + 7 ) ; //<S2SV> } //<S2SV> if ( ! proto_name ) //<S2SV> proto_name = avio_find_protocol_name ( url ) ; //<S2SV> if ( ! proto_name ) //<S2SV> return AVERROR_INVALIDDATA ; //<S2SV> if ( ! av_strstart ( proto_name , "http" , NULL ) && ! av_strstart ( proto_name , "file" , NULL ) ) //<S2SV> return AVERROR_INVALIDDATA ; //<S2SV> if ( ! strncmp ( proto_name , url , strlen ( proto_name ) ) && url [ strlen ( proto_name ) ] == ':' ) //<S2SV> ; //<S2SV> else if ( av_strstart ( url , "crypto" , NULL ) && ! strncmp ( proto_name , url + 7 , strlen ( proto_name ) ) && url [ 7 + strlen ( proto_name ) ] == ':' ) //<S2SV> ; //<S2SV> else if ( strcmp ( proto_name , "file" ) || ! strncmp ( url , "file," , 5 ) ) //<S2SV> return AVERROR_INVALIDDATA ; //<S2SV> ret = s -> io_open ( s , pb , url , AVIO_FLAG_READ , & tmp ) ; //<S2SV> if ( ret >= 0 ) { //<S2SV> char * new_cookies = NULL ; //<S2SV> if ( ! ( s -> flags & AVFMT_FLAG_CUSTOM_IO ) ) //<S2SV> av_opt_get ( * pb , "cookies" , AV_OPT_SEARCH_CHILDREN , ( uint8_t * * ) & new_cookies ) ; //<S2SV> if ( new_cookies ) { //<S2SV> av_free ( c -> cookies ) ; //<S2SV> c -> cookies = new_cookies ; //<S2SV> } //<S2SV> av_dict_set ( & opts , "cookies" , c -> cookies , 0 ) ; //<S2SV> } //<S2SV> av_dict_free ( & tmp ) ; //<S2SV> if ( is_http ) //<S2SV> * is_http = av_strstart ( proto_name , "http" , NULL ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 