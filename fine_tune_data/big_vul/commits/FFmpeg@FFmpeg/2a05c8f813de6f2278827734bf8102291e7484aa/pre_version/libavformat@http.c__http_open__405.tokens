static int http_open ( URLContext * h , const char * uri , int flags , //<S2SV> AVDictionary * * options ) //<S2SV> { //<S2SV> HTTPContext * s = h -> priv_data ; //<S2SV> int ret ; //<S2SV> if ( s -> seekable == 1 ) //<S2SV> h -> is_streamed = 0 ; //<S2SV> else //<S2SV> h -> is_streamed = 1 ; //<S2SV> s -> filesize = - 1 ; //<S2SV> s -> location = av_strdup ( uri ) ; //<S2SV> if ( ! s -> location ) //<S2SV> return AVERROR ( ENOMEM ) ; //<S2SV> if ( options ) //<S2SV> av_dict_copy ( & s -> chained_options , * options , 0 ) ; //<S2SV> if ( s -> headers ) { //<S2SV> int len = strlen ( s -> headers ) ; //<S2SV> if ( len < 2 || strcmp ( "\\r\\n" , s -> headers + len - 2 ) ) { //<S2SV> av_log ( h , AV_LOG_WARNING , //<S2SV> "No<S2SV_blank>trailing<S2SV_blank>CRLF<S2SV_blank>found<S2SV_blank>in<S2SV_blank>HTTP<S2SV_blank>header.\\n" ) ; //<S2SV> ret = av_reallocp ( & s -> headers , len + 3 ) ; //<S2SV> if ( ret < 0 ) //<S2SV> return ret ; //<S2SV> s -> headers [ len ] = '\\r' ; //<S2SV> s -> headers [ len + 1 ] = '\\n' ; //<S2SV> s -> headers [ len + 2 ] = '\\0' ; //<S2SV> } //<S2SV> } //<S2SV> if ( s -> listen ) { //<S2SV> return http_listen ( h , uri , flags , options ) ; //<S2SV> } //<S2SV> ret = http_open_cnx ( h , options ) ; //<S2SV> if ( ret < 0 ) //<S2SV> av_dict_free ( & s -> chained_options ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 