int ff_mpeg4_decode_picture_header ( Mpeg4DecContext * ctx , GetBitContext * gb ) //<S2SV> { //<S2SV> MpegEncContext * s = & ctx -> m ; //<S2SV> unsigned startcode , v ; //<S2SV> int ret ; //<S2SV> int vol = 0 ; //<S2SV> align_get_bits ( gb ) ; //<S2SV> if ( s -> codec_tag == AV_RL32 ( "WV1F" ) && show_bits ( gb , 24 ) == 0x575630 ) { //<S2SV> skip_bits ( gb , 24 ) ; //<S2SV> if ( get_bits ( gb , 8 ) == 0xF0 ) //<S2SV> goto end ; //<S2SV> } //<S2SV> startcode = 0xff ; //<S2SV> for ( ; ; ) { //<S2SV> if ( get_bits_count ( gb ) >= gb -> size_in_bits ) { //<S2SV> if ( gb -> size_in_bits == 8 && //<S2SV> ( ctx -> divx_version >= 0 || ctx -> xvid_build >= 0 ) || s -> codec_tag == AV_RL32 ( "QMP4" ) ) { //<S2SV> av_log ( s -> avctx , AV_LOG_VERBOSE , "frame<S2SV_blank>skip<S2SV_blank>%d\\n" , gb -> size_in_bits ) ; //<S2SV> return FRAME_SKIPPED ; //<S2SV> } else //<S2SV> return AVERROR_INVALIDDATA ; //<S2SV> } //<S2SV> v = get_bits ( gb , 8 ) ; //<S2SV> startcode = ( ( startcode << 8 ) | v ) & 0xffffffff ; //<S2SV> if ( ( startcode & 0xFFFFFF00 ) != 0x100 ) //<S2SV> continue ; //<S2SV> if ( s -> avctx -> debug & FF_DEBUG_STARTCODE ) { //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "startcode:<S2SV_blank>%3X<S2SV_blank>" , startcode ) ; //<S2SV> if ( startcode <= 0x11F ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Video<S2SV_blank>Object<S2SV_blank>Start" ) ; //<S2SV> else if ( startcode <= 0x12F ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Video<S2SV_blank>Object<S2SV_blank>Layer<S2SV_blank>Start" ) ; //<S2SV> else if ( startcode <= 0x13F ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Reserved" ) ; //<S2SV> else if ( startcode <= 0x15F ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "FGS<S2SV_blank>bp<S2SV_blank>start" ) ; //<S2SV> else if ( startcode <= 0x1AF ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Reserved" ) ; //<S2SV> else if ( startcode == 0x1B0 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Visual<S2SV_blank>Object<S2SV_blank>Seq<S2SV_blank>Start" ) ; //<S2SV> else if ( startcode == 0x1B1 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Visual<S2SV_blank>Object<S2SV_blank>Seq<S2SV_blank>End" ) ; //<S2SV> else if ( startcode == 0x1B2 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "User<S2SV_blank>Data" ) ; //<S2SV> else if ( startcode == 0x1B3 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Group<S2SV_blank>of<S2SV_blank>VOP<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1B4 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Video<S2SV_blank>Session<S2SV_blank>Error" ) ; //<S2SV> else if ( startcode == 0x1B5 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Visual<S2SV_blank>Object<S2SV_blank>Start" ) ; //<S2SV> else if ( startcode == 0x1B6 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Video<S2SV_blank>Object<S2SV_blank>Plane<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1B7 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "slice<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1B8 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "extension<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1B9 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "fgs<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1BA ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "FBA<S2SV_blank>Object<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1BB ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "FBA<S2SV_blank>Object<S2SV_blank>Plane<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1BC ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Mesh<S2SV_blank>Object<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1BD ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Mesh<S2SV_blank>Object<S2SV_blank>Plane<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1BE ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Still<S2SV_blank>Texture<S2SV_blank>Object<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1BF ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Texture<S2SV_blank>Spatial<S2SV_blank>Layer<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1C0 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Texture<S2SV_blank>SNR<S2SV_blank>Layer<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1C1 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Texture<S2SV_blank>Tile<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1C2 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "Texture<S2SV_blank>Shape<S2SV_blank>Layer<S2SV_blank>start" ) ; //<S2SV> else if ( startcode == 0x1C3 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "stuffing<S2SV_blank>start" ) ; //<S2SV> else if ( startcode <= 0x1C5 ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "reserved" ) ; //<S2SV> else if ( startcode <= 0x1FF ) //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "System<S2SV_blank>start" ) ; //<S2SV> av_log ( s -> avctx , AV_LOG_DEBUG , "<S2SV_blank>at<S2SV_blank>%d\\n" , get_bits_count ( gb ) ) ; //<S2SV> } //<S2SV> if ( startcode >= 0x120 && startcode <= 0x12F ) { //<S2SV> if ( vol ) { //<S2SV> av_log ( s -> avctx , AV_LOG_WARNING , "Ignoring<S2SV_blank>multiple<S2SV_blank>VOL<S2SV_blank>headers\\n" ) ; //<S2SV> continue ; //<S2SV> } //<S2SV> vol ++ ; //<S2SV> if ( ( ret = decode_vol_header ( ctx , gb ) ) < 0 ) //<S2SV> return ret ; //<S2SV> } else if ( startcode == USER_DATA_STARTCODE ) { //<S2SV> decode_user_data ( ctx , gb ) ; //<S2SV> } else if ( startcode == GOP_STARTCODE ) { //<S2SV> mpeg4_decode_gop_header ( s , gb ) ; //<S2SV> } else if ( startcode == VOS_STARTCODE ) { //<S2SV> mpeg4_decode_profile_level ( s , gb ) ; //<S2SV> if ( s -> avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO && //<S2SV> ( s -> avctx -> level > 0 && s -> avctx -> level < 9 ) ) { //<S2SV> s -> studio_profile = 1 ; //<S2SV> next_start_code_studio ( gb ) ; //<S2SV> extension_and_user_data ( s , gb , 0 ) ; //<S2SV> } //<S2SV> } else if ( startcode == VISUAL_OBJ_STARTCODE ) { //<S2SV> if ( s -> studio_profile ) { //<S2SV> if ( ( ret = decode_studiovisualobject ( ctx , gb ) ) < 0 ) //<S2SV> return ret ; //<S2SV> } else //<S2SV> mpeg4_decode_visual_object ( s , gb ) ; //<S2SV> } else if ( startcode == VOP_STARTCODE ) { //<S2SV> break ; //<S2SV> } //<S2SV> align_get_bits ( gb ) ; //<S2SV> startcode = 0xff ; //<S2SV> } //<S2SV> end : //<S2SV> if ( s -> avctx -> flags & AV_CODEC_FLAG_LOW_DELAY ) //<S2SV> s -> low_delay = 1 ; //<S2SV> s -> avctx -> has_b_frames = ! s -> low_delay ; //<S2SV> if ( s -> studio_profile ) { //<S2SV> if ( ! s -> avctx -> bits_per_raw_sample ) { //<S2SV> av_log ( s -> avctx , AV_LOG_ERROR , "Missing<S2SV_blank>VOL<S2SV_blank>header\\n" ) ; //<S2SV> return AVERROR_INVALIDDATA ; //<S2SV> } //<S2SV> return decode_studio_vop_header ( ctx , gb ) ; //<S2SV> } else //<S2SV> return decode_vop_header ( ctx , gb ) ; //<S2SV> } //<S2SV> 