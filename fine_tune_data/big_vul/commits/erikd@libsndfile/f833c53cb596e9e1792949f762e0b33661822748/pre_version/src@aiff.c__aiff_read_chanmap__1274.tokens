static int //<S2SV> aiff_read_chanmap ( SF_PRIVATE * psf , unsigned dword ) //<S2SV> { const AIFF_CAF_CHANNEL_MAP * map_info ; //<S2SV> unsigned channel_bitmap , channel_decriptions , bytesread ; //<S2SV> int layout_tag ; //<S2SV> bytesread = psf_binheader_readf ( psf , "444" , & layout_tag , & channel_bitmap , & channel_decriptions ) ; //<S2SV> if ( ( map_info = aiff_caf_of_channel_layout_tag ( layout_tag ) ) == NULL ) //<S2SV> return 0 ; //<S2SV> psf_log_printf ( psf , "<S2SV_blank><S2SV_blank>Tag<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>:<S2SV_blank>%x\\n" , layout_tag ) ; //<S2SV> if ( map_info ) //<S2SV> psf_log_printf ( psf , "<S2SV_blank><S2SV_blank>Layout<S2SV_blank>:<S2SV_blank>%s\\n" , map_info -> name ) ; //<S2SV> if ( bytesread < dword ) //<S2SV> psf_binheader_readf ( psf , "j" , dword - bytesread ) ; //<S2SV> if ( map_info -> channel_map != NULL ) //<S2SV> { size_t chanmap_size = psf -> sf . channels * sizeof ( psf -> channel_map [ 0 ] ) ; //<S2SV> free ( psf -> channel_map ) ; //<S2SV> if ( ( psf -> channel_map = malloc ( chanmap_size ) ) == NULL ) //<S2SV> return SFE_MALLOC_FAILED ; //<S2SV> memcpy ( psf -> channel_map , map_info -> channel_map , chanmap_size ) ; //<S2SV> } ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 