int pdf_load_xrefs ( FILE * fp , pdf_t * pdf ) //<S2SV> { //<S2SV> int i , ver , is_linear ; //<S2SV> long pos , pos_count ; //<S2SV> char x , * c , buf [ 256 ] ; //<S2SV> c = NULL ; //<S2SV> pdf -> n_xrefs = 0 ; //<S2SV> fseek ( fp , 0 , SEEK_SET ) ; //<S2SV> while ( get_next_eof ( fp ) >= 0 ) //<S2SV> ++ pdf -> n_xrefs ; //<S2SV> if ( ! pdf -> n_xrefs ) //<S2SV> return 0 ; //<S2SV> fseek ( fp , 0 , SEEK_SET ) ; //<S2SV> pdf -> xrefs = safe_calloc ( sizeof ( xref_t ) * pdf -> n_xrefs ) ; //<S2SV> ver = 1 ; //<S2SV> for ( i = 0 ; i < pdf -> n_xrefs ; i ++ ) //<S2SV> { //<S2SV> if ( ( pos = get_next_eof ( fp ) ) < 0 ) //<S2SV> break ; //<S2SV> pdf -> xrefs [ i ] . version = ver ++ ; //<S2SV> pos_count = 0 ; //<S2SV> while ( SAFE_F ( fp , ( ( x = fgetc ( fp ) ) != 'f' ) ) ) //<S2SV> fseek ( fp , pos - ( ++ pos_count ) , SEEK_SET ) ; //<S2SV> if ( pos_count >= sizeof ( buf ) ) { //<S2SV> ERR ( "Failed<S2SV_blank>to<S2SV_blank>locate<S2SV_blank>the<S2SV_blank>startxref<S2SV_blank>token.<S2SV_blank>" //<S2SV> "This<S2SV_blank>might<S2SV_blank>be<S2SV_blank>a<S2SV_blank>corrupt<S2SV_blank>PDF.\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> memset ( buf , 0 , sizeof ( buf ) ) ; //<S2SV> SAFE_E ( fread ( buf , 1 , pos_count , fp ) , pos_count , //<S2SV> "Failed<S2SV_blank>to<S2SV_blank>read<S2SV_blank>startxref.\\n" ) ; //<S2SV> c = buf ; //<S2SV> while ( * c == '<S2SV_blank>' || * c == '\\n' || * c == '\\r' ) //<S2SV> ++ c ; //<S2SV> pdf -> xrefs [ i ] . start = atol ( c ) ; //<S2SV> if ( pdf -> xrefs [ i ] . start == 0 ) //<S2SV> get_xref_linear_skipped ( fp , & pdf -> xrefs [ i ] ) ; //<S2SV> else //<S2SV> { //<S2SV> pos = ftell ( fp ) ; //<S2SV> fseek ( fp , pdf -> xrefs [ i ] . start , SEEK_SET ) ; //<S2SV> pdf -> xrefs [ i ] . end = get_next_eof ( fp ) ; //<S2SV> fseek ( fp , pos , SEEK_SET ) ; //<S2SV> } //<S2SV> if ( ! is_valid_xref ( fp , pdf , & pdf -> xrefs [ i ] ) ) //<S2SV> { //<S2SV> is_linear = pdf -> xrefs [ i ] . is_linear ; //<S2SV> memset ( & pdf -> xrefs [ i ] , 0 , sizeof ( xref_t ) ) ; //<S2SV> pdf -> xrefs [ i ] . is_linear = is_linear ; //<S2SV> rewind ( fp ) ; //<S2SV> get_next_eof ( fp ) ; //<S2SV> continue ; //<S2SV> } //<S2SV> load_xref_entries ( fp , & pdf -> xrefs [ i ] ) ; //<S2SV> } //<S2SV> if ( pdf -> xrefs [ 0 ] . is_linear ) //<S2SV> resolve_linearized_pdf ( pdf ) ; //<S2SV> load_creator ( fp , pdf ) ; //<S2SV> return pdf -> n_xrefs ; //<S2SV> } //<S2SV> 