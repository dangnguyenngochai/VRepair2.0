static void load_xref_from_plaintext ( FILE * fp , xref_t * xref ) //<S2SV> { //<S2SV> int i , buf_idx , obj_id , added_entries ; //<S2SV> char c , buf [ 32 ] = { 0 } ; //<S2SV> long start , pos ; //<S2SV> start = ftell ( fp ) ; //<S2SV> pos = xref -> end ; //<S2SV> fseek ( fp , pos , SEEK_SET ) ; //<S2SV> while ( ftell ( fp ) != 0 ) //<S2SV> if ( SAFE_F ( fp , ( fgetc ( fp ) == '/' && fgetc ( fp ) == 'S' ) ) ) //<S2SV> break ; //<S2SV> else //<S2SV> SAFE_E ( fseek ( fp , -- pos , SEEK_SET ) , 0 , "Failed<S2SV_blank>seek<S2SV_blank>to<S2SV_blank>xref<S2SV_blank>/Size.\\n" ) ; //<S2SV> SAFE_E ( fread ( buf , 1 , 21 , fp ) , 21 , "Failed<S2SV_blank>to<S2SV_blank>load<S2SV_blank>entry<S2SV_blank>Size<S2SV_blank>string.\\n" ) ; //<S2SV> xref -> n_entries = atoi ( buf + strlen ( "ize<S2SV_blank>" ) ) ; //<S2SV> xref -> entries = safe_calloc ( xref -> n_entries * sizeof ( struct _xref_entry ) ) ; //<S2SV> obj_id = 0 ; //<S2SV> fseek ( fp , xref -> start + strlen ( "xref" ) , SEEK_SET ) ; //<S2SV> added_entries = 0 ; //<S2SV> for ( i = 0 ; i < xref -> n_entries ; i ++ ) //<S2SV> { //<S2SV> c = fgetc ( fp ) ; //<S2SV> while ( c == '\\n' || c == '\\r' ) //<S2SV> c = fgetc ( fp ) ; //<S2SV> buf_idx = 0 ; //<S2SV> while ( c != '\\n' && c != '\\r' && ! feof ( fp ) && //<S2SV> ! ferror ( fp ) && buf_idx < sizeof ( buf ) ) //<S2SV> { //<S2SV> buf [ buf_idx ++ ] = c ; //<S2SV> c = fgetc ( fp ) ; //<S2SV> } //<S2SV> if ( buf_idx >= sizeof ( buf ) ) //<S2SV> { //<S2SV> ERR ( "Failed<S2SV_blank>to<S2SV_blank>locate<S2SV_blank>newline<S2SV_blank>character.<S2SV_blank>" //<S2SV> "This<S2SV_blank>might<S2SV_blank>be<S2SV_blank>a<S2SV_blank>corrupt<S2SV_blank>PDF.\\n" ) ; //<S2SV> exit ( EXIT_FAILURE ) ; //<S2SV> } //<S2SV> buf [ buf_idx ] = '\\0' ; //<S2SV> if ( strchr ( buf , 't' ) ) //<S2SV> break ; //<S2SV> if ( strlen ( buf ) > 17 ) //<S2SV> { //<S2SV> xref -> entries [ i ] . obj_id = obj_id ++ ; //<S2SV> xref -> entries [ i ] . offset = atol ( strtok ( buf , "<S2SV_blank>" ) ) ; //<S2SV> xref -> entries [ i ] . gen_num = atoi ( strtok ( NULL , "<S2SV_blank>" ) ) ; //<S2SV> xref -> entries [ i ] . f_or_n = buf [ 17 ] ; //<S2SV> ++ added_entries ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> obj_id = atoi ( buf ) ; //<S2SV> -- i ; //<S2SV> } //<S2SV> } //<S2SV> xref -> n_entries = added_entries ; //<S2SV> fseek ( fp , start , SEEK_SET ) ; //<S2SV> } //<S2SV> 