static char * get_object ( //<S2SV> FILE * fp , //<S2SV> int obj_id , //<S2SV> const xref_t * xref , //<S2SV> size_t * size , //<S2SV> int * is_stream ) //<S2SV> { //<S2SV> static const int blk_sz = 256 ; //<S2SV> int i , total_sz , read_sz , n_blks , search , stream ; //<S2SV> size_t obj_sz ; //<S2SV> char * c , * data ; //<S2SV> long start ; //<S2SV> const xref_entry_t * entry ; //<S2SV> if ( size ) //<S2SV> * size = 0 ; //<S2SV> if ( is_stream ) //<S2SV> * is_stream = 0 ; //<S2SV> start = ftell ( fp ) ; //<S2SV> entry = NULL ; //<S2SV> for ( i = 0 ; i < xref -> n_entries ; i ++ ) //<S2SV> if ( xref -> entries [ i ] . obj_id == obj_id ) //<S2SV> { //<S2SV> entry = & xref -> entries [ i ] ; //<S2SV> break ; //<S2SV> } //<S2SV> if ( ! entry ) //<S2SV> return NULL ; //<S2SV> fseek ( fp , entry -> offset , SEEK_SET ) ; //<S2SV> obj_sz = 0 ; //<S2SV> total_sz = 0 ; //<S2SV> n_blks = 1 ; //<S2SV> data = malloc ( blk_sz * n_blks ) ; //<S2SV> memset ( data , 0 , blk_sz * n_blks ) ; //<S2SV> stream = 0 ; //<S2SV> while ( ( read_sz = fread ( data + total_sz , 1 , blk_sz - 1 , fp ) ) && ! ferror ( fp ) ) //<S2SV> { //<S2SV> total_sz += read_sz ; //<S2SV> * ( data + total_sz ) = '\\0' ; //<S2SV> if ( total_sz + blk_sz >= ( blk_sz * n_blks ) ) //<S2SV> data = realloc ( data , blk_sz * ( ++ n_blks ) ) ; //<S2SV> search = total_sz - read_sz ; //<S2SV> if ( search < 0 ) //<S2SV> search = 0 ; //<S2SV> if ( ( c = strstr ( data + search , "endobj" ) ) ) //<S2SV> { //<S2SV> * ( c + strlen ( "endobj" ) + 1 ) = '\\0' ; //<S2SV> obj_sz = ( void * ) strstr ( data + search , "endobj" ) - ( void * ) data ; //<S2SV> obj_sz += strlen ( "endobj" ) + 1 ; //<S2SV> break ; //<S2SV> } //<S2SV> else if ( strstr ( data , "stream" ) ) //<S2SV> stream = 1 ; //<S2SV> } //<S2SV> clearerr ( fp ) ; //<S2SV> fseek ( fp , start , SEEK_SET ) ; //<S2SV> if ( size ) //<S2SV> * size = obj_sz ; //<S2SV> if ( is_stream ) //<S2SV> * is_stream = stream ; //<S2SV> return data ; //<S2SV> } //<S2SV> 