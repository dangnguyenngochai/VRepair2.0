static void write_version ( //<S2SV> FILE * fp , //<S2SV> const char * fname , //<S2SV> const char * dirname , //<S2SV> xref_t * xref ) //<S2SV> { //<S2SV> long start ; //<S2SV> char * c , * new_fname , data ; //<S2SV> FILE * new_fp ; //<S2SV> start = ftell ( fp ) ; //<S2SV> if ( ( c = strstr ( fname , ".pdf" ) ) ) //<S2SV> * c = '\\0' ; //<S2SV> new_fname = malloc ( strlen ( fname ) + strlen ( dirname ) + 16 ) ; //<S2SV> snprintf ( new_fname , strlen ( fname ) + strlen ( dirname ) + 16 , //<S2SV> "%s/%s-version-%d.pdf" , dirname , fname , xref -> version ) ; //<S2SV> if ( ! ( new_fp = fopen ( new_fname , "w" ) ) ) //<S2SV> { //<S2SV> ERR ( "Could<S2SV_blank>not<S2SV_blank>create<S2SV_blank>file<S2SV_blank>\'%s\'\\n" , new_fname ) ; //<S2SV> fseek ( fp , start , SEEK_SET ) ; //<S2SV> free ( new_fname ) ; //<S2SV> return ; //<S2SV> } //<S2SV> fseek ( fp , 0 , SEEK_SET ) ; //<S2SV> while ( fread ( & data , 1 , 1 , fp ) ) //<S2SV> fwrite ( & data , 1 , 1 , new_fp ) ; //<S2SV> fprintf ( new_fp , "\\r\\nstartxref\\r\\n%ld\\r\\n%%%%EOF" , xref -> start ) ; //<S2SV> fclose ( new_fp ) ; //<S2SV> free ( new_fname ) ; //<S2SV> fseek ( fp , start , SEEK_SET ) ; //<S2SV> } //<S2SV> 