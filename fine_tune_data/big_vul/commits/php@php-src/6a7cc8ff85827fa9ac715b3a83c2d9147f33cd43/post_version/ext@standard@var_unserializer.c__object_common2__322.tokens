static inline int object_common2 ( UNSERIALIZE_PARAMETER , long elements ) //<S2SV> { //<S2SV> zval * retval_ptr = NULL ; //<S2SV> zval fname ; //<S2SV> if ( Z_TYPE_PP ( rval ) != IS_OBJECT ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( ! process_nested_data ( UNSERIALIZE_PASSTHRU , Z_OBJPROP_PP ( rval ) , elements , 1 ) ) { //<S2SV> if ( Z_TYPE_PP ( rval ) == IS_OBJECT ) { //<S2SV> zend_hash_clean ( Z_OBJPROP_PP ( rval ) ) ; //<S2SV> zend_object_store_ctor_failed ( * rval TSRMLS_CC ) ; //<S2SV> } //<S2SV> ZVAL_NULL ( * rval ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( Z_TYPE_PP ( rval ) != IS_OBJECT ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( Z_OBJCE_PP ( rval ) != PHP_IC_ENTRY && //<S2SV> zend_hash_exists ( & Z_OBJCE_PP ( rval ) -> function_table , "__wakeup" , sizeof ( "__wakeup" ) ) ) { //<S2SV> INIT_PZVAL ( & fname ) ; //<S2SV> ZVAL_STRINGL ( & fname , "__wakeup" , sizeof ( "__wakeup" ) - 1 , 0 ) ; //<S2SV> BG ( serialize_lock ) ++ ; //<S2SV> call_user_function_ex ( CG ( function_table ) , rval , & fname , & retval_ptr , 0 , 0 , 1 , NULL TSRMLS_CC ) ; //<S2SV> BG ( serialize_lock ) -- ; //<S2SV> } //<S2SV> if ( retval_ptr ) { //<S2SV> zval_ptr_dtor ( & retval_ptr ) ; //<S2SV> } //<S2SV> if ( EG ( exception ) ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> return finish_nested_data ( UNSERIALIZE_PASSTHRU ) ; //<S2SV> } //<S2SV> 