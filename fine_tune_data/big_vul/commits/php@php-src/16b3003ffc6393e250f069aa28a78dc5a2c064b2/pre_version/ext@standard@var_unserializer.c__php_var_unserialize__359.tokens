PHPAPI int php_var_unserialize ( UNSERIALIZE_PARAMETER ) //<S2SV> { //<S2SV> const unsigned char * cursor , * limit , * marker , * start ; //<S2SV> zval * * rval_ref ; //<S2SV> limit = max ; //<S2SV> cursor = * p ; //<S2SV> if ( YYCURSOR >= YYLIMIT ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( var_hash && cursor [ 0 ] != 'R' ) { //<S2SV> var_push ( var_hash , rval ) ; //<S2SV> } //<S2SV> start = cursor ; //<S2SV> # line 496 "ext/standard/var_unserializer.c" //<S2SV> { //<S2SV> YYCTYPE yych ; //<S2SV> static const unsigned char yybm [ ] = { //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 128 , 128 , 128 , 128 , 128 , 128 , 128 , 128 , //<S2SV> 128 , 128 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , //<S2SV> } ; //<S2SV> if ( ( YYLIMIT - YYCURSOR ) < 7 ) YYFILL ( 7 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> switch ( yych ) { //<S2SV> case 'C' : //<S2SV> case 'O' : goto yy13 ; //<S2SV> case 'N' : goto yy5 ; //<S2SV> case 'R' : goto yy2 ; //<S2SV> case 'S' : goto yy10 ; //<S2SV> case 'a' : goto yy11 ; //<S2SV> case 'b' : goto yy6 ; //<S2SV> case 'd' : goto yy8 ; //<S2SV> case 'i' : goto yy7 ; //<S2SV> case 'o' : goto yy12 ; //<S2SV> case 'r' : goto yy4 ; //<S2SV> case 's' : goto yy9 ; //<S2SV> case '}' : goto yy14 ; //<S2SV> default : goto yy16 ; //<S2SV> } //<S2SV> yy2 : //<S2SV> yych = * ( YYMARKER = ++ YYCURSOR ) ; //<S2SV> if ( yych == ':' ) goto yy95 ; //<S2SV> yy3 : //<S2SV> # line 861 "ext/standard/var_unserializer.re" //<S2SV> { return 0 ; } //<S2SV> # line 558 "ext/standard/var_unserializer.c" //<S2SV> yy4 : //<S2SV> yych = * ( YYMARKER = ++ YYCURSOR ) ; //<S2SV> if ( yych == ':' ) goto yy89 ; //<S2SV> goto yy3 ; //<S2SV> yy5 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych == ';' ) goto yy87 ; //<S2SV> goto yy3 ; //<S2SV> yy6 : //<S2SV> yych = * ( YYMARKER = ++ YYCURSOR ) ; //<S2SV> if ( yych == ':' ) goto yy83 ; //<S2SV> goto yy3 ; //<S2SV> yy7 : //<S2SV> yych = * ( YYMARKER = ++ YYCURSOR ) ; //<S2SV> if ( yych == ':' ) goto yy77 ; //<S2SV> goto yy3 ; //<S2SV> yy8 : //<S2SV> yych = * ( YYMARKER = ++ YYCURSOR ) ; //<S2SV> if ( yych == ':' ) goto yy53 ; //<S2SV> goto yy3 ; //<S2SV> yy9 : //<S2SV> yych = * ( YYMARKER = ++ YYCURSOR ) ; //<S2SV> if ( yych == ':' ) goto yy46 ; //<S2SV> goto yy3 ; //<S2SV> yy10 : //<S2SV> yych = * ( YYMARKER = ++ YYCURSOR ) ; //<S2SV> if ( yych == ':' ) goto yy39 ; //<S2SV> goto yy3 ; //<S2SV> yy11 : //<S2SV> yych = * ( YYMARKER = ++ YYCURSOR ) ; //<S2SV> if ( yych == ':' ) goto yy32 ; //<S2SV> goto yy3 ; //<S2SV> yy12 : //<S2SV> yych = * ( YYMARKER = ++ YYCURSOR ) ; //<S2SV> if ( yych == ':' ) goto yy25 ; //<S2SV> goto yy3 ; //<S2SV> yy13 : //<S2SV> yych = * ( YYMARKER = ++ YYCURSOR ) ; //<S2SV> if ( yych == ':' ) goto yy17 ; //<S2SV> goto yy3 ; //<S2SV> yy14 : //<S2SV> ++ YYCURSOR ; //<S2SV> # line 855 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> php_error_docref ( NULL TSRMLS_CC , E_NOTICE , "Unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>serialized<S2SV_blank>data" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> # line 607 "ext/standard/var_unserializer.c" //<S2SV> yy16 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> goto yy3 ; //<S2SV> yy17 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yybm [ 0 + yych ] & 128 ) { //<S2SV> goto yy20 ; //<S2SV> } //<S2SV> if ( yych == '+' ) goto yy19 ; //<S2SV> yy18 : //<S2SV> YYCURSOR = YYMARKER ; //<S2SV> goto yy3 ; //<S2SV> yy19 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yybm [ 0 + yych ] & 128 ) { //<S2SV> goto yy20 ; //<S2SV> } //<S2SV> goto yy18 ; //<S2SV> yy20 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( ( YYLIMIT - YYCURSOR ) < 2 ) YYFILL ( 2 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yybm [ 0 + yych ] & 128 ) { //<S2SV> goto yy20 ; //<S2SV> } //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ';' ) goto yy18 ; //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych != \'"\' ) goto yy18 ; //<S2SV> ++ YYCURSOR ; //<S2SV> # line 708 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> size_t len , len2 , len3 , maxlen ; //<S2SV> long elements ; //<S2SV> char * class_name ; //<S2SV> zend_class_entry * ce ; //<S2SV> zend_class_entry * * pce ; //<S2SV> int incomplete_class = 0 ; //<S2SV> int custom_object = 0 ; //<S2SV> zval * user_func ; //<S2SV> zval * retval_ptr ; //<S2SV> zval * * args [ 1 ] ; //<S2SV> zval * arg_func_name ; //<S2SV> if ( ! var_hash ) return 0 ; //<S2SV> if ( * start == 'C' ) { //<S2SV> custom_object = 1 ; //<S2SV> } //<S2SV> INIT_PZVAL ( * rval ) ; //<S2SV> len2 = len = parse_uiv ( start + 2 ) ; //<S2SV> maxlen = max - YYCURSOR ; //<S2SV> if ( maxlen < len || len == 0 ) { //<S2SV> * p = start + 2 ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> class_name = ( char * ) YYCURSOR ; //<S2SV> YYCURSOR += len ; //<S2SV> if ( * ( YYCURSOR ) != \'"\' ) { //<S2SV> * p = YYCURSOR ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( * ( YYCURSOR + 1 ) != ':' ) { //<S2SV> * p = YYCURSOR + 1 ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> len3 = strspn ( class_name , "0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\" ) ; //<S2SV> if ( len3 != len ) //<S2SV> { //<S2SV> * p = YYCURSOR + len3 - len ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> class_name = estrndup ( class_name , len ) ; //<S2SV> do { //<S2SV> BG ( serialize_lock ) ++ ; //<S2SV> if ( zend_lookup_class ( class_name , len2 , & pce TSRMLS_CC ) == SUCCESS ) { //<S2SV> BG ( serialize_lock ) -- ; //<S2SV> if ( EG ( exception ) ) { //<S2SV> efree ( class_name ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> ce = * pce ; //<S2SV> break ; //<S2SV> } //<S2SV> BG ( serialize_lock ) -- ; //<S2SV> if ( EG ( exception ) ) { //<S2SV> efree ( class_name ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( ( PG ( unserialize_callback_func ) == NULL ) || ( PG ( unserialize_callback_func ) [ 0 ] == '\\0' ) ) { //<S2SV> incomplete_class = 1 ; //<S2SV> ce = PHP_IC_ENTRY ; //<S2SV> break ; //<S2SV> } //<S2SV> MAKE_STD_ZVAL ( user_func ) ; //<S2SV> ZVAL_STRING ( user_func , PG ( unserialize_callback_func ) , 1 ) ; //<S2SV> args [ 0 ] = & arg_func_name ; //<S2SV> MAKE_STD_ZVAL ( arg_func_name ) ; //<S2SV> ZVAL_STRING ( arg_func_name , class_name , 1 ) ; //<S2SV> BG ( serialize_lock ) ++ ; //<S2SV> if ( call_user_function_ex ( CG ( function_table ) , NULL , user_func , & retval_ptr , 1 , args , 0 , NULL TSRMLS_CC ) != SUCCESS ) { //<S2SV> BG ( serialize_lock ) -- ; //<S2SV> if ( EG ( exception ) ) { //<S2SV> efree ( class_name ) ; //<S2SV> zval_ptr_dtor ( & user_func ) ; //<S2SV> zval_ptr_dtor ( & arg_func_name ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> php_error_docref ( NULL TSRMLS_CC , E_WARNING , "defined<S2SV_blank>(%s)<S2SV_blank>but<S2SV_blank>not<S2SV_blank>found" , user_func -> value . str . val ) ; //<S2SV> incomplete_class = 1 ; //<S2SV> ce = PHP_IC_ENTRY ; //<S2SV> zval_ptr_dtor ( & user_func ) ; //<S2SV> zval_ptr_dtor ( & arg_func_name ) ; //<S2SV> break ; //<S2SV> } //<S2SV> BG ( serialize_lock ) -- ; //<S2SV> if ( retval_ptr ) { //<S2SV> zval_ptr_dtor ( & retval_ptr ) ; //<S2SV> } //<S2SV> if ( EG ( exception ) ) { //<S2SV> efree ( class_name ) ; //<S2SV> zval_ptr_dtor ( & user_func ) ; //<S2SV> zval_ptr_dtor ( & arg_func_name ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( zend_lookup_class ( class_name , len2 , & pce TSRMLS_CC ) == SUCCESS ) { //<S2SV> ce = * pce ; //<S2SV> } else { //<S2SV> php_error_docref ( NULL TSRMLS_CC , E_WARNING , "Function<S2SV_blank>%s()<S2SV_blank>hasn\'t<S2SV_blank>defined<S2SV_blank>the<S2SV_blank>class<S2SV_blank>it<S2SV_blank>was<S2SV_blank>called<S2SV_blank>for" , user_func -> value . str . val ) ; //<S2SV> incomplete_class = 1 ; //<S2SV> ce = PHP_IC_ENTRY ; //<S2SV> } //<S2SV> zval_ptr_dtor ( & user_func ) ; //<S2SV> zval_ptr_dtor ( & arg_func_name ) ; //<S2SV> break ; //<S2SV> } while ( 1 ) ; //<S2SV> * p = YYCURSOR ; //<S2SV> if ( custom_object ) { //<S2SV> int ret ; //<S2SV> ret = object_custom ( UNSERIALIZE_PASSTHRU , ce ) ; //<S2SV> if ( ret && incomplete_class ) { //<S2SV> php_store_class_name ( * rval , class_name , len2 ) ; //<S2SV> } //<S2SV> efree ( class_name ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> elements = object_common1 ( UNSERIALIZE_PASSTHRU , ce ) ; //<S2SV> if ( incomplete_class ) { //<S2SV> php_store_class_name ( * rval , class_name , len2 ) ; //<S2SV> } //<S2SV> efree ( class_name ) ; //<S2SV> return object_common2 ( UNSERIALIZE_PASSTHRU , elements ) ; //<S2SV> } //<S2SV> # line 785 "ext/standard/var_unserializer.c" //<S2SV> yy25 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= ',' ) { //<S2SV> if ( yych != '+' ) goto yy18 ; //<S2SV> } else { //<S2SV> if ( yych <= '-' ) goto yy26 ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy27 ; //<S2SV> goto yy18 ; //<S2SV> } //<S2SV> yy26 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ':' ) goto yy18 ; //<S2SV> yy27 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( ( YYLIMIT - YYCURSOR ) < 2 ) YYFILL ( 2 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy27 ; //<S2SV> if ( yych >= ';' ) goto yy18 ; //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych != \'"\' ) goto yy18 ; //<S2SV> ++ YYCURSOR ; //<S2SV> # line 699 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> if ( ! var_hash ) return 0 ; //<S2SV> INIT_PZVAL ( * rval ) ; //<S2SV> return object_common2 ( UNSERIALIZE_PASSTHRU , //<S2SV> object_common1 ( UNSERIALIZE_PASSTHRU , ZEND_STANDARD_CLASS_DEF_PTR ) ) ; //<S2SV> } //<S2SV> # line 819 "ext/standard/var_unserializer.c" //<S2SV> yy32 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych == '+' ) goto yy33 ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy34 ; //<S2SV> goto yy18 ; //<S2SV> yy33 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ':' ) goto yy18 ; //<S2SV> yy34 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( ( YYLIMIT - YYCURSOR ) < 2 ) YYFILL ( 2 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy34 ; //<S2SV> if ( yych >= ';' ) goto yy18 ; //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych != '{' ) goto yy18 ; //<S2SV> ++ YYCURSOR ; //<S2SV> # line 678 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> long elements = parse_iv ( start + 2 ) ; //<S2SV> * p = YYCURSOR ; //<S2SV> if ( ! var_hash ) return 0 ; //<S2SV> if ( elements < 0 ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> INIT_PZVAL ( * rval ) ; //<S2SV> array_init_size ( * rval , elements ) ; //<S2SV> if ( ! process_nested_data ( UNSERIALIZE_PASSTHRU , Z_ARRVAL_PP ( rval ) , elements , 0 ) ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> return finish_nested_data ( UNSERIALIZE_PASSTHRU ) ; //<S2SV> } //<S2SV> # line 861 "ext/standard/var_unserializer.c" //<S2SV> yy39 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych == '+' ) goto yy40 ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy41 ; //<S2SV> goto yy18 ; //<S2SV> yy40 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ':' ) goto yy18 ; //<S2SV> yy41 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( ( YYLIMIT - YYCURSOR ) < 2 ) YYFILL ( 2 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy41 ; //<S2SV> if ( yych >= ';' ) goto yy18 ; //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych != \'"\' ) goto yy18 ; //<S2SV> ++ YYCURSOR ; //<S2SV> # line 643 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> size_t len , maxlen ; //<S2SV> char * str ; //<S2SV> len = parse_uiv ( start + 2 ) ; //<S2SV> maxlen = max - YYCURSOR ; //<S2SV> if ( maxlen < len ) { //<S2SV> * p = start + 2 ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( ( str = unserialize_str ( & YYCURSOR , & len , maxlen ) ) == NULL ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( * ( YYCURSOR ) != \'"\' ) { //<S2SV> efree ( str ) ; //<S2SV> * p = YYCURSOR ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( * ( YYCURSOR + 1 ) != ';' ) { //<S2SV> efree ( str ) ; //<S2SV> * p = YYCURSOR + 1 ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> YYCURSOR += 2 ; //<S2SV> * p = YYCURSOR ; //<S2SV> INIT_PZVAL ( * rval ) ; //<S2SV> ZVAL_STRINGL ( * rval , str , len , 0 ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> # line 917 "ext/standard/var_unserializer.c" //<S2SV> yy46 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych == '+' ) goto yy47 ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy48 ; //<S2SV> goto yy18 ; //<S2SV> yy47 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ':' ) goto yy18 ; //<S2SV> yy48 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( ( YYLIMIT - YYCURSOR ) < 2 ) YYFILL ( 2 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy48 ; //<S2SV> if ( yych >= ';' ) goto yy18 ; //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych != \'"\' ) goto yy18 ; //<S2SV> ++ YYCURSOR ; //<S2SV> # line 610 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> size_t len , maxlen ; //<S2SV> char * str ; //<S2SV> len = parse_uiv ( start + 2 ) ; //<S2SV> maxlen = max - YYCURSOR ; //<S2SV> if ( maxlen < len ) { //<S2SV> * p = start + 2 ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> str = ( char * ) YYCURSOR ; //<S2SV> YYCURSOR += len ; //<S2SV> if ( * ( YYCURSOR ) != \'"\' ) { //<S2SV> * p = YYCURSOR ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( * ( YYCURSOR + 1 ) != ';' ) { //<S2SV> * p = YYCURSOR + 1 ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> YYCURSOR += 2 ; //<S2SV> * p = YYCURSOR ; //<S2SV> INIT_PZVAL ( * rval ) ; //<S2SV> ZVAL_STRINGL ( * rval , str , len , 1 ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> # line 971 "ext/standard/var_unserializer.c" //<S2SV> yy53 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) { //<S2SV> if ( yych <= ',' ) { //<S2SV> if ( yych == '+' ) goto yy57 ; //<S2SV> goto yy18 ; //<S2SV> } else { //<S2SV> if ( yych <= '-' ) goto yy55 ; //<S2SV> if ( yych <= '.' ) goto yy60 ; //<S2SV> goto yy18 ; //<S2SV> } //<S2SV> } else { //<S2SV> if ( yych <= 'I' ) { //<S2SV> if ( yych <= '9' ) goto yy58 ; //<S2SV> if ( yych <= 'H' ) goto yy18 ; //<S2SV> goto yy56 ; //<S2SV> } else { //<S2SV> if ( yych != 'N' ) goto yy18 ; //<S2SV> } //<S2SV> } //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych == 'A' ) goto yy76 ; //<S2SV> goto yy18 ; //<S2SV> yy55 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) { //<S2SV> if ( yych == '.' ) goto yy60 ; //<S2SV> goto yy18 ; //<S2SV> } else { //<S2SV> if ( yych <= '9' ) goto yy58 ; //<S2SV> if ( yych != 'I' ) goto yy18 ; //<S2SV> } //<S2SV> yy56 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych == 'N' ) goto yy72 ; //<S2SV> goto yy18 ; //<S2SV> yy57 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych == '.' ) goto yy60 ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ':' ) goto yy18 ; //<S2SV> yy58 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( ( YYLIMIT - YYCURSOR ) < 4 ) YYFILL ( 4 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= ':' ) { //<S2SV> if ( yych <= '.' ) { //<S2SV> if ( yych <= '-' ) goto yy18 ; //<S2SV> goto yy70 ; //<S2SV> } else { //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy58 ; //<S2SV> goto yy18 ; //<S2SV> } //<S2SV> } else { //<S2SV> if ( yych <= 'E' ) { //<S2SV> if ( yych <= ';' ) goto yy63 ; //<S2SV> if ( yych <= 'D' ) goto yy18 ; //<S2SV> goto yy65 ; //<S2SV> } else { //<S2SV> if ( yych == 'e' ) goto yy65 ; //<S2SV> goto yy18 ; //<S2SV> } //<S2SV> } //<S2SV> yy60 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ':' ) goto yy18 ; //<S2SV> yy61 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( ( YYLIMIT - YYCURSOR ) < 4 ) YYFILL ( 4 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= ';' ) { //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy61 ; //<S2SV> if ( yych <= ':' ) goto yy18 ; //<S2SV> } else { //<S2SV> if ( yych <= 'E' ) { //<S2SV> if ( yych <= 'D' ) goto yy18 ; //<S2SV> goto yy65 ; //<S2SV> } else { //<S2SV> if ( yych == 'e' ) goto yy65 ; //<S2SV> goto yy18 ; //<S2SV> } //<S2SV> } //<S2SV> yy63 : //<S2SV> ++ YYCURSOR ; //<S2SV> # line 600 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> # if SIZEOF_LONG == 4 //<S2SV> use_double : //<S2SV> # endif //<S2SV> * p = YYCURSOR ; //<S2SV> INIT_PZVAL ( * rval ) ; //<S2SV> ZVAL_DOUBLE ( * rval , zend_strtod ( ( const char * ) start + 2 , NULL ) ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> # line 1069 "ext/standard/var_unserializer.c" //<S2SV> yy65 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= ',' ) { //<S2SV> if ( yych != '+' ) goto yy18 ; //<S2SV> } else { //<S2SV> if ( yych <= '-' ) goto yy66 ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy67 ; //<S2SV> goto yy18 ; //<S2SV> } //<S2SV> yy66 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= ',' ) { //<S2SV> if ( yych == '+' ) goto yy69 ; //<S2SV> goto yy18 ; //<S2SV> } else { //<S2SV> if ( yych <= '-' ) goto yy69 ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ':' ) goto yy18 ; //<S2SV> } //<S2SV> yy67 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( YYLIMIT <= YYCURSOR ) YYFILL ( 1 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy67 ; //<S2SV> if ( yych == ';' ) goto yy63 ; //<S2SV> goto yy18 ; //<S2SV> yy69 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy67 ; //<S2SV> goto yy18 ; //<S2SV> yy70 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( ( YYLIMIT - YYCURSOR ) < 4 ) YYFILL ( 4 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= ';' ) { //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy70 ; //<S2SV> if ( yych <= ':' ) goto yy18 ; //<S2SV> goto yy63 ; //<S2SV> } else { //<S2SV> if ( yych <= 'E' ) { //<S2SV> if ( yych <= 'D' ) goto yy18 ; //<S2SV> goto yy65 ; //<S2SV> } else { //<S2SV> if ( yych == 'e' ) goto yy65 ; //<S2SV> goto yy18 ; //<S2SV> } //<S2SV> } //<S2SV> yy72 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych != 'F' ) goto yy18 ; //<S2SV> yy73 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych != ';' ) goto yy18 ; //<S2SV> ++ YYCURSOR ; //<S2SV> # line 585 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> * p = YYCURSOR ; //<S2SV> INIT_PZVAL ( * rval ) ; //<S2SV> if ( ! strncmp ( start + 2 , "NAN" , 3 ) ) { //<S2SV> ZVAL_DOUBLE ( * rval , php_get_nan ( ) ) ; //<S2SV> } else if ( ! strncmp ( start + 2 , "INF" , 3 ) ) { //<S2SV> ZVAL_DOUBLE ( * rval , php_get_inf ( ) ) ; //<S2SV> } else if ( ! strncmp ( start + 2 , "-INF" , 4 ) ) { //<S2SV> ZVAL_DOUBLE ( * rval , - php_get_inf ( ) ) ; //<S2SV> } //<S2SV> return 1 ; //<S2SV> } //<S2SV> # line 1143 "ext/standard/var_unserializer.c" //<S2SV> yy76 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych == 'N' ) goto yy73 ; //<S2SV> goto yy18 ; //<S2SV> yy77 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= ',' ) { //<S2SV> if ( yych != '+' ) goto yy18 ; //<S2SV> } else { //<S2SV> if ( yych <= '-' ) goto yy78 ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy79 ; //<S2SV> goto yy18 ; //<S2SV> } //<S2SV> yy78 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ':' ) goto yy18 ; //<S2SV> yy79 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( YYLIMIT <= YYCURSOR ) YYFILL ( 1 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy79 ; //<S2SV> if ( yych != ';' ) goto yy18 ; //<S2SV> ++ YYCURSOR ; //<S2SV> # line 558 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> # if SIZEOF_LONG == 4 //<S2SV> int digits = YYCURSOR - start - 3 ; //<S2SV> if ( start [ 2 ] == '-' || start [ 2 ] == '+' ) { //<S2SV> digits -- ; //<S2SV> } //<S2SV> if ( digits >= MAX_LENGTH_OF_LONG - 1 ) { //<S2SV> if ( digits == MAX_LENGTH_OF_LONG - 1 ) { //<S2SV> int cmp = strncmp ( YYCURSOR - MAX_LENGTH_OF_LONG , long_min_digits , MAX_LENGTH_OF_LONG - 1 ) ; //<S2SV> if ( ! ( cmp < 0 || ( cmp == 0 && start [ 2 ] == '-' ) ) ) { //<S2SV> goto use_double ; //<S2SV> } //<S2SV> } else { //<S2SV> goto use_double ; //<S2SV> } //<S2SV> } //<S2SV> # endif //<S2SV> * p = YYCURSOR ; //<S2SV> INIT_PZVAL ( * rval ) ; //<S2SV> ZVAL_LONG ( * rval , parse_iv ( start + 2 ) ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> # line 1197 "ext/standard/var_unserializer.c" //<S2SV> yy83 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= '2' ) goto yy18 ; //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych != ';' ) goto yy18 ; //<S2SV> ++ YYCURSOR ; //<S2SV> # line 551 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> * p = YYCURSOR ; //<S2SV> INIT_PZVAL ( * rval ) ; //<S2SV> ZVAL_BOOL ( * rval , parse_iv ( start + 2 ) ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> # line 1212 "ext/standard/var_unserializer.c" //<S2SV> yy87 : //<S2SV> ++ YYCURSOR ; //<S2SV> # line 544 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> * p = YYCURSOR ; //<S2SV> INIT_PZVAL ( * rval ) ; //<S2SV> ZVAL_NULL ( * rval ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> # line 1222 "ext/standard/var_unserializer.c" //<S2SV> yy89 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= ',' ) { //<S2SV> if ( yych != '+' ) goto yy18 ; //<S2SV> } else { //<S2SV> if ( yych <= '-' ) goto yy90 ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy91 ; //<S2SV> goto yy18 ; //<S2SV> } //<S2SV> yy90 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ':' ) goto yy18 ; //<S2SV> yy91 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( YYLIMIT <= YYCURSOR ) YYFILL ( 1 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy91 ; //<S2SV> if ( yych != ';' ) goto yy18 ; //<S2SV> ++ YYCURSOR ; //<S2SV> # line 521 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> long id ; //<S2SV> * p = YYCURSOR ; //<S2SV> if ( ! var_hash ) return 0 ; //<S2SV> id = parse_iv ( start + 2 ) - 1 ; //<S2SV> if ( id == - 1 || var_access ( var_hash , id , & rval_ref ) != SUCCESS ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( * rval == * rval_ref ) return 0 ; //<S2SV> if ( * rval != NULL ) { //<S2SV> var_push_dtor_no_addref ( var_hash , rval ) ; //<S2SV> } //<S2SV> * rval = * rval_ref ; //<S2SV> Z_ADDREF_PP ( rval ) ; //<S2SV> Z_UNSET_ISREF_PP ( rval ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> # line 1268 "ext/standard/var_unserializer.c" //<S2SV> yy95 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= ',' ) { //<S2SV> if ( yych != '+' ) goto yy18 ; //<S2SV> } else { //<S2SV> if ( yych <= '-' ) goto yy96 ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy97 ; //<S2SV> goto yy18 ; //<S2SV> } //<S2SV> yy96 : //<S2SV> yych = * ++ YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych >= ':' ) goto yy18 ; //<S2SV> yy97 : //<S2SV> ++ YYCURSOR ; //<S2SV> if ( YYLIMIT <= YYCURSOR ) YYFILL ( 1 ) ; //<S2SV> yych = * YYCURSOR ; //<S2SV> if ( yych <= '/' ) goto yy18 ; //<S2SV> if ( yych <= '9' ) goto yy97 ; //<S2SV> if ( yych != ';' ) goto yy18 ; //<S2SV> ++ YYCURSOR ; //<S2SV> # line 500 "ext/standard/var_unserializer.re" //<S2SV> { //<S2SV> long id ; //<S2SV> * p = YYCURSOR ; //<S2SV> if ( ! var_hash ) return 0 ; //<S2SV> id = parse_iv ( start + 2 ) - 1 ; //<S2SV> if ( id == - 1 || var_access ( var_hash , id , & rval_ref ) != SUCCESS ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( * rval != NULL ) { //<S2SV> var_push_dtor_no_addref ( var_hash , rval ) ; //<S2SV> } //<S2SV> * rval = * rval_ref ; //<S2SV> Z_ADDREF_PP ( rval ) ; //<S2SV> Z_SET_ISREF_PP ( rval ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> # line 1312 "ext/standard/var_unserializer.c" //<S2SV> } //<S2SV> # line 863 "ext/standard/var_unserializer.re" //<S2SV> return 0 ; //<S2SV> } //<S2SV> 