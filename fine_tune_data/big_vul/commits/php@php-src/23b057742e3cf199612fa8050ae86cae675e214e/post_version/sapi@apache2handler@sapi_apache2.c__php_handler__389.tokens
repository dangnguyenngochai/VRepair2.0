static int php_handler ( request_rec * r ) //<S2SV> { //<S2SV> php_struct * volatile ctx ; //<S2SV> void * conf ; //<S2SV> apr_bucket_brigade * volatile brigade ; //<S2SV> apr_bucket * bucket ; //<S2SV> apr_status_t rv ; //<S2SV> request_rec * volatile parent_req = NULL ; //<S2SV> TSRMLS_FETCH ( ) ; //<S2SV> # define PHPAP_INI_OFF php_apache_ini_dtor ( r , parent_req TSRMLS_CC ) ; //<S2SV> conf = ap_get_module_config ( r -> per_dir_config , & php5_module ) ; //<S2SV> ctx = SG ( server_context ) ; //<S2SV> if ( ctx == NULL || ( ctx && ctx -> request_processed && ! strcmp ( r -> protocol , "INCLUDED" ) ) ) { //<S2SV> normal : //<S2SV> ctx = SG ( server_context ) = apr_pcalloc ( r -> pool , sizeof ( * ctx ) ) ; //<S2SV> apr_pool_cleanup_register ( r -> pool , ( void * ) & SG ( server_context ) , php_server_context_cleanup , apr_pool_cleanup_null ) ; //<S2SV> ctx -> r = r ; //<S2SV> ctx = NULL ; //<S2SV> } else { //<S2SV> parent_req = ctx -> r ; //<S2SV> ctx -> r = r ; //<S2SV> } //<S2SV> apply_config ( conf ) ; //<S2SV> if ( strcmp ( r -> handler , PHP_MAGIC_TYPE ) && strcmp ( r -> handler , PHP_SOURCE_MAGIC_TYPE ) && strcmp ( r -> handler , PHP_SCRIPT ) ) { //<S2SV> if ( ! AP2 ( xbithack ) || strcmp ( r -> handler , "text/html" ) || ! ( r -> finfo . protection & APR_UEXECUTE ) ) { //<S2SV> PHPAP_INI_OFF ; //<S2SV> return DECLINED ; //<S2SV> } //<S2SV> } //<S2SV> if ( r -> used_path_info == AP_REQ_REJECT_PATH_INFO //<S2SV> && r -> path_info && r -> path_info [ 0 ] ) { //<S2SV> PHPAP_INI_OFF ; //<S2SV> return HTTP_NOT_FOUND ; //<S2SV> } //<S2SV> if ( ! AP2 ( engine ) ) { //<S2SV> PHPAP_INI_OFF ; //<S2SV> return DECLINED ; //<S2SV> } //<S2SV> if ( r -> finfo . filetype == 0 ) { //<S2SV> php_apache_sapi_log_message_ex ( "script<S2SV_blank>\'%s\'<S2SV_blank>not<S2SV_blank>found<S2SV_blank>or<S2SV_blank>unable<S2SV_blank>to<S2SV_blank>stat" , r TSRMLS_CC ) ; //<S2SV> PHPAP_INI_OFF ; //<S2SV> return HTTP_NOT_FOUND ; //<S2SV> } //<S2SV> if ( r -> finfo . filetype == APR_DIR ) { //<S2SV> php_apache_sapi_log_message_ex ( "attempt<S2SV_blank>to<S2SV_blank>invoke<S2SV_blank>directory<S2SV_blank>\'%s\'<S2SV_blank>as<S2SV_blank>script" , r TSRMLS_CC ) ; //<S2SV> PHPAP_INI_OFF ; //<S2SV> return HTTP_FORBIDDEN ; //<S2SV> } //<S2SV> if ( r -> main == NULL || //<S2SV> r -> subprocess_env != r -> main -> subprocess_env //<S2SV> ) { //<S2SV> ap_add_common_vars ( r ) ; //<S2SV> ap_add_cgi_vars ( r ) ; //<S2SV> } //<S2SV> zend_first_try { //<S2SV> if ( ctx == NULL ) { //<S2SV> brigade = apr_brigade_create ( r -> pool , r -> connection -> bucket_alloc ) ; //<S2SV> ctx = SG ( server_context ) ; //<S2SV> ctx -> brigade = brigade ; //<S2SV> if ( php_apache_request_ctor ( r , ctx TSRMLS_CC ) != SUCCESS ) { //<S2SV> zend_bailout ( ) ; //<S2SV> } //<S2SV> } else { //<S2SV> if ( ! parent_req ) { //<S2SV> parent_req = ctx -> r ; //<S2SV> } //<S2SV> if ( parent_req && parent_req -> handler && //<S2SV> strcmp ( parent_req -> handler , PHP_MAGIC_TYPE ) && //<S2SV> strcmp ( parent_req -> handler , PHP_SOURCE_MAGIC_TYPE ) && //<S2SV> strcmp ( parent_req -> handler , PHP_SCRIPT ) ) { //<S2SV> if ( php_apache_request_ctor ( r , ctx TSRMLS_CC ) != SUCCESS ) { //<S2SV> zend_bailout ( ) ; //<S2SV> } //<S2SV> } //<S2SV> if ( parent_req && parent_req -> status != HTTP_OK && parent_req -> status != 413 && strcmp ( r -> protocol , "INCLUDED" ) ) { //<S2SV> parent_req = NULL ; //<S2SV> goto normal ; //<S2SV> } //<S2SV> ctx -> r = r ; //<S2SV> brigade = ctx -> brigade ; //<S2SV> } //<S2SV> if ( AP2 ( last_modified ) ) { //<S2SV> ap_update_mtime ( r , r -> finfo . mtime ) ; //<S2SV> ap_set_last_modified ( r ) ; //<S2SV> } //<S2SV> if ( strncmp ( r -> handler , PHP_SOURCE_MAGIC_TYPE , sizeof ( PHP_SOURCE_MAGIC_TYPE ) - 1 ) == 0 ) { //<S2SV> zend_syntax_highlighter_ini syntax_highlighter_ini ; //<S2SV> php_get_highlight_struct ( & syntax_highlighter_ini ) ; //<S2SV> highlight_file ( ( char * ) r -> filename , & syntax_highlighter_ini TSRMLS_CC ) ; //<S2SV> } else { //<S2SV> zend_file_handle zfd ; //<S2SV> zfd . type = ZEND_HANDLE_FILENAME ; //<S2SV> zfd . filename = ( char * ) r -> filename ; //<S2SV> zfd . free_filename = 0 ; //<S2SV> zfd . opened_path = NULL ; //<S2SV> if ( ! parent_req ) { //<S2SV> php_execute_script ( & zfd TSRMLS_CC ) ; //<S2SV> } else { //<S2SV> zend_execute_scripts ( ZEND_INCLUDE TSRMLS_CC , NULL , 1 , & zfd ) ; //<S2SV> } //<S2SV> apr_table_set ( r -> notes , "mod_php_memory_usage" , //<S2SV> apr_psprintf ( ctx -> r -> pool , "%" APR_SIZE_T_FMT , zend_memory_peak_usage ( 1 TSRMLS_CC ) ) ) ; //<S2SV> } //<S2SV> } zend_end_try ( ) ; //<S2SV> if ( ! parent_req ) { //<S2SV> php_apache_request_dtor ( r TSRMLS_CC ) ; //<S2SV> ctx -> request_processed = 1 ; //<S2SV> apr_brigade_cleanup ( brigade ) ; //<S2SV> bucket = apr_bucket_eos_create ( r -> connection -> bucket_alloc ) ; //<S2SV> APR_BRIGADE_INSERT_TAIL ( brigade , bucket ) ; //<S2SV> rv = ap_pass_brigade ( r -> output_filters , brigade ) ; //<S2SV> if ( rv != APR_SUCCESS || r -> connection -> aborted ) { //<S2SV> zend_first_try { //<S2SV> php_handle_aborted_connection ( ) ; //<S2SV> } zend_end_try ( ) ; //<S2SV> } //<S2SV> apr_brigade_cleanup ( brigade ) ; //<S2SV> apr_pool_cleanup_run ( r -> pool , ( void * ) & SG ( server_context ) , php_server_context_cleanup ) ; //<S2SV> } else { //<S2SV> ctx -> r = parent_req ; //<S2SV> } //<S2SV> return OK ; //<S2SV> } //<S2SV> 