PHP_FUNCTION ( imagegammacorrect ) //<S2SV> { //<S2SV> zval * IM ; //<S2SV> gdImagePtr im ; //<S2SV> int i ; //<S2SV> double input , output ; //<S2SV> if ( zend_parse_parameters ( ZEND_NUM_ARGS ( ) TSRMLS_CC , "rdd" , & IM , & input , & output ) == FAILURE ) { //<S2SV> return ; //<S2SV> } //<S2SV> ZEND_FETCH_RESOURCE ( im , gdImagePtr , & IM , - 1 , "Image" , le_gd ) ; //<S2SV> if ( gdImageTrueColor ( im ) ) { //<S2SV> int x , y , c ; //<S2SV> for ( y = 0 ; y < gdImageSY ( im ) ; y ++ ) { //<S2SV> for ( x = 0 ; x < gdImageSX ( im ) ; x ++ ) { //<S2SV> c = gdImageGetPixel ( im , x , y ) ; //<S2SV> gdImageSetPixel ( im , x , y , //<S2SV> gdTrueColorAlpha ( //<S2SV> ( int ) ( ( pow ( ( pow ( ( gdTrueColorGetRed ( c ) / 255.0 ) , input ) ) , 1.0 / output ) * 255 ) + .5 ) , //<S2SV> ( int ) ( ( pow ( ( pow ( ( gdTrueColorGetGreen ( c ) / 255.0 ) , input ) ) , 1.0 / output ) * 255 ) + .5 ) , //<S2SV> ( int ) ( ( pow ( ( pow ( ( gdTrueColorGetBlue ( c ) / 255.0 ) , input ) ) , 1.0 / output ) * 255 ) + .5 ) , //<S2SV> gdTrueColorGetAlpha ( c ) //<S2SV> ) //<S2SV> ) ; //<S2SV> } //<S2SV> } //<S2SV> RETURN_TRUE ; //<S2SV> } //<S2SV> for ( i = 0 ; i < gdImageColorsTotal ( im ) ; i ++ ) { //<S2SV> im -> red [ i ] = ( int ) ( ( pow ( ( pow ( ( im -> red [ i ] / 255.0 ) , input ) ) , 1.0 / output ) * 255 ) + .5 ) ; //<S2SV> im -> green [ i ] = ( int ) ( ( pow ( ( pow ( ( im -> green [ i ] / 255.0 ) , input ) ) , 1.0 / output ) * 255 ) + .5 ) ; //<S2SV> im -> blue [ i ] = ( int ) ( ( pow ( ( pow ( ( im -> blue [ i ] / 255.0 ) , input ) ) , 1.0 / output ) * 255 ) + .5 ) ; //<S2SV> } //<S2SV> RETURN_TRUE ; //<S2SV> } //<S2SV> 