PHP_FUNCTION ( imagecrop ) //<S2SV> { //<S2SV> zval * IM ; //<S2SV> gdImagePtr im ; //<S2SV> gdImagePtr im_crop ; //<S2SV> gdRect rect ; //<S2SV> zval * z_rect ; //<S2SV> zval * * tmp ; //<S2SV> if ( zend_parse_parameters ( ZEND_NUM_ARGS ( ) TSRMLS_CC , "ra" , & IM , & z_rect ) == FAILURE ) { //<S2SV> return ; //<S2SV> } //<S2SV> ZEND_FETCH_RESOURCE ( im , gdImagePtr , & IM , - 1 , "Image" , le_gd ) ; //<S2SV> if ( zend_hash_find ( HASH_OF ( z_rect ) , "x" , sizeof ( "x" ) , ( void * * ) & tmp ) != FAILURE ) { //<S2SV> rect . x = Z_LVAL_PP ( tmp ) ; //<S2SV> } else { //<S2SV> php_error_docref ( NULL TSRMLS_CC , E_WARNING , "Missing<S2SV_blank>x<S2SV_blank>position" ) ; //<S2SV> RETURN_FALSE ; //<S2SV> } //<S2SV> if ( zend_hash_find ( HASH_OF ( z_rect ) , "y" , sizeof ( "x" ) , ( void * * ) & tmp ) != FAILURE ) { //<S2SV> rect . y = Z_LVAL_PP ( tmp ) ; //<S2SV> } else { //<S2SV> php_error_docref ( NULL TSRMLS_CC , E_WARNING , "Missing<S2SV_blank>y<S2SV_blank>position" ) ; //<S2SV> RETURN_FALSE ; //<S2SV> } //<S2SV> if ( zend_hash_find ( HASH_OF ( z_rect ) , "width" , sizeof ( "width" ) , ( void * * ) & tmp ) != FAILURE ) { //<S2SV> rect . width = Z_LVAL_PP ( tmp ) ; //<S2SV> } else { //<S2SV> php_error_docref ( NULL TSRMLS_CC , E_WARNING , "Missing<S2SV_blank>width" ) ; //<S2SV> RETURN_FALSE ; //<S2SV> } //<S2SV> if ( zend_hash_find ( HASH_OF ( z_rect ) , "height" , sizeof ( "height" ) , ( void * * ) & tmp ) != FAILURE ) { //<S2SV> rect . height = Z_LVAL_PP ( tmp ) ; //<S2SV> } else { //<S2SV> php_error_docref ( NULL TSRMLS_CC , E_WARNING , "Missing<S2SV_blank>height" ) ; //<S2SV> RETURN_FALSE ; //<S2SV> } //<S2SV> im_crop = gdImageCrop ( im , & rect ) ; //<S2SV> if ( im_crop == NULL ) { //<S2SV> RETURN_FALSE ; //<S2SV> } else { //<S2SV> ZEND_REGISTER_RESOURCE ( return_value , im_crop , le_gd ) ; //<S2SV> } //<S2SV> } //<S2SV> 