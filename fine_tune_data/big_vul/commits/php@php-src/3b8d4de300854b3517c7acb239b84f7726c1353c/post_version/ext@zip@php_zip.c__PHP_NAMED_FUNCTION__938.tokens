static PHP_NAMED_FUNCTION ( zif_zip_entry_read ) //<S2SV> { //<S2SV> zval * zip_entry ; //<S2SV> zend_long len = 0 ; //<S2SV> zip_read_rsrc * zr_rsrc ; //<S2SV> zend_string * buffer ; //<S2SV> int n = 0 ; //<S2SV> if ( zend_parse_parameters ( ZEND_NUM_ARGS ( ) , "r|l" , & zip_entry , & len ) == FAILURE ) { //<S2SV> return ; //<S2SV> } //<S2SV> if ( ( zr_rsrc = ( zip_read_rsrc * ) zend_fetch_resource ( Z_RES_P ( zip_entry ) , le_zip_entry_name , le_zip_entry ) ) == NULL ) { //<S2SV> RETURN_FALSE ; //<S2SV> } //<S2SV> if ( len <= 0 ) { //<S2SV> len = 1024 ; //<S2SV> } //<S2SV> if ( zr_rsrc -> zf ) { //<S2SV> buffer = zend_string_safe_alloc ( 1 , len , 0 , 0 ) ; //<S2SV> n = zip_fread ( zr_rsrc -> zf , ZSTR_VAL ( buffer ) , ZSTR_LEN ( buffer ) ) ; //<S2SV> if ( n > 0 ) { //<S2SV> ZSTR_VAL ( buffer ) [ n ] = '\\0' ; //<S2SV> ZSTR_LEN ( buffer ) = n ; //<S2SV> RETURN_NEW_STR ( buffer ) ; //<S2SV> } else { //<S2SV> zend_string_free ( buffer ) ; //<S2SV> RETURN_EMPTY_STRING ( ) //<S2SV> } //<S2SV> } else { //<S2SV> RETURN_FALSE ; //<S2SV> } //<S2SV> } //<S2SV> 