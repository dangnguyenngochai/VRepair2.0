static void php_zip_get_from ( INTERNAL_FUNCTION_PARAMETERS , int type ) //<S2SV> { //<S2SV> struct zip * intern ; //<S2SV> zval * self = getThis ( ) ; //<S2SV> struct zip_stat sb ; //<S2SV> struct zip_file * zf ; //<S2SV> zend_long index = - 1 ; //<S2SV> zend_long flags = 0 ; //<S2SV> zend_long len = 0 ; //<S2SV> zend_string * filename ; //<S2SV> zend_string * buffer ; //<S2SV> int n = 0 ; //<S2SV> if ( ! self ) { //<S2SV> RETURN_FALSE ; //<S2SV> } //<S2SV> ZIP_FROM_OBJECT ( intern , self ) ; //<S2SV> if ( type == 1 ) { //<S2SV> if ( zend_parse_parameters ( ZEND_NUM_ARGS ( ) , "P|ll" , & filename , & len , & flags ) == FAILURE ) { //<S2SV> return ; //<S2SV> } //<S2SV> PHP_ZIP_STAT_PATH ( intern , ZSTR_VAL ( filename ) , ZSTR_LEN ( filename ) , flags , sb ) ; //<S2SV> } else { //<S2SV> if ( zend_parse_parameters ( ZEND_NUM_ARGS ( ) , "l|ll" , & index , & len , & flags ) == FAILURE ) { //<S2SV> return ; //<S2SV> } //<S2SV> PHP_ZIP_STAT_INDEX ( intern , index , 0 , sb ) ; //<S2SV> } //<S2SV> if ( sb . size < 1 ) { //<S2SV> RETURN_EMPTY_STRING ( ) ; //<S2SV> } //<S2SV> if ( len < 1 ) { //<S2SV> len = sb . size ; //<S2SV> } //<S2SV> if ( index >= 0 ) { //<S2SV> zf = zip_fopen_index ( intern , index , flags ) ; //<S2SV> } else { //<S2SV> zf = zip_fopen ( intern , ZSTR_VAL ( filename ) , flags ) ; //<S2SV> } //<S2SV> if ( zf == NULL ) { //<S2SV> RETURN_FALSE ; //<S2SV> } //<S2SV> buffer = zend_string_alloc ( len , 0 ) ; //<S2SV> n = zip_fread ( zf , ZSTR_VAL ( buffer ) , ZSTR_LEN ( buffer ) ) ; //<S2SV> if ( n < 1 ) { //<S2SV> zend_string_free ( buffer ) ; //<S2SV> RETURN_EMPTY_STRING ( ) ; //<S2SV> } //<S2SV> zip_fclose ( zf ) ; //<S2SV> ZSTR_VAL ( buffer ) [ n ] = '\\0' ; //<S2SV> ZSTR_LEN ( buffer ) = n ; //<S2SV> RETURN_NEW_STR ( buffer ) ; //<S2SV> } //<S2SV> 