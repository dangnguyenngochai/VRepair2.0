SPL_METHOD ( Array , unserialize ) //<S2SV> { //<S2SV> spl_array_object * intern = ( spl_array_object * ) zend_object_store_get_object ( getThis ( ) TSRMLS_CC ) ; //<S2SV> char * buf ; //<S2SV> int buf_len ; //<S2SV> const unsigned char * p , * s ; //<S2SV> php_unserialize_data_t var_hash ; //<S2SV> zval * pmembers , * pflags = NULL ; //<S2SV> HashTable * aht ; //<S2SV> long flags ; //<S2SV> if ( zend_parse_parameters ( ZEND_NUM_ARGS ( ) TSRMLS_CC , "s" , & buf , & buf_len ) == FAILURE ) { //<S2SV> return ; //<S2SV> } //<S2SV> if ( buf_len == 0 ) { //<S2SV> return ; //<S2SV> } //<S2SV> aht = spl_array_get_hash_table ( intern , 0 TSRMLS_CC ) ; //<S2SV> if ( aht -> nApplyCount > 0 ) { //<S2SV> zend_error ( E_WARNING , "Modification<S2SV_blank>of<S2SV_blank>ArrayObject<S2SV_blank>during<S2SV_blank>sorting<S2SV_blank>is<S2SV_blank>prohibited" ) ; //<S2SV> return ; //<S2SV> } //<S2SV> s = p = ( const unsigned char * ) buf ; //<S2SV> PHP_VAR_UNSERIALIZE_INIT ( var_hash ) ; //<S2SV> if ( * p != 'x' || * ++ p != ':' ) { //<S2SV> goto outexcept ; //<S2SV> } //<S2SV> ++ p ; //<S2SV> ALLOC_INIT_ZVAL ( pflags ) ; //<S2SV> if ( ! php_var_unserialize ( & pflags , & p , s + buf_len , & var_hash TSRMLS_CC ) || Z_TYPE_P ( pflags ) != IS_LONG ) { //<S2SV> goto outexcept ; //<S2SV> } //<S2SV> var_push_dtor ( & var_hash , & pflags ) ; //<S2SV> -- p ; //<S2SV> flags = Z_LVAL_P ( pflags ) ; //<S2SV> if ( * p != ';' ) { //<S2SV> goto outexcept ; //<S2SV> } //<S2SV> ++ p ; //<S2SV> if ( * p != 'm' ) { //<S2SV> if ( * p != 'a' && * p != 'O' && * p != 'C' && * p != 'r' ) { //<S2SV> goto outexcept ; //<S2SV> } //<S2SV> intern -> ar_flags &= ~ SPL_ARRAY_CLONE_MASK ; //<S2SV> intern -> ar_flags |= flags & SPL_ARRAY_CLONE_MASK ; //<S2SV> zval_ptr_dtor ( & intern -> array ) ; //<S2SV> ALLOC_INIT_ZVAL ( intern -> array ) ; //<S2SV> if ( ! php_var_unserialize ( & intern -> array , & p , s + buf_len , & var_hash TSRMLS_CC ) ) { //<S2SV> goto outexcept ; //<S2SV> } //<S2SV> var_push_dtor ( & var_hash , & intern -> array ) ; //<S2SV> } //<S2SV> if ( * p != ';' ) { //<S2SV> goto outexcept ; //<S2SV> } //<S2SV> ++ p ; //<S2SV> if ( * p != 'm' || * ++ p != ':' ) { //<S2SV> goto outexcept ; //<S2SV> } //<S2SV> ++ p ; //<S2SV> ALLOC_INIT_ZVAL ( pmembers ) ; //<S2SV> if ( ! php_var_unserialize ( & pmembers , & p , s + buf_len , & var_hash TSRMLS_CC ) || Z_TYPE_P ( pmembers ) != IS_ARRAY ) { //<S2SV> zval_ptr_dtor ( & pmembers ) ; //<S2SV> goto outexcept ; //<S2SV> } //<S2SV> var_push_dtor ( & var_hash , & pmembers ) ; //<S2SV> if ( ! intern -> std . properties ) { //<S2SV> rebuild_object_properties ( & intern -> std ) ; //<S2SV> } //<S2SV> zend_hash_copy ( intern -> std . properties , Z_ARRVAL_P ( pmembers ) , ( copy_ctor_func_t ) zval_add_ref , ( void * ) NULL , sizeof ( zval * ) ) ; //<S2SV> zval_ptr_dtor ( & pmembers ) ; //<S2SV> PHP_VAR_UNSERIALIZE_DESTROY ( var_hash ) ; //<S2SV> if ( pflags ) { //<S2SV> zval_ptr_dtor ( & pflags ) ; //<S2SV> } //<S2SV> return ; //<S2SV> outexcept : //<S2SV> PHP_VAR_UNSERIALIZE_DESTROY ( var_hash ) ; //<S2SV> if ( pflags ) { //<S2SV> zval_ptr_dtor ( & pflags ) ; //<S2SV> } //<S2SV> zend_throw_exception_ex ( spl_ce_UnexpectedValueException , 0 TSRMLS_CC , "Error<S2SV_blank>at<S2SV_blank>offset<S2SV_blank>%ld<S2SV_blank>of<S2SV_blank>%d<S2SV_blank>bytes" , ( long ) ( ( char * ) p - buf ) , buf_len ) ; //<S2SV> return ; //<S2SV> } //<S2SV> 