PS_SERIALIZER_DECODE_FUNC ( php ) //<S2SV> { //<S2SV> const char * p , * q ; //<S2SV> char * name ; //<S2SV> const char * endptr = val + vallen ; //<S2SV> zval * current ; //<S2SV> int namelen ; //<S2SV> int has_value ; //<S2SV> php_unserialize_data_t var_hash ; //<S2SV> PHP_VAR_UNSERIALIZE_INIT ( var_hash ) ; //<S2SV> p = val ; //<S2SV> while ( p < endptr ) { //<S2SV> zval * * tmp ; //<S2SV> q = p ; //<S2SV> while ( * q != PS_DELIMITER ) { //<S2SV> if ( ++ q >= endptr ) goto break_outer_loop ; //<S2SV> } //<S2SV> if ( p [ 0 ] == PS_UNDEF_MARKER ) { //<S2SV> p ++ ; //<S2SV> has_value = 0 ; //<S2SV> } else { //<S2SV> has_value = 1 ; //<S2SV> } //<S2SV> namelen = q - p ; //<S2SV> name = estrndup ( p , namelen ) ; //<S2SV> q ++ ; //<S2SV> if ( zend_hash_find ( & EG ( symbol_table ) , name , namelen + 1 , ( void * * ) & tmp ) == SUCCESS ) { //<S2SV> if ( ( Z_TYPE_PP ( tmp ) == IS_ARRAY && Z_ARRVAL_PP ( tmp ) == & EG ( symbol_table ) ) || * tmp == PS ( http_session_vars ) ) { //<S2SV> goto skip ; //<S2SV> } //<S2SV> } //<S2SV> if ( has_value ) { //<S2SV> ALLOC_INIT_ZVAL ( current ) ; //<S2SV> if ( php_var_unserialize ( & current , ( const unsigned char * * ) & q , ( const unsigned char * ) endptr , & var_hash TSRMLS_CC ) ) { //<S2SV> php_set_session_var ( name , namelen , current , & var_hash TSRMLS_CC ) ; //<S2SV> } else { //<S2SV> var_push_dtor_no_addref ( & var_hash , & current ) ; //<S2SV> efree ( name ) ; //<S2SV> PHP_VAR_UNSERIALIZE_DESTROY ( var_hash ) ; //<S2SV> return FAILURE ; //<S2SV> } //<S2SV> var_push_dtor_no_addref ( & var_hash , & current ) ; //<S2SV> } //<S2SV> PS_ADD_VARL ( name , namelen ) ; //<S2SV> skip : //<S2SV> efree ( name ) ; //<S2SV> p = q ; //<S2SV> } //<S2SV> break_outer_loop : //<S2SV> PHP_VAR_UNSERIALIZE_DESTROY ( var_hash ) ; //<S2SV> return SUCCESS ; //<S2SV> } //<S2SV> 