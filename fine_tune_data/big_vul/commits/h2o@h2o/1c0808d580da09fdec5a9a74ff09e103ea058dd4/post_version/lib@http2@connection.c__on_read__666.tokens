static void on_read ( h2o_socket_t * sock , int status ) //<S2SV> { //<S2SV> h2o_http2_conn_t * conn = sock -> data ; //<S2SV> if ( status != 0 ) { //<S2SV> h2o_socket_read_stop ( conn -> sock ) ; //<S2SV> close_connection ( conn ) ; //<S2SV> return ; //<S2SV> } //<S2SV> update_idle_timeout ( conn ) ; //<S2SV> if ( parse_input ( conn ) != 0 ) //<S2SV> return ; //<S2SV> if ( h2o_timeout_is_linked ( & conn -> _write . timeout_entry ) ) { //<S2SV> h2o_timeout_unlink ( & conn -> _write . timeout_entry ) ; //<S2SV> do_emit_writereq ( conn ) ; //<S2SV> } //<S2SV> } //<S2SV> 