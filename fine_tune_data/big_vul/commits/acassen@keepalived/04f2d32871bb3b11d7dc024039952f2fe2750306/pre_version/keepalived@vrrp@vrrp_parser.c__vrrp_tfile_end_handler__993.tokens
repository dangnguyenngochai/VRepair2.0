static void //<S2SV> vrrp_tfile_end_handler ( void ) //<S2SV> { //<S2SV> vrrp_tracked_file_t * tfile = LIST_TAIL_DATA ( vrrp_data -> vrrp_track_files ) ; //<S2SV> struct stat statb ; //<S2SV> FILE * tf ; //<S2SV> int ret ; //<S2SV> if ( ! tfile -> file_path ) { //<S2SV> report_config_error ( CONFIG_GENERAL_ERROR , "No<S2SV_blank>file<S2SV_blank>set<S2SV_blank>for<S2SV_blank>track_file<S2SV_blank>%s<S2SV_blank>-<S2SV_blank>removing" , tfile -> fname ) ; //<S2SV> free_list_element ( vrrp_data -> vrrp_track_files , vrrp_data -> vrrp_track_files -> tail ) ; //<S2SV> return ; //<S2SV> } //<S2SV> if ( track_file_init == TRACK_FILE_NO_INIT ) //<S2SV> return ; //<S2SV> ret = stat ( tfile -> file_path , & statb ) ; //<S2SV> if ( ! ret ) { //<S2SV> if ( track_file_init == TRACK_FILE_CREATE ) { //<S2SV> return ; //<S2SV> } //<S2SV> if ( ( statb . st_mode & S_IFMT ) != S_IFREG ) { //<S2SV> report_config_error ( CONFIG_GENERAL_ERROR , "Cannot<S2SV_blank>initialise<S2SV_blank>track<S2SV_blank>file<S2SV_blank>%s<S2SV_blank>-<S2SV_blank>it<S2SV_blank>is<S2SV_blank>not<S2SV_blank>a<S2SV_blank>regular<S2SV_blank>file" , tfile -> fname ) ; //<S2SV> return ; //<S2SV> } //<S2SV> if ( reload ) //<S2SV> return ; //<S2SV> } //<S2SV> if ( ! __test_bit ( CONFIG_TEST_BIT , & debug ) ) { //<S2SV> if ( ( tf = fopen ( tfile -> file_path , "w" ) ) ) { //<S2SV> fprintf ( tf , "%d\\n" , track_file_init_value ) ; //<S2SV> fclose ( tf ) ; //<S2SV> } //<S2SV> else //<S2SV> report_config_error ( CONFIG_GENERAL_ERROR , "Unable<S2SV_blank>to<S2SV_blank>initialise<S2SV_blank>track<S2SV_blank>file<S2SV_blank>%s" , tfile -> fname ) ; //<S2SV> } //<S2SV> } //<S2SV> 