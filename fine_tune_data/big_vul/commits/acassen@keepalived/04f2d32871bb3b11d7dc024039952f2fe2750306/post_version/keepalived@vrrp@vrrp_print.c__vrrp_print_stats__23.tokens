void //<S2SV> vrrp_print_stats ( void ) //<S2SV> { //<S2SV> FILE * file = fopen_safe ( stats_file , "w" ) ; //<S2SV> element e ; //<S2SV> vrrp_t * vrrp ; //<S2SV> if ( ! file ) { //<S2SV> log_message ( LOG_INFO , "Can\'t<S2SV_blank>open<S2SV_blank>%s<S2SV_blank>(%d:<S2SV_blank>%s)" , //<S2SV> stats_file , errno , strerror ( errno ) ) ; //<S2SV> return ; //<S2SV> } //<S2SV> LIST_FOREACH ( vrrp_data -> vrrp , vrrp , e ) { //<S2SV> fprintf ( file , "VRRP<S2SV_blank>Instance:<S2SV_blank>%s\\n" , vrrp -> iname ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank>Advertisements:\\n" ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Received:<S2SV_blank>%" PRIu64 "\\n" , vrrp -> stats -> advert_rcvd ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Sent:<S2SV_blank>%d\\n" , vrrp -> stats -> advert_sent ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank>Became<S2SV_blank>master:<S2SV_blank>%d\\n" , vrrp -> stats -> become_master ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank>Released<S2SV_blank>master:<S2SV_blank>%d\\n" , vrrp -> stats -> release_master ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank>Packet<S2SV_blank>Errors:\\n" ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Length:<S2SV_blank>%" PRIu64 "\\n" , vrrp -> stats -> packet_len_err ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>TTL:<S2SV_blank>%" PRIu64 "\\n" , vrrp -> stats -> ip_ttl_err ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Invalid<S2SV_blank>Type:<S2SV_blank>%" PRIu64 "\\n" , //<S2SV> vrrp -> stats -> invalid_type_rcvd ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Advertisement<S2SV_blank>Interval:<S2SV_blank>%" PRIu64 "\\n" , //<S2SV> vrrp -> stats -> advert_interval_err ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Address<S2SV_blank>List:<S2SV_blank>%" PRIu64 "\\n" , //<S2SV> vrrp -> stats -> addr_list_err ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank>Authentication<S2SV_blank>Errors:\\n" ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Invalid<S2SV_blank>Type:<S2SV_blank>%d\\n" , //<S2SV> vrrp -> stats -> invalid_authtype ) ; //<S2SV> # ifdef _WITH_VRRP_AUTH_ //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Type<S2SV_blank>Mismatch:<S2SV_blank>%d\\n" , //<S2SV> vrrp -> stats -> authtype_mismatch ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Failure:<S2SV_blank>%d\\n" , //<S2SV> vrrp -> stats -> auth_failure ) ; //<S2SV> # endif //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank>Priority<S2SV_blank>Zero:\\n" ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Received:<S2SV_blank>%" PRIu64 "\\n" , vrrp -> stats -> pri_zero_rcvd ) ; //<S2SV> fprintf ( file , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>Sent:<S2SV_blank>%" PRIu64 "\\n" , vrrp -> stats -> pri_zero_sent ) ; //<S2SV> } //<S2SV> fclose ( file ) ; //<S2SV> } //<S2SV> 