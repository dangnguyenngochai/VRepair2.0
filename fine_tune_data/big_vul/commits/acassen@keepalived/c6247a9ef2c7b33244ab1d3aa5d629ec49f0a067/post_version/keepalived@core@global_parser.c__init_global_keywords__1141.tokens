void //<S2SV> init_global_keywords ( bool global_active ) //<S2SV> { //<S2SV> install_keyword_root ( "linkbeat_use_polling" , use_polling_handler , global_active ) ; //<S2SV> # if HAVE_DECL_CLONE_NEWNET //<S2SV> install_keyword_root ( "net_namespace" , & net_namespace_handler , global_active ) ; //<S2SV> install_keyword_root ( "namespace_with_ipsets" , & namespace_ipsets_handler , global_active ) ; //<S2SV> # endif //<S2SV> install_keyword_root ( "use_pid_dir" , & use_pid_dir_handler , global_active ) ; //<S2SV> install_keyword_root ( "instance" , & instance_handler , global_active ) ; //<S2SV> install_keyword_root ( "child_wait_time" , & child_wait_handler , global_active ) ; //<S2SV> install_keyword_root ( "global_defs" , NULL , global_active ) ; //<S2SV> install_keyword ( "router_id" , & routerid_handler ) ; //<S2SV> install_keyword ( "notification_email_from" , & emailfrom_handler ) ; //<S2SV> install_keyword ( "smtp_server" , & smtpserver_handler ) ; //<S2SV> install_keyword ( "smtp_helo_name" , & smtphelo_handler ) ; //<S2SV> install_keyword ( "smtp_connect_timeout" , & smtpto_handler ) ; //<S2SV> install_keyword ( "notification_email" , & email_handler ) ; //<S2SV> install_keyword ( "smtp_alert" , & smtp_alert_handler ) ; //<S2SV> # ifdef _WITH_VRRP_ //<S2SV> install_keyword ( "smtp_alert_vrrp" , & smtp_alert_vrrp_handler ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_LVS_ //<S2SV> install_keyword ( "smtp_alert_checker" , & smtp_alert_checker_handler ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_VRRP_ //<S2SV> install_keyword ( "dynamic_interfaces" , & dynamic_interfaces_handler ) ; //<S2SV> install_keyword ( "no_email_faults" , & no_email_faults_handler ) ; //<S2SV> install_keyword ( "default_interface" , & default_interface_handler ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_LVS_ //<S2SV> install_keyword ( "lvs_timeouts" , & lvs_timeouts ) ; //<S2SV> install_keyword ( "lvs_flush" , & lvs_flush_handler ) ; //<S2SV> # ifdef _WITH_VRRP_ //<S2SV> install_keyword ( "lvs_sync_daemon" , & lvs_syncd_handler ) ; //<S2SV> # endif //<S2SV> # endif //<S2SV> # ifdef _WITH_VRRP_ //<S2SV> install_keyword ( "vrrp_mcast_group4" , & vrrp_mcast_group4_handler ) ; //<S2SV> install_keyword ( "vrrp_mcast_group6" , & vrrp_mcast_group6_handler ) ; //<S2SV> install_keyword ( "vrrp_garp_master_delay" , & vrrp_garp_delay_handler ) ; //<S2SV> install_keyword ( "vrrp_garp_master_repeat" , & vrrp_garp_rep_handler ) ; //<S2SV> install_keyword ( "vrrp_garp_master_refresh" , & vrrp_garp_refresh_handler ) ; //<S2SV> install_keyword ( "vrrp_garp_master_refresh_repeat" , & vrrp_garp_refresh_rep_handler ) ; //<S2SV> install_keyword ( "vrrp_garp_lower_prio_delay" , & vrrp_garp_lower_prio_delay_handler ) ; //<S2SV> install_keyword ( "vrrp_garp_lower_prio_repeat" , & vrrp_garp_lower_prio_rep_handler ) ; //<S2SV> install_keyword ( "vrrp_garp_interval" , & vrrp_garp_interval_handler ) ; //<S2SV> install_keyword ( "vrrp_gna_interval" , & vrrp_gna_interval_handler ) ; //<S2SV> install_keyword ( "vrrp_lower_prio_no_advert" , & vrrp_lower_prio_no_advert_handler ) ; //<S2SV> install_keyword ( "vrrp_higher_prio_send_advert" , & vrrp_higher_prio_send_advert_handler ) ; //<S2SV> install_keyword ( "vrrp_version" , & vrrp_version_handler ) ; //<S2SV> install_keyword ( "vrrp_iptables" , & vrrp_iptables_handler ) ; //<S2SV> # ifdef _HAVE_LIBIPSET_ //<S2SV> install_keyword ( "vrrp_ipsets" , & vrrp_ipsets_handler ) ; //<S2SV> # endif //<S2SV> install_keyword ( "vrrp_check_unicast_src" , & vrrp_check_unicast_src_handler ) ; //<S2SV> install_keyword ( "vrrp_skip_check_adv_addr" , & vrrp_check_adv_addr_handler ) ; //<S2SV> install_keyword ( "vrrp_strict" , & vrrp_strict_handler ) ; //<S2SV> install_keyword ( "vrrp_priority" , & vrrp_prio_handler ) ; //<S2SV> install_keyword ( "vrrp_no_swap" , & vrrp_no_swap_handler ) ; //<S2SV> # ifdef _HAVE_SCHED_RT_ //<S2SV> install_keyword ( "vrrp_rt_priority" , & vrrp_rt_priority_handler ) ; //<S2SV> # if HAVE_DECL_RLIMIT_RTTIME == 1 //<S2SV> install_keyword ( "vrrp_rlimit_rtime" , & vrrp_rt_rlimit_handler ) ; //<S2SV> # endif //<S2SV> # endif //<S2SV> # endif //<S2SV> install_keyword ( "notify_fifo" , & global_notify_fifo ) ; //<S2SV> install_keyword ( "notify_fifo_script" , & global_notify_fifo_script ) ; //<S2SV> # ifdef _WITH_VRRP_ //<S2SV> install_keyword ( "vrrp_notify_fifo" , & vrrp_notify_fifo ) ; //<S2SV> install_keyword ( "vrrp_notify_fifo_script" , & vrrp_notify_fifo_script ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_LVS_ //<S2SV> install_keyword ( "lvs_notify_fifo" , & lvs_notify_fifo ) ; //<S2SV> install_keyword ( "lvs_notify_fifo_script" , & lvs_notify_fifo_script ) ; //<S2SV> install_keyword ( "checker_priority" , & checker_prio_handler ) ; //<S2SV> install_keyword ( "checker_no_swap" , & checker_no_swap_handler ) ; //<S2SV> # ifdef _HAVE_SCHED_RT_ //<S2SV> install_keyword ( "checker_rt_priority" , & checker_rt_priority_handler ) ; //<S2SV> # if HAVE_DECL_RLIMIT_RTTIME == 1 //<S2SV> install_keyword ( "checker_rlimit_rtime" , & checker_rt_rlimit_handler ) ; //<S2SV> # endif //<S2SV> # endif //<S2SV> # endif //<S2SV> # ifdef _WITH_BFD_ //<S2SV> install_keyword ( "bfd_priority" , & bfd_prio_handler ) ; //<S2SV> install_keyword ( "bfd_no_swap" , & bfd_no_swap_handler ) ; //<S2SV> # ifdef _HAVE_SCHED_RT_ //<S2SV> install_keyword ( "bfd_rt_priority" , & bfd_rt_priority_handler ) ; //<S2SV> # if HAVE_DECL_RLIMIT_RTTIME == 1 //<S2SV> install_keyword ( "bfd_rlimit_rtime" , & bfd_rt_rlimit_handler ) ; //<S2SV> # endif //<S2SV> # endif //<S2SV> # endif //<S2SV> # ifdef _WITH_SNMP_ //<S2SV> install_keyword ( "snmp_socket" , & snmp_socket_handler ) ; //<S2SV> install_keyword ( "enable_traps" , & trap_handler ) ; //<S2SV> # ifdef _WITH_SNMP_VRRP_ //<S2SV> install_keyword ( "enable_snmp_vrrp" , & snmp_vrrp_handler ) ; //<S2SV> install_keyword ( "enable_snmp_keepalived" , & snmp_vrrp_handler ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_SNMP_RFC_ //<S2SV> install_keyword ( "enable_snmp_rfc" , & snmp_rfc_handler ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_SNMP_RFCV2_ //<S2SV> install_keyword ( "enable_snmp_rfcv2" , & snmp_rfcv2_handler ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_SNMP_RFCV3_ //<S2SV> install_keyword ( "enable_snmp_rfcv3" , & snmp_rfcv3_handler ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_SNMP_CHECKER_ //<S2SV> install_keyword ( "enable_snmp_checker" , & snmp_checker_handler ) ; //<S2SV> # endif //<S2SV> # endif //<S2SV> # ifdef _WITH_DBUS_ //<S2SV> install_keyword ( "enable_dbus" , & enable_dbus_handler ) ; //<S2SV> install_keyword ( "dbus_service_name" , & dbus_service_name_handler ) ; //<S2SV> # endif //<S2SV> install_keyword ( "script_user" , & script_user_handler ) ; //<S2SV> install_keyword ( "enable_script_security" , & script_security_handler ) ; //<S2SV> # ifdef _WITH_VRRP_ //<S2SV> install_keyword ( "vrrp_netlink_cmd_rcv_bufs" , & vrrp_netlink_cmd_rcv_bufs_handler ) ; //<S2SV> install_keyword ( "vrrp_netlink_cmd_rcv_bufs_force" , & vrrp_netlink_cmd_rcv_bufs_force_handler ) ; //<S2SV> install_keyword ( "vrrp_netlink_monitor_rcv_bufs" , & vrrp_netlink_monitor_rcv_bufs_handler ) ; //<S2SV> install_keyword ( "vrrp_netlink_monitor_rcv_bufs_force" , & vrrp_netlink_monitor_rcv_bufs_force_handler ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_LVS_ //<S2SV> install_keyword ( "lvs_netlink_cmd_rcv_bufs" , & lvs_netlink_cmd_rcv_bufs_handler ) ; //<S2SV> install_keyword ( "lvs_netlink_cmd_rcv_bufs_force" , & lvs_netlink_cmd_rcv_bufs_force_handler ) ; //<S2SV> install_keyword ( "lvs_netlink_monitor_rcv_bufs" , & lvs_netlink_monitor_rcv_bufs_handler ) ; //<S2SV> install_keyword ( "lvs_netlink_monitor_rcv_bufs_force" , & lvs_netlink_monitor_rcv_bufs_force_handler ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_LVS_ //<S2SV> install_keyword ( "rs_init_notifies" , & rs_init_notifies_handler ) ; //<S2SV> install_keyword ( "no_checker_emails" , & no_checker_emails_handler ) ; //<S2SV> # endif //<S2SV> # ifdef _WITH_VRRP_ //<S2SV> install_keyword ( "vrrp_rx_bufs_policy" , & vrrp_rx_bufs_policy_handler ) ; //<S2SV> install_keyword ( "vrrp_rx_bufs_multiplier" , & vrrp_rx_bufs_multiplier_handler ) ; //<S2SV> # endif //<S2SV> install_keyword ( "umask" , & umask_handler ) ; //<S2SV> } //<S2SV> 