void Con_Dump_f ( void ) { //<S2SV> int l , x , i ; //<S2SV> short * line ; //<S2SV> fileHandle_t f ; //<S2SV> int bufferlen ; //<S2SV> char * buffer ; //<S2SV> char filename [ MAX_QPATH ] ; //<S2SV> if ( Cmd_Argc ( ) != 2 ) { //<S2SV> Com_Printf ( "usage:<S2SV_blank>condump<S2SV_blank><filename>\\n" ) ; //<S2SV> return ; //<S2SV> } //<S2SV> Q_strncpyz ( filename , Cmd_Argv ( 1 ) , sizeof ( filename ) ) ; //<S2SV> COM_DefaultExtension ( filename , sizeof ( filename ) , ".txt" ) ; //<S2SV> if ( ! COM_CompareExtension ( filename , ".txt" ) ) //<S2SV> { //<S2SV> Com_Printf ( "Con_Dump_f:<S2SV_blank>Only<S2SV_blank>the<S2SV_blank>\\".txt\\"<S2SV_blank>extension<S2SV_blank>is<S2SV_blank>supported<S2SV_blank>by<S2SV_blank>this<S2SV_blank>command!\\n" ) ; //<S2SV> return ; //<S2SV> } //<S2SV> f = FS_FOpenFileWrite ( filename ) ; //<S2SV> if ( ! f ) { //<S2SV> Com_Printf ( "ERROR:<S2SV_blank>couldn\'t<S2SV_blank>open<S2SV_blank>%s.\\n" , filename ) ; //<S2SV> return ; //<S2SV> } //<S2SV> Com_Printf ( "Dumped<S2SV_blank>console<S2SV_blank>text<S2SV_blank>to<S2SV_blank>%s.\\n" , filename ) ; //<S2SV> for ( l = con . current - con . totallines + 1 ; l <= con . current ; l ++ ) //<S2SV> { //<S2SV> line = con . text + ( l % con . totallines ) * con . linewidth ; //<S2SV> for ( x = 0 ; x < con . linewidth ; x ++ ) //<S2SV> if ( ( line [ x ] & 0xff ) != '<S2SV_blank>' ) { //<S2SV> break ; //<S2SV> } //<S2SV> if ( x != con . linewidth ) { //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> # ifdef _WIN32 //<S2SV> bufferlen = con . linewidth + 3 * sizeof ( char ) ; //<S2SV> # else //<S2SV> bufferlen = con . linewidth + 2 * sizeof ( char ) ; //<S2SV> # endif //<S2SV> buffer = Hunk_AllocateTempMemory ( bufferlen ) ; //<S2SV> buffer [ bufferlen - 1 ] = 0 ; //<S2SV> for ( ; l <= con . current ; l ++ ) //<S2SV> { //<S2SV> line = con . text + ( l % con . totallines ) * con . linewidth ; //<S2SV> for ( i = 0 ; i < con . linewidth ; i ++ ) //<S2SV> buffer [ i ] = line [ i ] & 0xff ; //<S2SV> for ( x = con . linewidth - 1 ; x >= 0 ; x -- ) //<S2SV> { //<S2SV> if ( buffer [ x ] == '<S2SV_blank>' ) { //<S2SV> buffer [ x ] = 0 ; //<S2SV> } else { //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> # ifdef _WIN32 //<S2SV> Q_strcat ( buffer , bufferlen , "\\r\\n" ) ; //<S2SV> # else //<S2SV> Q_strcat ( buffer , bufferlen , "\\n" ) ; //<S2SV> # endif //<S2SV> FS_Write ( buffer , strlen ( buffer ) , f ) ; //<S2SV> } //<S2SV> Hunk_FreeTempMemory ( buffer ) ; //<S2SV> FS_FCloseFile ( f ) ; //<S2SV> } //<S2SV> 