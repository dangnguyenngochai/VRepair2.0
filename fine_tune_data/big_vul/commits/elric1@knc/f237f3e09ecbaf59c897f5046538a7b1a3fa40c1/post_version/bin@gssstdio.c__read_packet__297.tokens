static int //<S2SV> read_packet ( int fd , gss_buffer_t buf , int timeout , int first ) //<S2SV> { //<S2SV> int ret ; //<S2SV> static uint32_t len = 0 ; //<S2SV> static char len_buf [ 4 ] ; //<S2SV> static int len_buf_pos = 0 ; //<S2SV> static char * tmpbuf = 0 ; //<S2SV> static int tmpbuf_pos = 0 ; //<S2SV> if ( first ) { //<S2SV> len_buf_pos = 0 ; //<S2SV> return - 2 ; //<S2SV> } //<S2SV> if ( len_buf_pos < 4 ) { //<S2SV> ret = timed_read ( fd , & len_buf [ len_buf_pos ] , 4 - len_buf_pos , //<S2SV> timeout ) ; //<S2SV> if ( ret == - 1 ) { //<S2SV> if ( errno == EINTR || errno == EAGAIN ) //<S2SV> return - 2 ; //<S2SV> LOG ( LOG_ERR , ( "%s" , strerror ( errno ) ) ) ; //<S2SV> goto bail ; //<S2SV> } //<S2SV> if ( ret == 0 ) { //<S2SV> if ( len_buf_pos == 0 ) //<S2SV> return 0 ; //<S2SV> LOG ( LOG_INFO , ( "EOF<S2SV_blank>reading<S2SV_blank>packet<S2SV_blank>len" ) ) ; //<S2SV> goto bail ; //<S2SV> } //<S2SV> len_buf_pos += ret ; //<S2SV> } //<S2SV> if ( len_buf_pos != 4 ) //<S2SV> return - 2 ; //<S2SV> len = ntohl ( * ( uint32_t * ) len_buf ) ; //<S2SV> if ( len > GSTD_MAXPACKETCONTENTS + 512 ) { //<S2SV> LOG ( LOG_ERR , ( "ridiculous<S2SV_blank>length,<S2SV_blank>%ld" , len ) ) ; //<S2SV> goto bail ; //<S2SV> } //<S2SV> if ( ! tmpbuf ) { //<S2SV> if ( ( tmpbuf = malloc ( len ) ) == NULL ) { //<S2SV> LOG ( LOG_CRIT , ( "malloc<S2SV_blank>failure,<S2SV_blank>%ld<S2SV_blank>bytes" , len ) ) ; //<S2SV> goto bail ; //<S2SV> } //<S2SV> } //<S2SV> ret = timed_read ( fd , tmpbuf + tmpbuf_pos , len - tmpbuf_pos , timeout ) ; //<S2SV> if ( ret == - 1 ) { //<S2SV> if ( errno == EINTR || errno == EAGAIN ) //<S2SV> return - 2 ; //<S2SV> LOG ( LOG_ERR , ( "%s" , strerror ( errno ) ) ) ; //<S2SV> goto bail ; //<S2SV> } //<S2SV> if ( ret == 0 ) { //<S2SV> LOG ( LOG_ERR , ( "EOF<S2SV_blank>while<S2SV_blank>reading<S2SV_blank>packet<S2SV_blank>(len=%d)" , len ) ) ; //<S2SV> goto bail ; //<S2SV> } //<S2SV> tmpbuf_pos += ret ; //<S2SV> if ( tmpbuf_pos == len ) { //<S2SV> buf -> length = len ; //<S2SV> buf -> value = tmpbuf ; //<S2SV> len = len_buf_pos = tmpbuf_pos = 0 ; //<S2SV> tmpbuf = NULL ; //<S2SV> LOG ( LOG_DEBUG , ( "read<S2SV_blank>packet<S2SV_blank>of<S2SV_blank>length<S2SV_blank>%d" , buf -> length ) ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> return - 2 ; //<S2SV> bail : //<S2SV> free ( tmpbuf ) ; //<S2SV> tmpbuf = NULL ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 