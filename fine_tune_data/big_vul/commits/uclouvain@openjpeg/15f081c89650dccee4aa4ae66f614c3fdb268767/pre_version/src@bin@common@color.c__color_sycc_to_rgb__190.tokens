void color_sycc_to_rgb ( opj_image_t * img ) //<S2SV> { //<S2SV> if ( img -> numcomps < 3 ) //<S2SV> { //<S2SV> img -> color_space = OPJ_CLRSPC_GRAY ; //<S2SV> return ; //<S2SV> } //<S2SV> if ( ( img -> comps [ 0 ] . dx == 1 ) //<S2SV> && ( img -> comps [ 1 ] . dx == 2 ) //<S2SV> && ( img -> comps [ 2 ] . dx == 2 ) //<S2SV> && ( img -> comps [ 0 ] . dy == 1 ) //<S2SV> && ( img -> comps [ 1 ] . dy == 2 ) //<S2SV> && ( img -> comps [ 2 ] . dy == 2 ) ) //<S2SV> { //<S2SV> sycc420_to_rgb ( img ) ; //<S2SV> } //<S2SV> else //<S2SV> if ( ( img -> comps [ 0 ] . dx == 1 ) //<S2SV> && ( img -> comps [ 1 ] . dx == 2 ) //<S2SV> && ( img -> comps [ 2 ] . dx == 2 ) //<S2SV> && ( img -> comps [ 0 ] . dy == 1 ) //<S2SV> && ( img -> comps [ 1 ] . dy == 1 ) //<S2SV> && ( img -> comps [ 2 ] . dy == 1 ) ) //<S2SV> { //<S2SV> sycc422_to_rgb ( img ) ; //<S2SV> } //<S2SV> else //<S2SV> if ( ( img -> comps [ 0 ] . dx == 1 ) //<S2SV> && ( img -> comps [ 1 ] . dx == 1 ) //<S2SV> && ( img -> comps [ 2 ] . dx == 1 ) //<S2SV> && ( img -> comps [ 0 ] . dy == 1 ) //<S2SV> && ( img -> comps [ 1 ] . dy == 1 ) //<S2SV> && ( img -> comps [ 2 ] . dy == 1 ) ) //<S2SV> { //<S2SV> sycc444_to_rgb ( img ) ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> fprintf ( stderr , "%s:%d:color_sycc_to_rgb\\n\\tCAN<S2SV_blank>NOT<S2SV_blank>CONVERT\\n" , __FILE__ , __LINE__ ) ; //<S2SV> return ; //<S2SV> } //<S2SV> img -> color_space = OPJ_CLRSPC_SRGB ; //<S2SV> } //<S2SV> 