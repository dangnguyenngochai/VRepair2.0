static OPJ_BOOL bmp_read_info_header ( FILE * IN , OPJ_BITMAPINFOHEADER * header ) //<S2SV> { //<S2SV> memset ( header , 0 , sizeof ( * header ) ) ; //<S2SV> header -> biSize = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biSize |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biSize |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biSize |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> switch ( header -> biSize ) { //<S2SV> case 12U : //<S2SV> case 40U : //<S2SV> case 52U : //<S2SV> case 56U : //<S2SV> case 108U : //<S2SV> case 124U : //<S2SV> break ; //<S2SV> default : //<S2SV> fprintf ( stderr , "Error,<S2SV_blank>unknown<S2SV_blank>BMP<S2SV_blank>header<S2SV_blank>size<S2SV_blank>%d\\n" , header -> biSize ) ; //<S2SV> return OPJ_FALSE ; //<S2SV> } //<S2SV> header -> biWidth = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biWidth |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biWidth |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biWidth |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biHeight = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biHeight |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biHeight |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biHeight |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biPlanes = ( OPJ_UINT16 ) getc ( IN ) ; //<S2SV> header -> biPlanes |= ( OPJ_UINT16 ) ( ( OPJ_UINT32 ) getc ( IN ) << 8 ) ; //<S2SV> header -> biBitCount = ( OPJ_UINT16 ) getc ( IN ) ; //<S2SV> header -> biBitCount |= ( OPJ_UINT16 ) ( ( OPJ_UINT32 ) getc ( IN ) << 8 ) ; //<S2SV> if ( header -> biBitCount == 0 ) { //<S2SV> fprintf ( stderr , "Error,<S2SV_blank>invalid<S2SV_blank>biBitCount<S2SV_blank>%d\\n" , 0 ) ; //<S2SV> return OPJ_FALSE ; //<S2SV> } //<S2SV> if ( header -> biSize >= 40U ) { //<S2SV> header -> biCompression = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biCompression |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biCompression |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biCompression |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biSizeImage = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biSizeImage |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biSizeImage |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biSizeImage |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biXpelsPerMeter = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biXpelsPerMeter |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biXpelsPerMeter |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biXpelsPerMeter |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biYpelsPerMeter = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biYpelsPerMeter |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biYpelsPerMeter |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biYpelsPerMeter |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biClrUsed = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biClrUsed |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biClrUsed |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biClrUsed |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biClrImportant = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biClrImportant |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biClrImportant |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biClrImportant |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> } //<S2SV> if ( header -> biSize >= 56U ) { //<S2SV> header -> biRedMask = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biRedMask |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biRedMask |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biRedMask |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biGreenMask = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biGreenMask |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biGreenMask |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biGreenMask |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biBlueMask = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biBlueMask |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biBlueMask |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biBlueMask |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biAlphaMask = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biAlphaMask |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biAlphaMask |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biAlphaMask |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> } //<S2SV> if ( header -> biSize >= 108U ) { //<S2SV> header -> biColorSpaceType = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biColorSpaceType |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biColorSpaceType |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biColorSpaceType |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> if ( fread ( & ( header -> biColorSpaceEP ) , 1U , sizeof ( header -> biColorSpaceEP ) , //<S2SV> IN ) != sizeof ( header -> biColorSpaceEP ) ) { //<S2SV> fprintf ( stderr , "Error,<S2SV_blank>can\'t<S2SV_blank><S2SV_blank>read<S2SV_blank>BMP<S2SV_blank>header\\n" ) ; //<S2SV> return OPJ_FALSE ; //<S2SV> } //<S2SV> header -> biRedGamma = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biRedGamma |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biRedGamma |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biRedGamma |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biGreenGamma = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biGreenGamma |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biGreenGamma |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biGreenGamma |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biBlueGamma = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biBlueGamma |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biBlueGamma |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biBlueGamma |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> } //<S2SV> if ( header -> biSize >= 124U ) { //<S2SV> header -> biIntent = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biIntent |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biIntent |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biIntent |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biIccProfileData = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biIccProfileData |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biIccProfileData |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biIccProfileData |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biIccProfileSize = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biIccProfileSize |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biIccProfileSize |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biIccProfileSize |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> header -> biReserved = ( OPJ_UINT32 ) getc ( IN ) ; //<S2SV> header -> biReserved |= ( OPJ_UINT32 ) getc ( IN ) << 8 ; //<S2SV> header -> biReserved |= ( OPJ_UINT32 ) getc ( IN ) << 16 ; //<S2SV> header -> biReserved |= ( OPJ_UINT32 ) getc ( IN ) << 24 ; //<S2SV> } //<S2SV> return OPJ_TRUE ; //<S2SV> } //<S2SV> 