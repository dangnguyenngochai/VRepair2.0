static bool check_client_passwd ( PgSocket * client , const char * passwd ) //<S2SV> { //<S2SV> char md5 [ MD5_PASSWD_LEN + 1 ] ; //<S2SV> const char * correct ; //<S2SV> PgUser * user = client -> auth_user ; //<S2SV> if ( ! * passwd || ! * user -> passwd ) //<S2SV> return false ; //<S2SV> switch ( cf_auth_type ) { //<S2SV> case AUTH_PLAIN : //<S2SV> return strcmp ( user -> passwd , passwd ) == 0 ; //<S2SV> case AUTH_CRYPT : //<S2SV> correct = crypt ( user -> passwd , ( char * ) client -> tmp_login_salt ) ; //<S2SV> return correct && strcmp ( correct , passwd ) == 0 ; //<S2SV> case AUTH_MD5 : //<S2SV> if ( strlen ( passwd ) != MD5_PASSWD_LEN ) //<S2SV> return false ; //<S2SV> if ( ! isMD5 ( user -> passwd ) ) //<S2SV> pg_md5_encrypt ( user -> passwd , user -> name , strlen ( user -> name ) , user -> passwd ) ; //<S2SV> pg_md5_encrypt ( user -> passwd + 3 , ( char * ) client -> tmp_login_salt , 4 , md5 ) ; //<S2SV> return strcmp ( md5 , passwd ) == 0 ; //<S2SV> } //<S2SV> return false ; //<S2SV> } //<S2SV> 