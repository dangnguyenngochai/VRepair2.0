int git_delta_apply ( //<S2SV> void * * out , //<S2SV> size_t * out_len , //<S2SV> const unsigned char * base , //<S2SV> size_t base_len , //<S2SV> const unsigned char * delta , //<S2SV> size_t delta_len ) //<S2SV> { //<S2SV> const unsigned char * delta_end = delta + delta_len ; //<S2SV> size_t base_sz , res_sz , alloc_sz ; //<S2SV> unsigned char * res_dp ; //<S2SV> * out = NULL ; //<S2SV> * out_len = 0 ; //<S2SV> if ( ( hdr_sz ( & base_sz , & delta , delta_end ) < 0 ) || ( base_sz != base_len ) ) { //<S2SV> giterr_set ( GITERR_INVALID , "failed<S2SV_blank>to<S2SV_blank>apply<S2SV_blank>delta:<S2SV_blank>base<S2SV_blank>size<S2SV_blank>does<S2SV_blank>not<S2SV_blank>match<S2SV_blank>given<S2SV_blank>data" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> if ( hdr_sz ( & res_sz , & delta , delta_end ) < 0 ) { //<S2SV> giterr_set ( GITERR_INVALID , "failed<S2SV_blank>to<S2SV_blank>apply<S2SV_blank>delta:<S2SV_blank>base<S2SV_blank>size<S2SV_blank>does<S2SV_blank>not<S2SV_blank>match<S2SV_blank>given<S2SV_blank>data" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> GITERR_CHECK_ALLOC_ADD ( & alloc_sz , res_sz , 1 ) ; //<S2SV> res_dp = git__malloc ( alloc_sz ) ; //<S2SV> GITERR_CHECK_ALLOC ( res_dp ) ; //<S2SV> res_dp [ res_sz ] = '\\0' ; //<S2SV> * out = res_dp ; //<S2SV> * out_len = res_sz ; //<S2SV> while ( delta < delta_end ) { //<S2SV> unsigned char cmd = * delta ++ ; //<S2SV> if ( cmd & 0x80 ) { //<S2SV> size_t off = 0 , len = 0 ; //<S2SV> # define ADD_DELTA ( o , shift ) { if ( delta < delta_end ) ( o ) |= ( ( unsigned ) * delta ++ << shift ) ; else goto fail ; } //<S2SV> if ( cmd & 0x01 ) ADD_DELTA ( off , 0UL ) ; //<S2SV> if ( cmd & 0x02 ) ADD_DELTA ( off , 8UL ) ; //<S2SV> if ( cmd & 0x04 ) ADD_DELTA ( off , 16UL ) ; //<S2SV> if ( cmd & 0x08 ) ADD_DELTA ( off , 24UL ) ; //<S2SV> if ( cmd & 0x10 ) ADD_DELTA ( len , 0UL ) ; //<S2SV> if ( cmd & 0x20 ) ADD_DELTA ( len , 8UL ) ; //<S2SV> if ( cmd & 0x40 ) ADD_DELTA ( len , 16UL ) ; //<S2SV> if ( ! len ) len = 0x10000 ; //<S2SV> # undef ADD_DELTA //<S2SV> if ( base_len < off + len || res_sz < len ) //<S2SV> goto fail ; //<S2SV> memcpy ( res_dp , base + off , len ) ; //<S2SV> res_dp += len ; //<S2SV> res_sz -= len ; //<S2SV> } else if ( cmd ) { //<S2SV> if ( delta_end - delta < cmd || res_sz < cmd ) //<S2SV> goto fail ; //<S2SV> memcpy ( res_dp , delta , cmd ) ; //<S2SV> delta += cmd ; //<S2SV> res_dp += cmd ; //<S2SV> res_sz -= cmd ; //<S2SV> } else { //<S2SV> goto fail ; //<S2SV> } //<S2SV> } //<S2SV> if ( delta != delta_end || res_sz ) //<S2SV> goto fail ; //<S2SV> return 0 ; //<S2SV> fail : //<S2SV> git__free ( * out ) ; //<S2SV> * out = NULL ; //<S2SV> * out_len = 0 ; //<S2SV> giterr_set ( GITERR_INVALID , "failed<S2SV_blank>to<S2SV_blank>apply<S2SV_blank>delta" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 