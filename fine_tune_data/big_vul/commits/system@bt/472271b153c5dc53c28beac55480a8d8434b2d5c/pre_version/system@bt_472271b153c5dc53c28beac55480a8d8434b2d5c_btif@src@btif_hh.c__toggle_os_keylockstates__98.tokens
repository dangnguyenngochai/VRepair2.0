static void toggle_os_keylockstates ( int fd , int changedlockstates ) //<S2SV> { //<S2SV> BTIF_TRACE_EVENT ( "%s:<S2SV_blank>fd<S2SV_blank>=<S2SV_blank>%d,<S2SV_blank>changedlockstates<S2SV_blank>=<S2SV_blank>0x%x" , //<S2SV> __FUNCTION__ , fd , changedlockstates ) ; //<S2SV> UINT8 hidreport [ 9 ] ; //<S2SV> int reportIndex ; //<S2SV> memset ( hidreport , 0 , 9 ) ; //<S2SV> hidreport [ 0 ] = 1 ; //<S2SV> reportIndex = 4 ; //<S2SV> if ( changedlockstates & BTIF_HH_KEYSTATE_MASK_CAPSLOCK ) { //<S2SV> BTIF_TRACE_DEBUG ( "%s<S2SV_blank>Setting<S2SV_blank>CAPSLOCK" , __FUNCTION__ ) ; //<S2SV> hidreport [ reportIndex ++ ] = ( UINT8 ) HID_REPORT_CAPSLOCK ; //<S2SV> } //<S2SV> if ( changedlockstates & BTIF_HH_KEYSTATE_MASK_NUMLOCK ) { //<S2SV> BTIF_TRACE_DEBUG ( "%s<S2SV_blank>Setting<S2SV_blank>NUMLOCK" , __FUNCTION__ ) ; //<S2SV> hidreport [ reportIndex ++ ] = ( UINT8 ) HID_REPORT_NUMLOCK ; //<S2SV> } //<S2SV> if ( changedlockstates & BTIF_HH_KEYSTATE_MASK_SCROLLLOCK ) { //<S2SV> BTIF_TRACE_DEBUG ( "%s<S2SV_blank>Setting<S2SV_blank>SCROLLLOCK" , __FUNCTION__ ) ; //<S2SV> hidreport [ reportIndex ++ ] = ( UINT8 ) HID_REPORT_SCROLLLOCK ; //<S2SV> } //<S2SV> BTIF_TRACE_DEBUG ( "Writing<S2SV_blank>hidreport<S2SV_blank>#1<S2SV_blank>to<S2SV_blank>os:<S2SV_blank>" "%s:<S2SV_blank><S2SV_blank>%x<S2SV_blank>%x<S2SV_blank>%x" , __FUNCTION__ , //<S2SV> hidreport [ 0 ] , hidreport [ 1 ] , hidreport [ 2 ] ) ; //<S2SV> BTIF_TRACE_DEBUG ( "%s:<S2SV_blank><S2SV_blank>%x<S2SV_blank>%x<S2SV_blank>%x" , __FUNCTION__ , //<S2SV> hidreport [ 3 ] , hidreport [ 4 ] , hidreport [ 5 ] ) ; //<S2SV> BTIF_TRACE_DEBUG ( "%s:<S2SV_blank><S2SV_blank>%x<S2SV_blank>%x<S2SV_blank>%x" , __FUNCTION__ , //<S2SV> hidreport [ 6 ] , hidreport [ 7 ] , hidreport [ 8 ] ) ; //<S2SV> bta_hh_co_write ( fd , hidreport , sizeof ( hidreport ) ) ; //<S2SV> usleep ( 200000 ) ; //<S2SV> memset ( hidreport , 0 , 9 ) ; //<S2SV> hidreport [ 0 ] = 1 ; //<S2SV> BTIF_TRACE_DEBUG ( "Writing<S2SV_blank>hidreport<S2SV_blank>#2<S2SV_blank>to<S2SV_blank>os:<S2SV_blank>" "%s:<S2SV_blank><S2SV_blank>%x<S2SV_blank>%x<S2SV_blank>%x" , __FUNCTION__ , //<S2SV> hidreport [ 0 ] , hidreport [ 1 ] , hidreport [ 2 ] ) ; //<S2SV> BTIF_TRACE_DEBUG ( "%s:<S2SV_blank><S2SV_blank>%x<S2SV_blank>%x<S2SV_blank>%x" , __FUNCTION__ , //<S2SV> hidreport [ 3 ] , hidreport [ 4 ] , hidreport [ 5 ] ) ; //<S2SV> BTIF_TRACE_DEBUG ( "%s:<S2SV_blank><S2SV_blank>%x<S2SV_blank>%x<S2SV_blank>%x<S2SV_blank>" , __FUNCTION__ , //<S2SV> hidreport [ 6 ] , hidreport [ 7 ] , hidreport [ 8 ] ) ; //<S2SV> bta_hh_co_write ( fd , hidreport , sizeof ( hidreport ) ) ; //<S2SV> } //<S2SV> 