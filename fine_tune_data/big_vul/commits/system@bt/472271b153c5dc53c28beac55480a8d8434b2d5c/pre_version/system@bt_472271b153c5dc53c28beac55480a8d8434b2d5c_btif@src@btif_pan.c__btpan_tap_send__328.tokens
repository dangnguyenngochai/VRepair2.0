int btpan_tap_send ( int tap_fd , const BD_ADDR src , const BD_ADDR dst , UINT16 proto , const char * buf , //<S2SV> UINT16 len , BOOLEAN ext , BOOLEAN forward ) //<S2SV> { //<S2SV> UNUSED ( ext ) ; //<S2SV> UNUSED ( forward ) ; //<S2SV> if ( tap_fd != INVALID_FD ) //<S2SV> { //<S2SV> tETH_HDR eth_hdr ; //<S2SV> memcpy ( & eth_hdr . h_dest , dst , ETH_ADDR_LEN ) ; //<S2SV> memcpy ( & eth_hdr . h_src , src , ETH_ADDR_LEN ) ; //<S2SV> eth_hdr . h_proto = htons ( proto ) ; //<S2SV> char packet [ TAP_MAX_PKT_WRITE_LEN + sizeof ( tETH_HDR ) ] ; //<S2SV> memcpy ( packet , & eth_hdr , sizeof ( tETH_HDR ) ) ; //<S2SV> if ( len > TAP_MAX_PKT_WRITE_LEN ) //<S2SV> { //<S2SV> LOG_ERROR ( "btpan_tap_send<S2SV_blank>eth<S2SV_blank>packet<S2SV_blank>size:%d<S2SV_blank>is<S2SV_blank>exceeded<S2SV_blank>limit!" , len ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> memcpy ( packet + sizeof ( tETH_HDR ) , buf , len ) ; //<S2SV> int ret = write ( tap_fd , packet , len + sizeof ( tETH_HDR ) ) ; //<S2SV> BTIF_TRACE_DEBUG ( "ret:%d" , ret ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 