static void uipc_flush_ch_locked ( tUIPC_CH_ID ch_id ) //<S2SV> { //<S2SV> char buf [ UIPC_FLUSH_BUFFER_SIZE ] ; //<S2SV> struct pollfd pfd ; //<S2SV> int ret ; //<S2SV> pfd . events = POLLIN ; //<S2SV> pfd . fd = uipc_main . ch [ ch_id ] . fd ; //<S2SV> if ( uipc_main . ch [ ch_id ] . fd == UIPC_DISCONNECTED ) //<S2SV> { //<S2SV> BTIF_TRACE_EVENT ( "%s()<S2SV_blank>-<S2SV_blank>fd<S2SV_blank>disconnected.<S2SV_blank>Exiting" , __FUNCTION__ ) ; //<S2SV> return ; //<S2SV> } //<S2SV> while ( 1 ) //<S2SV> { //<S2SV> ret = poll ( & pfd , 1 , 1 ) ; //<S2SV> BTIF_TRACE_VERBOSE ( "%s()<S2SV_blank>-<S2SV_blank>polling<S2SV_blank>fd<S2SV_blank>%d,<S2SV_blank>revents:<S2SV_blank>0x%x,<S2SV_blank>ret<S2SV_blank>%d" , //<S2SV> __FUNCTION__ , pfd . fd , pfd . revents , ret ) ; //<S2SV> if ( pfd . revents & ( POLLERR | POLLHUP ) ) //<S2SV> { //<S2SV> BTIF_TRACE_EVENT ( "%s()<S2SV_blank>-<S2SV_blank>POLLERR<S2SV_blank>or<S2SV_blank>POLLHUP.<S2SV_blank>Exiting" , __FUNCTION__ ) ; //<S2SV> return ; //<S2SV> } //<S2SV> if ( ret <= 0 ) //<S2SV> { //<S2SV> BTIF_TRACE_EVENT ( "%s()<S2SV_blank>-<S2SV_blank>error<S2SV_blank>(%d).<S2SV_blank>Exiting" , __FUNCTION__ , ret ) ; //<S2SV> return ; //<S2SV> } //<S2SV> read ( pfd . fd , & buf , UIPC_FLUSH_BUFFER_SIZE ) ; //<S2SV> } //<S2SV> } //<S2SV> 