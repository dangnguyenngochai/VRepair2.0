int bta_co_rfc_data_outgoing ( void * user_data , uint8_t * buf , uint16_t size ) { //<S2SV> pthread_mutex_lock ( & slot_lock ) ; //<S2SV> uint32_t id = ( uintptr_t ) user_data ; //<S2SV> int ret = false ; //<S2SV> rfc_slot_t * slot = find_rfc_slot_by_id ( id ) ; //<S2SV> if ( ! slot ) //<S2SV> goto out ; //<S2SV> int received = recv ( slot -> fd , buf , size , 0 ) ; //<S2SV> if ( received == size ) { //<S2SV> ret = true ; //<S2SV> } else { //<S2SV> LOG_ERROR ( "%s<S2SV_blank>error<S2SV_blank>receiving<S2SV_blank>RFCOMM<S2SV_blank>data<S2SV_blank>from<S2SV_blank>app:<S2SV_blank>%s" , __func__ , strerror ( errno ) ) ; //<S2SV> cleanup_rfc_slot ( slot ) ; //<S2SV> } //<S2SV> out : ; //<S2SV> pthread_mutex_unlock ( & slot_lock ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 