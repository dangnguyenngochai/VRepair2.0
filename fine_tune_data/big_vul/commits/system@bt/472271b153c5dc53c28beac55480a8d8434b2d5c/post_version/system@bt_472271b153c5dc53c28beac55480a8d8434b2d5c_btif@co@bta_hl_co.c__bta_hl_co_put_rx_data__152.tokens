void bta_hl_co_put_rx_data ( UINT8 app_id , tBTA_HL_MDL_HANDLE mdl_handle , //<S2SV> UINT16 data_size , UINT8 * p_data , UINT16 evt ) //<S2SV> { //<S2SV> UINT8 app_idx , mcl_idx , mdl_idx ; //<S2SV> btif_hl_mdl_cb_t * p_dcb ; //<S2SV> tBTA_HL_STATUS status = BTA_HL_STATUS_FAIL ; //<S2SV> int r ; //<S2SV> BTIF_TRACE_DEBUG ( "%s<S2SV_blank>app_id=%d<S2SV_blank>mdl_handle=0x%x<S2SV_blank>data_size=%d" , //<S2SV> __FUNCTION__ , app_id , mdl_handle , data_size ) ; //<S2SV> if ( btif_hl_find_mdl_idx_using_handle ( mdl_handle , & app_idx , & mcl_idx , & mdl_idx ) ) //<S2SV> { //<S2SV> p_dcb = BTIF_HL_GET_MDL_CB_PTR ( app_idx , mcl_idx , mdl_idx ) ; //<S2SV> if ( ( p_dcb -> p_rx_pkt = ( UINT8 * ) btif_hl_get_buf ( data_size ) ) != NULL ) //<S2SV> { //<S2SV> memcpy ( p_dcb -> p_rx_pkt , p_data , data_size ) ; //<S2SV> if ( p_dcb -> p_scb ) //<S2SV> { //<S2SV> BTIF_TRACE_DEBUG ( "app_idx=%d<S2SV_blank>mcl_idx=0x%x<S2SV_blank>mdl_idx=0x%x<S2SV_blank>data_size=%d" , //<S2SV> app_idx , mcl_idx , mdl_idx , data_size ) ; //<S2SV> r = TEMP_FAILURE_RETRY ( send ( p_dcb -> p_scb -> socket_id [ 1 ] , p_dcb -> p_rx_pkt , data_size , 0 ) ) ; //<S2SV> if ( r == data_size ) //<S2SV> { //<S2SV> BTIF_TRACE_DEBUG ( "socket<S2SV_blank>send<S2SV_blank>success<S2SV_blank>data_size=%d" , data_size ) ; //<S2SV> status = BTA_HL_STATUS_OK ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> BTIF_TRACE_ERROR ( "socket<S2SV_blank>send<S2SV_blank>failed<S2SV_blank>r=%d<S2SV_blank>data_size=%d" , r , data_size ) ; //<S2SV> } //<S2SV> } //<S2SV> btif_hl_free_buf ( ( void * * ) & p_dcb -> p_rx_pkt ) ; //<S2SV> } //<S2SV> } //<S2SV> bta_hl_ci_put_rx_data ( mdl_handle , status , evt ) ; //<S2SV> } //<S2SV> 