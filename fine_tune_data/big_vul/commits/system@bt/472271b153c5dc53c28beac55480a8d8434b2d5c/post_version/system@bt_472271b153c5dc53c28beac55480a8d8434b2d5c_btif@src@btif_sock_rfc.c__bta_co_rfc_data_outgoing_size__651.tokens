int bta_co_rfc_data_outgoing_size ( void * user_data , int * size ) { //<S2SV> pthread_mutex_lock ( & slot_lock ) ; //<S2SV> uint32_t id = ( uintptr_t ) user_data ; //<S2SV> int ret = false ; //<S2SV> * size = 0 ; //<S2SV> rfc_slot_t * slot = find_rfc_slot_by_id ( id ) ; //<S2SV> if ( ! slot ) //<S2SV> goto out ; //<S2SV> if ( TEMP_FAILURE_RETRY ( ioctl ( slot -> fd , FIONREAD , size ) ) == 0 ) { //<S2SV> ret = true ; //<S2SV> } else { //<S2SV> LOG_ERROR ( "%s<S2SV_blank>unable<S2SV_blank>to<S2SV_blank>determine<S2SV_blank>bytes<S2SV_blank>remaining<S2SV_blank>to<S2SV_blank>be<S2SV_blank>read<S2SV_blank>on<S2SV_blank>fd<S2SV_blank>%d:<S2SV_blank>%s" , __func__ , slot -> fd , strerror ( errno ) ) ; //<S2SV> cleanup_rfc_slot ( slot ) ; //<S2SV> } //<S2SV> out : ; //<S2SV> pthread_mutex_unlock ( & slot_lock ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 