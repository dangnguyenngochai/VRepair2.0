static void * sock_poll_thread ( void * arg ) //<S2SV> { //<S2SV> struct pollfd pfds [ MAX_POLL ] ; //<S2SV> memset ( pfds , 0 , sizeof ( pfds ) ) ; //<S2SV> int h = ( intptr_t ) arg ; //<S2SV> for ( ; ; ) //<S2SV> { //<S2SV> prepare_poll_fds ( h , pfds ) ; //<S2SV> int ret = TEMP_FAILURE_RETRY ( poll ( pfds , ts [ h ] . poll_count , - 1 ) ) ; //<S2SV> if ( ret == - 1 ) //<S2SV> { //<S2SV> APPL_TRACE_ERROR ( "poll<S2SV_blank>ret<S2SV_blank>-1,<S2SV_blank>exit<S2SV_blank>the<S2SV_blank>thread,<S2SV_blank>errno:%d,<S2SV_blank>err:%s" , errno , strerror ( errno ) ) ; //<S2SV> break ; //<S2SV> } //<S2SV> if ( ret != 0 ) //<S2SV> { //<S2SV> int need_process_data_fd = TRUE ; //<S2SV> if ( pfds [ 0 ] . revents ) //<S2SV> { //<S2SV> asrt ( pfds [ 0 ] . fd == ts [ h ] . cmd_fdr ) ; //<S2SV> if ( ! process_cmd_sock ( h ) ) //<S2SV> { //<S2SV> APPL_TRACE_DEBUG ( "h:%d,<S2SV_blank>process_cmd_sock<S2SV_blank>return<S2SV_blank>false,<S2SV_blank>exit..." , h ) ; //<S2SV> break ; //<S2SV> } //<S2SV> if ( ret == 1 ) //<S2SV> need_process_data_fd = FALSE ; //<S2SV> else ret -- ; //<S2SV> } //<S2SV> if ( need_process_data_fd ) //<S2SV> process_data_sock ( h , pfds , ret ) ; //<S2SV> } //<S2SV> else { APPL_TRACE_DEBUG ( "no<S2SV_blank>data,<S2SV_blank>select<S2SV_blank>ret:<S2SV_blank>%d" , ret ) } ; //<S2SV> } //<S2SV> ts [ h ] . thread_id = - 1 ; //<S2SV> APPL_TRACE_DEBUG ( "socket<S2SV_blank>poll<S2SV_blank>thread<S2SV_blank>exiting,<S2SV_blank>h:%d" , h ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 