static future_t * init ( void ) { //<S2SV> pthread_mutex_init ( & lock , NULL ) ; //<S2SV> config = config_new ( CONFIG_FILE_PATH ) ; //<S2SV> if ( ! config ) { //<S2SV> LOG_WARN ( "%s<S2SV_blank>unable<S2SV_blank>to<S2SV_blank>load<S2SV_blank>config<S2SV_blank>file;<S2SV_blank>attempting<S2SV_blank>to<S2SV_blank>transcode<S2SV_blank>legacy<S2SV_blank>file." , __func__ ) ; //<S2SV> config = btif_config_transcode ( LEGACY_CONFIG_FILE_PATH ) ; //<S2SV> if ( ! config ) { //<S2SV> LOG_WARN ( "%s<S2SV_blank>unable<S2SV_blank>to<S2SV_blank>transcode<S2SV_blank>legacy<S2SV_blank>file,<S2SV_blank>starting<S2SV_blank>unconfigured." , __func__ ) ; //<S2SV> config = config_new_empty ( ) ; //<S2SV> if ( ! config ) { //<S2SV> LOG_ERROR ( "%s<S2SV_blank>unable<S2SV_blank>to<S2SV_blank>allocate<S2SV_blank>a<S2SV_blank>config<S2SV_blank>object." , __func__ ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> } //<S2SV> if ( config_save ( config , CONFIG_FILE_PATH ) ) //<S2SV> unlink ( LEGACY_CONFIG_FILE_PATH ) ; //<S2SV> } //<S2SV> btif_config_remove_unpaired ( config ) ; //<S2SV> alarm_timer = alarm_new ( ) ; //<S2SV> if ( ! alarm_timer ) { //<S2SV> LOG_ERROR ( "%s<S2SV_blank>unable<S2SV_blank>to<S2SV_blank>create<S2SV_blank>alarm." , __func__ ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> return future_new_immediate ( FUTURE_SUCCESS ) ; //<S2SV> error : ; //<S2SV> alarm_free ( alarm_timer ) ; //<S2SV> config_free ( config ) ; //<S2SV> pthread_mutex_destroy ( & lock ) ; //<S2SV> alarm_timer = NULL ; //<S2SV> config = NULL ; //<S2SV> return future_new_immediate ( FUTURE_FAIL ) ; //<S2SV> } //<S2SV> 