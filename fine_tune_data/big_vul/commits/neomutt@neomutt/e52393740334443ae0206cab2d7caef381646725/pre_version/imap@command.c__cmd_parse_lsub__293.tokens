static void cmd_parse_lsub ( struct ImapData * idata , char * s ) //<S2SV> { //<S2SV> char buf [ STRING ] ; //<S2SV> char errstr [ STRING ] ; //<S2SV> struct Buffer err , token ; //<S2SV> struct Url url ; //<S2SV> struct ImapList list ; //<S2SV> if ( idata -> cmddata && idata -> cmdtype == IMAP_CT_LIST ) //<S2SV> { //<S2SV> cmd_parse_list ( idata , s ) ; //<S2SV> return ; //<S2SV> } //<S2SV> if ( ! ImapCheckSubscribed ) //<S2SV> return ; //<S2SV> idata -> cmdtype = IMAP_CT_LIST ; //<S2SV> idata -> cmddata = & list ; //<S2SV> cmd_parse_list ( idata , s ) ; //<S2SV> idata -> cmddata = NULL ; //<S2SV> if ( ! list . name || list . noselect ) //<S2SV> return ; //<S2SV> mutt_debug ( 3 , "Subscribing<S2SV_blank>to<S2SV_blank>%s\\n" , list . name ) ; //<S2SV> mutt_str_strfcpy ( buf , "mailboxes<S2SV_blank>\\"" , sizeof ( buf ) ) ; //<S2SV> mutt_account_tourl ( & idata -> conn -> account , & url ) ; //<S2SV> imap_quote_string ( errstr , sizeof ( errstr ) , list . name ) ; //<S2SV> url . path = errstr + 1 ; //<S2SV> url . path [ strlen ( url . path ) - 1 ] = '\\0' ; //<S2SV> if ( mutt_str_strcmp ( url . user , ImapUser ) == 0 ) //<S2SV> url . user = NULL ; //<S2SV> url_tostring ( & url , buf + 11 , sizeof ( buf ) - 11 , 0 ) ; //<S2SV> mutt_str_strcat ( buf , sizeof ( buf ) , "\\"" ) ; //<S2SV> mutt_buffer_init ( & token ) ; //<S2SV> mutt_buffer_init ( & err ) ; //<S2SV> err . data = errstr ; //<S2SV> err . dsize = sizeof ( errstr ) ; //<S2SV> if ( mutt_parse_rc_line ( buf , & token , & err ) ) //<S2SV> mutt_debug ( 1 , "Error<S2SV_blank>adding<S2SV_blank>subscribed<S2SV_blank>mailbox:<S2SV_blank>%s\\n" , errstr ) ; //<S2SV> FREE ( & token . data ) ; //<S2SV> } //<S2SV> 