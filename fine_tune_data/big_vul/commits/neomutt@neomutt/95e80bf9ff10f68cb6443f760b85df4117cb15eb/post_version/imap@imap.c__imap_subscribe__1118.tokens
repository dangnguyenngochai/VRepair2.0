int imap_subscribe ( char * path , bool subscribe ) //<S2SV> { //<S2SV> struct ImapData * idata = NULL ; //<S2SV> char buf [ LONG_STRING ] ; //<S2SV> char mbox [ LONG_STRING ] ; //<S2SV> char errstr [ STRING ] ; //<S2SV> struct Buffer err , token ; //<S2SV> struct ImapMbox mx ; //<S2SV> size_t len = 0 ; //<S2SV> if ( ! mx_is_imap ( path ) || imap_parse_path ( path , & mx ) || ! mx . mbox ) //<S2SV> { //<S2SV> mutt_error ( _ ( "Bad<S2SV_blank>mailbox<S2SV_blank>name" ) ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> idata = imap_conn_find ( & ( mx . account ) , 0 ) ; //<S2SV> if ( ! idata ) //<S2SV> goto fail ; //<S2SV> imap_fix_path ( idata , mx . mbox , buf , sizeof ( buf ) ) ; //<S2SV> if ( ! * buf ) //<S2SV> mutt_str_strfcpy ( buf , "INBOX" , sizeof ( buf ) ) ; //<S2SV> if ( ImapCheckSubscribed ) //<S2SV> { //<S2SV> mutt_buffer_init ( & token ) ; //<S2SV> mutt_buffer_init ( & err ) ; //<S2SV> err . data = errstr ; //<S2SV> err . dsize = sizeof ( errstr ) ; //<S2SV> len = snprintf ( mbox , sizeof ( mbox ) , "%smailboxes<S2SV_blank>" , subscribe ? "" : "un" ) ; //<S2SV> imap_quote_string ( mbox + len , sizeof ( mbox ) - len , path , true ) ; //<S2SV> if ( mutt_parse_rc_line ( mbox , & token , & err ) ) //<S2SV> mutt_debug ( 1 , "Error<S2SV_blank>adding<S2SV_blank>subscribed<S2SV_blank>mailbox:<S2SV_blank>%s\\n" , errstr ) ; //<S2SV> FREE ( & token . data ) ; //<S2SV> } //<S2SV> if ( subscribe ) //<S2SV> mutt_message ( _ ( "Subscribing<S2SV_blank>to<S2SV_blank>%s..." ) , buf ) ; //<S2SV> else //<S2SV> mutt_message ( _ ( "Unsubscribing<S2SV_blank>from<S2SV_blank>%s..." ) , buf ) ; //<S2SV> imap_munge_mbox_name ( idata , mbox , sizeof ( mbox ) , buf ) ; //<S2SV> snprintf ( buf , sizeof ( buf ) , "%sSUBSCRIBE<S2SV_blank>%s" , subscribe ? "" : "UN" , mbox ) ; //<S2SV> if ( imap_exec ( idata , buf , 0 ) < 0 ) //<S2SV> goto fail ; //<S2SV> imap_unmunge_mbox_name ( idata , mx . mbox ) ; //<S2SV> if ( subscribe ) //<S2SV> mutt_message ( _ ( "Subscribed<S2SV_blank>to<S2SV_blank>%s" ) , mx . mbox ) ; //<S2SV> else //<S2SV> mutt_message ( _ ( "Unsubscribed<S2SV_blank>from<S2SV_blank>%s" ) , mx . mbox ) ; //<S2SV> FREE ( & mx . mbox ) ; //<S2SV> return 0 ; //<S2SV> fail : //<S2SV> FREE ( & mx . mbox ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 