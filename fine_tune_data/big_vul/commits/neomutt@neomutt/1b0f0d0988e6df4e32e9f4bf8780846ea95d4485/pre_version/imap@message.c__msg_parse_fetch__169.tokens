static int msg_parse_fetch ( struct ImapHeader * h , char * s ) //<S2SV> { //<S2SV> char tmp [ SHORT_STRING ] ; //<S2SV> char * ptmp = NULL ; //<S2SV> if ( ! s ) //<S2SV> return - 1 ; //<S2SV> while ( * s ) //<S2SV> { //<S2SV> SKIPWS ( s ) ; //<S2SV> if ( mutt_str_strncasecmp ( "FLAGS" , s , 5 ) == 0 ) //<S2SV> { //<S2SV> s = msg_parse_flags ( h , s ) ; //<S2SV> if ( ! s ) //<S2SV> return - 1 ; //<S2SV> } //<S2SV> else if ( mutt_str_strncasecmp ( "UID" , s , 3 ) == 0 ) //<S2SV> { //<S2SV> s += 3 ; //<S2SV> SKIPWS ( s ) ; //<S2SV> if ( mutt_str_atoui ( s , & h -> data -> uid ) < 0 ) //<S2SV> return - 1 ; //<S2SV> s = imap_next_word ( s ) ; //<S2SV> } //<S2SV> else if ( mutt_str_strncasecmp ( "INTERNALDATE" , s , 12 ) == 0 ) //<S2SV> { //<S2SV> s += 12 ; //<S2SV> SKIPWS ( s ) ; //<S2SV> if ( * s != \'\\"\' ) //<S2SV> { //<S2SV> mutt_debug ( 1 , "bogus<S2SV_blank>INTERNALDATE<S2SV_blank>entry:<S2SV_blank>%s\\n" , s ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> s ++ ; //<S2SV> ptmp = tmp ; //<S2SV> while ( * s && * s != \'\\"\' ) //<S2SV> * ptmp ++ = * s ++ ; //<S2SV> if ( * s != \'\\"\' ) //<S2SV> return - 1 ; //<S2SV> s ++ ; //<S2SV> * ptmp = '\\0' ; //<S2SV> h -> received = mutt_date_parse_imap ( tmp ) ; //<S2SV> } //<S2SV> else if ( mutt_str_strncasecmp ( "RFC822.SIZE" , s , 11 ) == 0 ) //<S2SV> { //<S2SV> s += 11 ; //<S2SV> SKIPWS ( s ) ; //<S2SV> ptmp = tmp ; //<S2SV> while ( isdigit ( ( unsigned char ) * s ) ) //<S2SV> * ptmp ++ = * s ++ ; //<S2SV> * ptmp = '\\0' ; //<S2SV> if ( mutt_str_atol ( tmp , & h -> content_length ) < 0 ) //<S2SV> return - 1 ; //<S2SV> } //<S2SV> else if ( ( mutt_str_strncasecmp ( "BODY" , s , 4 ) == 0 ) || //<S2SV> ( mutt_str_strncasecmp ( "RFC822.HEADER" , s , 13 ) == 0 ) ) //<S2SV> { //<S2SV> return - 2 ; //<S2SV> } //<S2SV> else if ( * s == ')' ) //<S2SV> s ++ ; //<S2SV> else if ( * s ) //<S2SV> { //<S2SV> imap_error ( "msg_parse_fetch" , s ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 