static int cmd_handle_untagged ( struct ImapData * idata ) //<S2SV> { //<S2SV> unsigned int count = 0 ; //<S2SV> char * s = imap_next_word ( idata -> buf ) ; //<S2SV> char * pn = imap_next_word ( s ) ; //<S2SV> if ( ( idata -> state >= IMAP_SELECTED ) && isdigit ( ( unsigned char ) * s ) ) //<S2SV> { //<S2SV> pn = s ; //<S2SV> s = imap_next_word ( s ) ; //<S2SV> if ( mutt_str_strncasecmp ( "EXISTS" , s , 6 ) == 0 ) //<S2SV> { //<S2SV> mutt_debug ( 2 , "Handling<S2SV_blank>EXISTS\\n" ) ; //<S2SV> if ( mutt_str_atoui ( pn , & count ) < 0 ) //<S2SV> { //<S2SV> mutt_debug ( 1 , "Malformed<S2SV_blank>EXISTS:<S2SV_blank>\'%s\'\\n" , pn ) ; //<S2SV> } //<S2SV> if ( ! ( idata -> reopen & IMAP_EXPUNGE_PENDING ) && count < idata -> max_msn ) //<S2SV> { //<S2SV> mutt_debug ( 1 , "Message<S2SV_blank>count<S2SV_blank>is<S2SV_blank>out<S2SV_blank>of<S2SV_blank>sync\\n" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> else if ( count == idata -> max_msn ) //<S2SV> mutt_debug ( 3 , "superfluous<S2SV_blank>EXISTS<S2SV_blank>message.\\n" ) ; //<S2SV> else //<S2SV> { //<S2SV> if ( ! ( idata -> reopen & IMAP_EXPUNGE_PENDING ) ) //<S2SV> { //<S2SV> mutt_debug ( 2 , "New<S2SV_blank>mail<S2SV_blank>in<S2SV_blank>%s<S2SV_blank>-<S2SV_blank>%d<S2SV_blank>messages<S2SV_blank>total.\\n" , idata -> mailbox , count ) ; //<S2SV> idata -> reopen |= IMAP_NEWMAIL_PENDING ; //<S2SV> } //<S2SV> idata -> new_mail_count = count ; //<S2SV> } //<S2SV> } //<S2SV> else if ( mutt_str_strncasecmp ( "EXPUNGE" , s , 7 ) == 0 ) //<S2SV> cmd_parse_expunge ( idata , pn ) ; //<S2SV> else if ( mutt_str_strncasecmp ( "FETCH" , s , 5 ) == 0 ) //<S2SV> cmd_parse_fetch ( idata , pn ) ; //<S2SV> } //<S2SV> else if ( mutt_str_strncasecmp ( "CAPABILITY" , s , 10 ) == 0 ) //<S2SV> cmd_parse_capability ( idata , s ) ; //<S2SV> else if ( mutt_str_strncasecmp ( "OK<S2SV_blank>[CAPABILITY" , s , 14 ) == 0 ) //<S2SV> cmd_parse_capability ( idata , pn ) ; //<S2SV> else if ( mutt_str_strncasecmp ( "OK<S2SV_blank>[CAPABILITY" , pn , 14 ) == 0 ) //<S2SV> cmd_parse_capability ( idata , imap_next_word ( pn ) ) ; //<S2SV> else if ( mutt_str_strncasecmp ( "LIST" , s , 4 ) == 0 ) //<S2SV> cmd_parse_list ( idata , s ) ; //<S2SV> else if ( mutt_str_strncasecmp ( "LSUB" , s , 4 ) == 0 ) //<S2SV> cmd_parse_lsub ( idata , s ) ; //<S2SV> else if ( mutt_str_strncasecmp ( "MYRIGHTS" , s , 8 ) == 0 ) //<S2SV> cmd_parse_myrights ( idata , s ) ; //<S2SV> else if ( mutt_str_strncasecmp ( "SEARCH" , s , 6 ) == 0 ) //<S2SV> cmd_parse_search ( idata , s ) ; //<S2SV> else if ( mutt_str_strncasecmp ( "STATUS" , s , 6 ) == 0 ) //<S2SV> cmd_parse_status ( idata , s ) ; //<S2SV> else if ( mutt_str_strncasecmp ( "ENABLED" , s , 7 ) == 0 ) //<S2SV> cmd_parse_enabled ( idata , s ) ; //<S2SV> else if ( mutt_str_strncasecmp ( "BYE" , s , 3 ) == 0 ) //<S2SV> { //<S2SV> mutt_debug ( 2 , "Handling<S2SV_blank>BYE\\n" ) ; //<S2SV> if ( idata -> status == IMAP_BYE ) //<S2SV> return 0 ; //<S2SV> s += 3 ; //<S2SV> SKIPWS ( s ) ; //<S2SV> mutt_error ( "%s" , s ) ; //<S2SV> cmd_handle_fatal ( idata ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> else if ( ImapServernoise && ( mutt_str_strncasecmp ( "NO" , s , 2 ) == 0 ) ) //<S2SV> { //<S2SV> mutt_debug ( 2 , "Handling<S2SV_blank>untagged<S2SV_blank>NO\\n" ) ; //<S2SV> mutt_error ( "%s" , s + 2 ) ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 