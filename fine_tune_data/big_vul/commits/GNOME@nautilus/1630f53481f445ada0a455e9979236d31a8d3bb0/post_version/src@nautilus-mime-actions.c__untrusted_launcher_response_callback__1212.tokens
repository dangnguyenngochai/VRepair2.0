static void //<S2SV> untrusted_launcher_response_callback ( GtkDialog * dialog , //<S2SV> int response_id , //<S2SV> ActivateParametersDesktop * parameters ) //<S2SV> { //<S2SV> GdkScreen * screen ; //<S2SV> char * uri ; //<S2SV> GFile * file ; //<S2SV> switch ( response_id ) //<S2SV> { //<S2SV> case GTK_RESPONSE_OK : //<S2SV> { //<S2SV> file = nautilus_file_get_location ( parameters -> file ) ; //<S2SV> nautilus_file_set_metadata ( parameters -> file , NAUTILUS_METADATA_KEY_DESKTOP_FILE_TRUSTED , //<S2SV> NULL , //<S2SV> "yes" ) ; //<S2SV> nautilus_file_mark_desktop_file_executable ( file , //<S2SV> parameters -> parent_window , //<S2SV> TRUE , //<S2SV> NULL , NULL ) ; //<S2SV> nautilus_file_invalidate_all_attributes ( parameters -> file ) ; //<S2SV> screen = gtk_widget_get_screen ( GTK_WIDGET ( parameters -> parent_window ) ) ; //<S2SV> uri = nautilus_file_get_uri ( parameters -> file ) ; //<S2SV> DEBUG ( "Launching<S2SV_blank>untrusted<S2SV_blank>launcher<S2SV_blank>%s" , uri ) ; //<S2SV> nautilus_launch_desktop_file ( screen , uri , NULL , //<S2SV> parameters -> parent_window ) ; //<S2SV> g_free ( uri ) ; //<S2SV> g_object_unref ( file ) ; //<S2SV> } //<S2SV> break ; //<S2SV> default : //<S2SV> { //<S2SV> } //<S2SV> break ; //<S2SV> } //<S2SV> gtk_widget_destroy ( GTK_WIDGET ( dialog ) ) ; //<S2SV> activate_parameters_desktop_free ( parameters ) ; //<S2SV> } //<S2SV> 