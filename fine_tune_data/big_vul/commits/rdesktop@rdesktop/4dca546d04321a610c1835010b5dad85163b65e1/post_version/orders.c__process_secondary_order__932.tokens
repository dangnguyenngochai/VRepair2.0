static void //<S2SV> process_secondary_order ( STREAM s ) //<S2SV> { //<S2SV> uint16 length ; //<S2SV> uint16 flags ; //<S2SV> uint8 type ; //<S2SV> uint8 * next_order ; //<S2SV> struct stream packet = * s ; //<S2SV> in_uint16_le ( s , length ) ; //<S2SV> in_uint16_le ( s , flags ) ; //<S2SV> in_uint8 ( s , type ) ; //<S2SV> if ( ! s_check_rem ( s , length + 7 ) ) //<S2SV> { //<S2SV> rdp_protocol_error ( "process_secondary_order(),<S2SV_blank>next<S2SV_blank>order<S2SV_blank>pointer<S2SV_blank>would<S2SV_blank>overrun<S2SV_blank>stream" , & packet ) ; //<S2SV> } //<S2SV> next_order = s -> p + ( sint16 ) length + 7 ; //<S2SV> switch ( type ) //<S2SV> { //<S2SV> case RDP_ORDER_RAW_BMPCACHE : //<S2SV> process_raw_bmpcache ( s ) ; //<S2SV> break ; //<S2SV> case RDP_ORDER_COLCACHE : //<S2SV> process_colcache ( s ) ; //<S2SV> break ; //<S2SV> case RDP_ORDER_BMPCACHE : //<S2SV> process_bmpcache ( s ) ; //<S2SV> break ; //<S2SV> case RDP_ORDER_FONTCACHE : //<S2SV> process_fontcache ( s ) ; //<S2SV> break ; //<S2SV> case RDP_ORDER_RAW_BMPCACHE2 : //<S2SV> process_bmpcache2 ( s , flags , False ) ; //<S2SV> break ; //<S2SV> case RDP_ORDER_BMPCACHE2 : //<S2SV> process_bmpcache2 ( s , flags , True ) ; //<S2SV> break ; //<S2SV> case RDP_ORDER_BRUSHCACHE : //<S2SV> process_brushcache ( s , flags ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> logger ( Graphics , Warning , //<S2SV> "process_secondary_order(),<S2SV_blank>unhandled<S2SV_blank>secondary<S2SV_blank>order<S2SV_blank>%d" , type ) ; //<S2SV> } //<S2SV> s -> p = next_order ; //<S2SV> } //<S2SV> 