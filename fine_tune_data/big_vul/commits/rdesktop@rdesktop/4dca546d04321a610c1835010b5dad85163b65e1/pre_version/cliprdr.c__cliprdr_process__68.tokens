static void //<S2SV> cliprdr_process ( STREAM s ) //<S2SV> { //<S2SV> uint16 type , status ; //<S2SV> uint32 length , format ; //<S2SV> uint8 * data ; //<S2SV> in_uint16_le ( s , type ) ; //<S2SV> in_uint16_le ( s , status ) ; //<S2SV> in_uint32_le ( s , length ) ; //<S2SV> data = s -> p ; //<S2SV> logger ( Clipboard , Debug , "cliprdr_process(),<S2SV_blank>type=%d,<S2SV_blank>status=%d,<S2SV_blank>length=%d" , type , status , //<S2SV> length ) ; //<S2SV> if ( status == CLIPRDR_ERROR ) //<S2SV> { //<S2SV> switch ( type ) //<S2SV> { //<S2SV> case CLIPRDR_FORMAT_ACK : //<S2SV> cliprdr_send_native_format_announce ( last_formats , //<S2SV> last_formats_length ) ; //<S2SV> break ; //<S2SV> case CLIPRDR_DATA_RESPONSE : //<S2SV> ui_clip_request_failed ( ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> logger ( Clipboard , Warning , //<S2SV> "cliprdr_process(),<S2SV_blank>unhandled<S2SV_blank>error<S2SV_blank>(type=%d)" , type ) ; //<S2SV> } //<S2SV> return ; //<S2SV> } //<S2SV> switch ( type ) //<S2SV> { //<S2SV> case CLIPRDR_CONNECT : //<S2SV> ui_clip_sync ( ) ; //<S2SV> break ; //<S2SV> case CLIPRDR_FORMAT_ANNOUNCE : //<S2SV> ui_clip_format_announce ( data , length ) ; //<S2SV> cliprdr_send_packet ( CLIPRDR_FORMAT_ACK , CLIPRDR_RESPONSE , NULL , 0 ) ; //<S2SV> return ; //<S2SV> case CLIPRDR_FORMAT_ACK : //<S2SV> break ; //<S2SV> case CLIPRDR_DATA_REQUEST : //<S2SV> in_uint32_le ( s , format ) ; //<S2SV> ui_clip_request_data ( format ) ; //<S2SV> break ; //<S2SV> case CLIPRDR_DATA_RESPONSE : //<S2SV> ui_clip_handle_data ( data , length ) ; //<S2SV> break ; //<S2SV> case 7 : //<S2SV> break ; //<S2SV> default : //<S2SV> logger ( Clipboard , Warning , "cliprdr_process(),<S2SV_blank>unhandled<S2SV_blank>packet<S2SV_blank>type<S2SV_blank>%d" , //<S2SV> type ) ; //<S2SV> } //<S2SV> } //<S2SV> 