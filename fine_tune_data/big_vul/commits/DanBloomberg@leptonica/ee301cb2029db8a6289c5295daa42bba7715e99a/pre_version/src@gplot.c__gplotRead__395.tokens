GPLOT * //<S2SV> gplotRead ( const char * filename ) //<S2SV> { //<S2SV> char buf [ L_BUF_SIZE ] ; //<S2SV> char * rootname , * title , * xlabel , * ylabel , * ignores ; //<S2SV> l_int32 outformat , ret , version , ignore ; //<S2SV> FILE * fp ; //<S2SV> GPLOT * gplot ; //<S2SV> PROCNAME ( "gplotRead" ) ; //<S2SV> if ( ! filename ) //<S2SV> return ( GPLOT * ) ERROR_PTR ( "filename<S2SV_blank>not<S2SV_blank>defined" , procName , NULL ) ; //<S2SV> if ( ( fp = fopenReadStream ( filename ) ) == NULL ) //<S2SV> return ( GPLOT * ) ERROR_PTR ( "stream<S2SV_blank>not<S2SV_blank>opened" , procName , NULL ) ; //<S2SV> ret = fscanf ( fp , "Gplot<S2SV_blank>Version<S2SV_blank>%d\\n" , & version ) ; //<S2SV> if ( ret != 1 ) { //<S2SV> fclose ( fp ) ; //<S2SV> return ( GPLOT * ) ERROR_PTR ( "not<S2SV_blank>a<S2SV_blank>gplot<S2SV_blank>file" , procName , NULL ) ; //<S2SV> } //<S2SV> if ( version != GPLOT_VERSION_NUMBER ) { //<S2SV> fclose ( fp ) ; //<S2SV> return ( GPLOT * ) ERROR_PTR ( "invalid<S2SV_blank>gplot<S2SV_blank>version" , procName , NULL ) ; //<S2SV> } //<S2SV> ignore = fscanf ( fp , "Rootname:<S2SV_blank>%s\\n" , buf ) ; //<S2SV> rootname = stringNew ( buf ) ; //<S2SV> ignore = fscanf ( fp , "Output<S2SV_blank>format:<S2SV_blank>%d\\n" , & outformat ) ; //<S2SV> ignores = fgets ( buf , L_BUF_SIZE , fp ) ; //<S2SV> title = stringNew ( buf + 7 ) ; //<S2SV> title [ strlen ( title ) - 1 ] = '\\0' ; //<S2SV> ignores = fgets ( buf , L_BUF_SIZE , fp ) ; //<S2SV> xlabel = stringNew ( buf + 14 ) ; //<S2SV> xlabel [ strlen ( xlabel ) - 1 ] = '\\0' ; //<S2SV> ignores = fgets ( buf , L_BUF_SIZE , fp ) ; //<S2SV> ylabel = stringNew ( buf + 14 ) ; //<S2SV> ylabel [ strlen ( ylabel ) - 1 ] = '\\0' ; //<S2SV> gplot = gplotCreate ( rootname , outformat , title , xlabel , ylabel ) ; //<S2SV> LEPT_FREE ( rootname ) ; //<S2SV> LEPT_FREE ( title ) ; //<S2SV> LEPT_FREE ( xlabel ) ; //<S2SV> LEPT_FREE ( ylabel ) ; //<S2SV> if ( ! gplot ) { //<S2SV> fclose ( fp ) ; //<S2SV> return ( GPLOT * ) ERROR_PTR ( "gplot<S2SV_blank>not<S2SV_blank>made" , procName , NULL ) ; //<S2SV> } //<S2SV> sarrayDestroy ( & gplot -> cmddata ) ; //<S2SV> sarrayDestroy ( & gplot -> datanames ) ; //<S2SV> sarrayDestroy ( & gplot -> plotdata ) ; //<S2SV> sarrayDestroy ( & gplot -> plottitles ) ; //<S2SV> numaDestroy ( & gplot -> plotstyles ) ; //<S2SV> ignore = fscanf ( fp , "Commandfile<S2SV_blank>name:<S2SV_blank>%s\\n" , buf ) ; //<S2SV> stringReplace ( & gplot -> cmdname , buf ) ; //<S2SV> ignore = fscanf ( fp , "\\nCommandfile<S2SV_blank>data:" ) ; //<S2SV> gplot -> cmddata = sarrayReadStream ( fp ) ; //<S2SV> ignore = fscanf ( fp , "\\nDatafile<S2SV_blank>names:" ) ; //<S2SV> gplot -> datanames = sarrayReadStream ( fp ) ; //<S2SV> ignore = fscanf ( fp , "\\nPlot<S2SV_blank>data:" ) ; //<S2SV> gplot -> plotdata = sarrayReadStream ( fp ) ; //<S2SV> ignore = fscanf ( fp , "\\nPlot<S2SV_blank>titles:" ) ; //<S2SV> gplot -> plottitles = sarrayReadStream ( fp ) ; //<S2SV> ignore = fscanf ( fp , "\\nPlot<S2SV_blank>styles:" ) ; //<S2SV> gplot -> plotstyles = numaReadStream ( fp ) ; //<S2SV> ignore = fscanf ( fp , "Number<S2SV_blank>of<S2SV_blank>plots:<S2SV_blank>%d\\n" , & gplot -> nplots ) ; //<S2SV> ignore = fscanf ( fp , "Output<S2SV_blank>file<S2SV_blank>name:<S2SV_blank>%s\\n" , buf ) ; //<S2SV> stringReplace ( & gplot -> outname , buf ) ; //<S2SV> ignore = fscanf ( fp , "Axis<S2SV_blank>scaling:<S2SV_blank>%d\\n" , & gplot -> scaling ) ; //<S2SV> fclose ( fp ) ; //<S2SV> return gplot ; //<S2SV> } //<S2SV> 