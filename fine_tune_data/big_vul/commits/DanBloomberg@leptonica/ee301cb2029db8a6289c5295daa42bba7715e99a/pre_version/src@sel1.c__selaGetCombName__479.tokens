char * //<S2SV> selaGetCombName ( SELA * sela , //<S2SV> l_int32 size , //<S2SV> l_int32 direction ) //<S2SV> { //<S2SV> char * selname ; //<S2SV> char combname [ L_BUF_SIZE ] ; //<S2SV> l_int32 i , nsels , sx , sy , found ; //<S2SV> SEL * sel ; //<S2SV> PROCNAME ( "selaGetCombName" ) ; //<S2SV> if ( ! sela ) //<S2SV> return ( char * ) ERROR_PTR ( "sela<S2SV_blank>not<S2SV_blank>defined" , procName , NULL ) ; //<S2SV> if ( direction != L_HORIZ && direction != L_VERT ) //<S2SV> return ( char * ) ERROR_PTR ( "invalid<S2SV_blank>direction" , procName , NULL ) ; //<S2SV> if ( direction == L_HORIZ ) //<S2SV> snprintf ( combname , L_BUF_SIZE , "sel_comb_%dh" , size ) ; //<S2SV> else //<S2SV> snprintf ( combname , L_BUF_SIZE , "sel_comb_%dv" , size ) ; //<S2SV> found = FALSE ; //<S2SV> nsels = selaGetCount ( sela ) ; //<S2SV> for ( i = 0 ; i < nsels ; i ++ ) { //<S2SV> sel = selaGetSel ( sela , i ) ; //<S2SV> selGetParameters ( sel , & sy , & sx , NULL , NULL ) ; //<S2SV> if ( sy != 1 && sx != 1 ) //<S2SV> continue ; //<S2SV> selname = selGetName ( sel ) ; //<S2SV> if ( ! strcmp ( selname , combname ) ) { //<S2SV> found = TRUE ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> if ( found ) //<S2SV> return stringNew ( selname ) ; //<S2SV> else //<S2SV> return ( char * ) ERROR_PTR ( "sel<S2SV_blank>not<S2SV_blank>found" , procName , NULL ) ; //<S2SV> } //<S2SV> 