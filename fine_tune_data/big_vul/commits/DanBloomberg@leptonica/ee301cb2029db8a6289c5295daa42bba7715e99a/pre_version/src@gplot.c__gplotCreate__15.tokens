GPLOT * //<S2SV> gplotCreate ( const char * rootname , //<S2SV> l_int32 outformat , //<S2SV> const char * title , //<S2SV> const char * xlabel , //<S2SV> const char * ylabel ) //<S2SV> { //<S2SV> char * newroot ; //<S2SV> char buf [ L_BUF_SIZE ] ; //<S2SV> l_int32 badchar ; //<S2SV> GPLOT * gplot ; //<S2SV> PROCNAME ( "gplotCreate" ) ; //<S2SV> if ( ! rootname ) //<S2SV> return ( GPLOT * ) ERROR_PTR ( "rootname<S2SV_blank>not<S2SV_blank>defined" , procName , NULL ) ; //<S2SV> if ( outformat != GPLOT_PNG && outformat != GPLOT_PS && //<S2SV> outformat != GPLOT_EPS && outformat != GPLOT_LATEX ) //<S2SV> return ( GPLOT * ) ERROR_PTR ( "outformat<S2SV_blank>invalid" , procName , NULL ) ; //<S2SV> stringCheckForChars ( rootname , "`;&|><\\"?*" , & badchar ) ; //<S2SV> if ( badchar ) //<S2SV> return ( GPLOT * ) ERROR_PTR ( "invalid<S2SV_blank>rootname" , procName , NULL ) ; //<S2SV> if ( ( gplot = ( GPLOT * ) LEPT_CALLOC ( 1 , sizeof ( GPLOT ) ) ) == NULL ) //<S2SV> return ( GPLOT * ) ERROR_PTR ( "gplot<S2SV_blank>not<S2SV_blank>made" , procName , NULL ) ; //<S2SV> gplot -> cmddata = sarrayCreate ( 0 ) ; //<S2SV> gplot -> datanames = sarrayCreate ( 0 ) ; //<S2SV> gplot -> plotdata = sarrayCreate ( 0 ) ; //<S2SV> gplot -> plottitles = sarrayCreate ( 0 ) ; //<S2SV> gplot -> plotstyles = numaCreate ( 0 ) ; //<S2SV> newroot = genPathname ( rootname , NULL ) ; //<S2SV> gplot -> rootname = newroot ; //<S2SV> gplot -> outformat = outformat ; //<S2SV> snprintf ( buf , L_BUF_SIZE , "%s.cmd" , rootname ) ; //<S2SV> gplot -> cmdname = stringNew ( buf ) ; //<S2SV> if ( outformat == GPLOT_PNG ) //<S2SV> snprintf ( buf , L_BUF_SIZE , "%s.png" , newroot ) ; //<S2SV> else if ( outformat == GPLOT_PS ) //<S2SV> snprintf ( buf , L_BUF_SIZE , "%s.ps" , newroot ) ; //<S2SV> else if ( outformat == GPLOT_EPS ) //<S2SV> snprintf ( buf , L_BUF_SIZE , "%s.eps" , newroot ) ; //<S2SV> else if ( outformat == GPLOT_LATEX ) //<S2SV> snprintf ( buf , L_BUF_SIZE , "%s.tex" , newroot ) ; //<S2SV> gplot -> outname = stringNew ( buf ) ; //<S2SV> if ( title ) gplot -> title = stringNew ( title ) ; //<S2SV> if ( xlabel ) gplot -> xlabel = stringNew ( xlabel ) ; //<S2SV> if ( ylabel ) gplot -> ylabel = stringNew ( ylabel ) ; //<S2SV> return gplot ; //<S2SV> } //<S2SV> 