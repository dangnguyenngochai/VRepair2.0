l_int32 //<S2SV> gplotAddPlot ( GPLOT * gplot , //<S2SV> NUMA * nax , //<S2SV> NUMA * nay , //<S2SV> l_int32 plotstyle , //<S2SV> const char * plottitle ) //<S2SV> { //<S2SV> char buf [ L_BUF_SIZE ] ; //<S2SV> char emptystring [ ] = "" ; //<S2SV> char * datastr , * title ; //<S2SV> l_int32 n , i ; //<S2SV> l_float32 valx , valy , startx , delx ; //<S2SV> SARRAY * sa ; //<S2SV> PROCNAME ( "gplotAddPlot" ) ; //<S2SV> if ( ! gplot ) //<S2SV> return ERROR_INT ( "gplot<S2SV_blank>not<S2SV_blank>defined" , procName , 1 ) ; //<S2SV> if ( ! nay ) //<S2SV> return ERROR_INT ( "nay<S2SV_blank>not<S2SV_blank>defined" , procName , 1 ) ; //<S2SV> if ( plotstyle < 0 || plotstyle >= NUM_GPLOT_STYLES ) //<S2SV> return ERROR_INT ( "invalid<S2SV_blank>plotstyle" , procName , 1 ) ; //<S2SV> if ( ( n = numaGetCount ( nay ) ) == 0 ) //<S2SV> return ERROR_INT ( "no<S2SV_blank>points<S2SV_blank>to<S2SV_blank>plot" , procName , 1 ) ; //<S2SV> if ( nax && ( n != numaGetCount ( nax ) ) ) //<S2SV> return ERROR_INT ( "nax<S2SV_blank>and<S2SV_blank>nay<S2SV_blank>sizes<S2SV_blank>differ" , procName , 1 ) ; //<S2SV> if ( n == 1 && plotstyle == GPLOT_LINES ) { //<S2SV> L_INFO ( "only<S2SV_blank>1<S2SV_blank>pt;<S2SV_blank>changing<S2SV_blank>style<S2SV_blank>to<S2SV_blank>points\\n" , procName ) ; //<S2SV> plotstyle = GPLOT_POINTS ; //<S2SV> } //<S2SV> numaGetParameters ( nay , & startx , & delx ) ; //<S2SV> numaAddNumber ( gplot -> plotstyles , plotstyle ) ; //<S2SV> if ( plottitle ) { //<S2SV> title = stringNew ( plottitle ) ; //<S2SV> sarrayAddString ( gplot -> plottitles , title , L_INSERT ) ; //<S2SV> } else { //<S2SV> sarrayAddString ( gplot -> plottitles , emptystring , L_COPY ) ; //<S2SV> } //<S2SV> gplot -> nplots ++ ; //<S2SV> snprintf ( buf , L_BUF_SIZE , "%s.data.%d" , gplot -> rootname , gplot -> nplots ) ; //<S2SV> sarrayAddString ( gplot -> datanames , buf , L_COPY ) ; //<S2SV> sa = sarrayCreate ( n ) ; //<S2SV> for ( i = 0 ; i < n ; i ++ ) { //<S2SV> if ( nax ) //<S2SV> numaGetFValue ( nax , i , & valx ) ; //<S2SV> else //<S2SV> valx = startx + i * delx ; //<S2SV> numaGetFValue ( nay , i , & valy ) ; //<S2SV> snprintf ( buf , L_BUF_SIZE , "%f<S2SV_blank>%f\\n" , valx , valy ) ; //<S2SV> sarrayAddString ( sa , buf , L_COPY ) ; //<S2SV> } //<S2SV> datastr = sarrayToString ( sa , 0 ) ; //<S2SV> sarrayAddString ( gplot -> plotdata , datastr , L_INSERT ) ; //<S2SV> sarrayDestroy ( & sa ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 