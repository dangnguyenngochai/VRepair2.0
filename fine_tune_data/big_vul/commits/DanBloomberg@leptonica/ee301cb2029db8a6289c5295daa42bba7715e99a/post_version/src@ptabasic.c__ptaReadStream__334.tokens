PTA * //<S2SV> ptaReadStream ( FILE * fp ) //<S2SV> { //<S2SV> char typestr [ 128 ] ; //<S2SV> l_int32 i , n , ix , iy , type , version ; //<S2SV> l_float32 x , y ; //<S2SV> PTA * pta ; //<S2SV> PROCNAME ( "ptaReadStream" ) ; //<S2SV> if ( ! fp ) //<S2SV> return ( PTA * ) ERROR_PTR ( "stream<S2SV_blank>not<S2SV_blank>defined" , procName , NULL ) ; //<S2SV> if ( fscanf ( fp , "\\n<S2SV_blank>Pta<S2SV_blank>Version<S2SV_blank>%d\\n" , & version ) != 1 ) //<S2SV> return ( PTA * ) ERROR_PTR ( "not<S2SV_blank>a<S2SV_blank>pta<S2SV_blank>file" , procName , NULL ) ; //<S2SV> if ( version != PTA_VERSION_NUMBER ) //<S2SV> return ( PTA * ) ERROR_PTR ( "invalid<S2SV_blank>pta<S2SV_blank>version" , procName , NULL ) ; //<S2SV> if ( fscanf ( fp , "<S2SV_blank>Number<S2SV_blank>of<S2SV_blank>pts<S2SV_blank>=<S2SV_blank>%d;<S2SV_blank>format<S2SV_blank>=<S2SV_blank>%127s\\n" , & n , typestr ) != 2 ) //<S2SV> return ( PTA * ) ERROR_PTR ( "not<S2SV_blank>a<S2SV_blank>pta<S2SV_blank>file" , procName , NULL ) ; //<S2SV> if ( ! strcmp ( typestr , "float" ) ) //<S2SV> type = 0 ; //<S2SV> else //<S2SV> type = 1 ; //<S2SV> if ( ( pta = ptaCreate ( n ) ) == NULL ) //<S2SV> return ( PTA * ) ERROR_PTR ( "pta<S2SV_blank>not<S2SV_blank>made" , procName , NULL ) ; //<S2SV> for ( i = 0 ; i < n ; i ++ ) { //<S2SV> if ( type == 0 ) { //<S2SV> if ( fscanf ( fp , "<S2SV_blank><S2SV_blank><S2SV_blank>(%f,<S2SV_blank>%f)\\n" , & x , & y ) != 2 ) { //<S2SV> ptaDestroy ( & pta ) ; //<S2SV> return ( PTA * ) ERROR_PTR ( "error<S2SV_blank>reading<S2SV_blank>floats" , procName , NULL ) ; //<S2SV> } //<S2SV> ptaAddPt ( pta , x , y ) ; //<S2SV> } else { //<S2SV> if ( fscanf ( fp , "<S2SV_blank><S2SV_blank><S2SV_blank>(%d,<S2SV_blank>%d)\\n" , & ix , & iy ) != 2 ) { //<S2SV> ptaDestroy ( & pta ) ; //<S2SV> return ( PTA * ) ERROR_PTR ( "error<S2SV_blank>reading<S2SV_blank>ints" , procName , NULL ) ; //<S2SV> } //<S2SV> ptaAddPt ( pta , ix , iy ) ; //<S2SV> } //<S2SV> } //<S2SV> return pta ; //<S2SV> } //<S2SV> 