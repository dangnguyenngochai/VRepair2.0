SEL * //<S2SV> selReadStream ( FILE * fp ) //<S2SV> { //<S2SV> char * selname ; //<S2SV> char linebuf [ L_BUFSIZE ] ; //<S2SV> l_int32 sy , sx , cy , cx , i , j , version , ignore ; //<S2SV> SEL * sel ; //<S2SV> PROCNAME ( "selReadStream" ) ; //<S2SV> if ( ! fp ) //<S2SV> return ( SEL * ) ERROR_PTR ( "stream<S2SV_blank>not<S2SV_blank>defined" , procName , NULL ) ; //<S2SV> if ( fscanf ( fp , "<S2SV_blank><S2SV_blank>Sel<S2SV_blank>Version<S2SV_blank>%d\\n" , & version ) != 1 ) //<S2SV> return ( SEL * ) ERROR_PTR ( "not<S2SV_blank>a<S2SV_blank>sel<S2SV_blank>file" , procName , NULL ) ; //<S2SV> if ( version != SEL_VERSION_NUMBER ) //<S2SV> return ( SEL * ) ERROR_PTR ( "invalid<S2SV_blank>sel<S2SV_blank>version" , procName , NULL ) ; //<S2SV> if ( fgets ( linebuf , L_BUFSIZE , fp ) == NULL ) //<S2SV> return ( SEL * ) ERROR_PTR ( "error<S2SV_blank>reading<S2SV_blank>into<S2SV_blank>linebuf" , procName , NULL ) ; //<S2SV> selname = stringNew ( linebuf ) ; //<S2SV> sscanf ( linebuf , "<S2SV_blank><S2SV_blank>------<S2SV_blank><S2SV_blank>%200s<S2SV_blank><S2SV_blank>------" , selname ) ; //<S2SV> if ( fscanf ( fp , "<S2SV_blank><S2SV_blank>sy<S2SV_blank>=<S2SV_blank>%d,<S2SV_blank>sx<S2SV_blank>=<S2SV_blank>%d,<S2SV_blank>cy<S2SV_blank>=<S2SV_blank>%d,<S2SV_blank>cx<S2SV_blank>=<S2SV_blank>%d\\n" , //<S2SV> & sy , & sx , & cy , & cx ) != 4 ) { //<S2SV> LEPT_FREE ( selname ) ; //<S2SV> return ( SEL * ) ERROR_PTR ( "dimensions<S2SV_blank>not<S2SV_blank>read" , procName , NULL ) ; //<S2SV> } //<S2SV> if ( ( sel = selCreate ( sy , sx , selname ) ) == NULL ) { //<S2SV> LEPT_FREE ( selname ) ; //<S2SV> return ( SEL * ) ERROR_PTR ( "sel<S2SV_blank>not<S2SV_blank>made" , procName , NULL ) ; //<S2SV> } //<S2SV> selSetOrigin ( sel , cy , cx ) ; //<S2SV> for ( i = 0 ; i < sy ; i ++ ) { //<S2SV> ignore = fscanf ( fp , "<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>" ) ; //<S2SV> for ( j = 0 ; j < sx ; j ++ ) //<S2SV> ignore = fscanf ( fp , "%1d" , & sel -> data [ i ] [ j ] ) ; //<S2SV> ignore = fscanf ( fp , "\\n" ) ; //<S2SV> } //<S2SV> ignore = fscanf ( fp , "\\n" ) ; //<S2SV> LEPT_FREE ( selname ) ; //<S2SV> return sel ; //<S2SV> } //<S2SV> 