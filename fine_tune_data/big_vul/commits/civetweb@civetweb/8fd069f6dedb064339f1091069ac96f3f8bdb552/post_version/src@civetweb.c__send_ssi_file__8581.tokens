static void //<S2SV> send_ssi_file ( struct mg_connection * conn , //<S2SV> const char * path , //<S2SV> struct mg_file * filep , //<S2SV> int include_level ) //<S2SV> { //<S2SV> char buf [ MG_BUF_LEN ] ; //<S2SV> int ch , offset , len , in_tag , in_ssi_tag ; //<S2SV> if ( include_level > 10 ) { //<S2SV> mg_cry_internal ( conn , "SSI<S2SV_blank>#include<S2SV_blank>level<S2SV_blank>is<S2SV_blank>too<S2SV_blank>deep<S2SV_blank>(%s)" , path ) ; //<S2SV> return ; //<S2SV> } //<S2SV> in_tag = in_ssi_tag = len = offset = 0 ; //<S2SV> while ( ( ch = mg_fgetc ( filep , offset ++ ) ) != EOF ) { //<S2SV> if ( in_tag ) { //<S2SV> if ( ch == '>' ) { //<S2SV> buf [ len ++ ] = '>' ; //<S2SV> if ( in_ssi_tag ) { //<S2SV> buf [ len ] = 0 ; //<S2SV> if ( ( len > 12 ) && ! memcmp ( buf + 5 , "include" , 7 ) ) { //<S2SV> do_ssi_include ( conn , path , buf + 12 , include_level + 1 ) ; //<S2SV> # if ! defined ( NO_POPEN ) //<S2SV> } else if ( ( len > 9 ) && ! memcmp ( buf + 5 , "exec" , 4 ) ) { //<S2SV> do_ssi_exec ( conn , buf + 9 ) ; //<S2SV> # endif //<S2SV> } else { //<S2SV> mg_cry_internal ( conn , //<S2SV> "%s:<S2SV_blank>unknown<S2SV_blank>SSI<S2SV_blank>" //<S2SV> "command:<S2SV_blank>\\"%s\\"" , //<S2SV> path , //<S2SV> buf ) ; //<S2SV> } //<S2SV> len = 0 ; //<S2SV> in_ssi_tag = in_tag = 0 ; //<S2SV> } else { //<S2SV> ( void ) mg_write ( conn , buf , ( size_t ) len ) ; //<S2SV> len = 0 ; //<S2SV> in_tag = 0 ; //<S2SV> } //<S2SV> } else { //<S2SV> buf [ len ++ ] = ( char ) ( ch & 0xff ) ; //<S2SV> if ( ( len == 5 ) && ! memcmp ( buf , "<!--#" , 5 ) ) { //<S2SV> in_ssi_tag = 1 ; //<S2SV> } //<S2SV> if ( ( len + 2 ) > ( int ) sizeof ( buf ) ) { //<S2SV> mg_cry_internal ( conn , "%s:<S2SV_blank>tag<S2SV_blank>is<S2SV_blank>too<S2SV_blank>large" , path ) ; //<S2SV> return ; //<S2SV> } //<S2SV> } //<S2SV> } else { //<S2SV> if ( ch == '<' ) { //<S2SV> in_tag = 1 ; //<S2SV> if ( len > 0 ) { //<S2SV> ( void ) mg_write ( conn , buf , ( size_t ) len ) ; //<S2SV> } //<S2SV> len = 1 ; //<S2SV> buf [ 0 ] = '<' ; //<S2SV> } else { //<S2SV> buf [ len ++ ] = ( char ) ( ch & 0xff ) ; //<S2SV> if ( len == ( int ) sizeof ( buf ) ) { //<S2SV> mg_write ( conn , buf , ( size_t ) len ) ; //<S2SV> len = 0 ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> if ( len > 0 ) { //<S2SV> mg_write ( conn , buf , ( size_t ) len ) ; //<S2SV> } //<S2SV> } //<S2SV> 