int //<S2SV> cdf_read_short_sector_chain ( const cdf_header_t * h , //<S2SV> const cdf_sat_t * ssat , const cdf_stream_t * sst , //<S2SV> cdf_secid_t sid , size_t len , cdf_stream_t * scn ) //<S2SV> { //<S2SV> size_t ss = CDF_SHORT_SEC_SIZE ( h ) , i , j ; //<S2SV> scn -> sst_len = cdf_count_chain ( ssat , sid , CDF_SEC_SIZE ( h ) ) ; //<S2SV> scn -> sst_dirlen = len ; //<S2SV> if ( sst -> sst_tab == NULL || scn -> sst_len == ( size_t ) - 1 ) //<S2SV> return - 1 ; //<S2SV> scn -> sst_tab = calloc ( scn -> sst_len , ss ) ; //<S2SV> if ( scn -> sst_tab == NULL ) //<S2SV> return - 1 ; //<S2SV> for ( j = i = 0 ; sid >= 0 ; i ++ , j ++ ) { //<S2SV> if ( j >= CDF_LOOP_LIMIT ) { //<S2SV> DPRINTF ( ( "Read<S2SV_blank>short<S2SV_blank>sector<S2SV_blank>chain<S2SV_blank>loop<S2SV_blank>limit" ) ) ; //<S2SV> errno = EFTYPE ; //<S2SV> goto out ; //<S2SV> } //<S2SV> if ( i >= scn -> sst_len ) { //<S2SV> DPRINTF ( ( "Out<S2SV_blank>of<S2SV_blank>bounds<S2SV_blank>reading<S2SV_blank>short<S2SV_blank>sector<S2SV_blank>chain<S2SV_blank>" //<S2SV> "%" SIZE_T_FORMAT "u<S2SV_blank>><S2SV_blank>%" SIZE_T_FORMAT "u\\n" , //<S2SV> i , scn -> sst_len ) ) ; //<S2SV> errno = EFTYPE ; //<S2SV> goto out ; //<S2SV> } //<S2SV> if ( cdf_read_short_sector ( sst , scn -> sst_tab , i * ss , ss , h , //<S2SV> sid ) != ( ssize_t ) ss ) { //<S2SV> DPRINTF ( ( "Reading<S2SV_blank>short<S2SV_blank>sector<S2SV_blank>chain<S2SV_blank>%d" , sid ) ) ; //<S2SV> goto out ; //<S2SV> } //<S2SV> sid = CDF_TOLE4 ( ( uint32_t ) ssat -> sat_tab [ sid ] ) ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> out : //<S2SV> free ( scn -> sst_tab ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 