static void skel ( const char * homedir , uid_t u , gid_t g ) { //<S2SV> char * fname ; //<S2SV> if ( arg_zsh ) { //<S2SV> if ( asprintf ( & fname , "%s/.zshrc" , homedir ) == - 1 ) //<S2SV> errExit ( "asprintf" ) ; //<S2SV> struct stat s ; //<S2SV> if ( stat ( fname , & s ) == 0 ) //<S2SV> return ; //<S2SV> if ( stat ( "/etc/skel/.zshrc" , & s ) == 0 ) { //<S2SV> if ( is_link ( "/etc/skel/.zshrc" ) ) { //<S2SV> fprintf ( stderr , "Error:<S2SV_blank>invalid<S2SV_blank>/etc/skel/.zshrc<S2SV_blank>file\\n" ) ; //<S2SV> exit ( 1 ) ; //<S2SV> } //<S2SV> if ( copy_file ( "/etc/skel/.zshrc" , fname ) == 0 ) { //<S2SV> if ( chown ( fname , u , g ) == - 1 ) //<S2SV> errExit ( "chown" ) ; //<S2SV> fs_logger ( "clone<S2SV_blank>/etc/skel/.zshrc" ) ; //<S2SV> } //<S2SV> } //<S2SV> else { //<S2SV> FILE * fp = fopen ( fname , "w" ) ; //<S2SV> if ( fp ) { //<S2SV> fprintf ( fp , "\\n" ) ; //<S2SV> fclose ( fp ) ; //<S2SV> if ( chown ( fname , u , g ) == - 1 ) //<S2SV> errExit ( "chown" ) ; //<S2SV> if ( chmod ( fname , S_IRUSR | S_IWUSR ) < 0 ) //<S2SV> errExit ( "chown" ) ; //<S2SV> fs_logger2 ( "touch" , fname ) ; //<S2SV> } //<S2SV> } //<S2SV> free ( fname ) ; //<S2SV> } //<S2SV> else if ( arg_csh ) { //<S2SV> if ( asprintf ( & fname , "%s/.cshrc" , homedir ) == - 1 ) //<S2SV> errExit ( "asprintf" ) ; //<S2SV> struct stat s ; //<S2SV> if ( stat ( fname , & s ) == 0 ) //<S2SV> return ; //<S2SV> if ( stat ( "/etc/skel/.cshrc" , & s ) == 0 ) { //<S2SV> if ( is_link ( "/etc/skel/.cshrc" ) ) { //<S2SV> fprintf ( stderr , "Error:<S2SV_blank>invalid<S2SV_blank>/etc/skel/.cshrc<S2SV_blank>file\\n" ) ; //<S2SV> exit ( 1 ) ; //<S2SV> } //<S2SV> if ( copy_file ( "/etc/skel/.cshrc" , fname ) == 0 ) { //<S2SV> if ( chown ( fname , u , g ) == - 1 ) //<S2SV> errExit ( "chown" ) ; //<S2SV> fs_logger ( "clone<S2SV_blank>/etc/skel/.cshrc" ) ; //<S2SV> } //<S2SV> } //<S2SV> else { //<S2SV> FILE * fp = fopen ( fname , "w" ) ; //<S2SV> if ( fp ) { //<S2SV> fprintf ( fp , "\\n" ) ; //<S2SV> fclose ( fp ) ; //<S2SV> if ( chown ( fname , u , g ) == - 1 ) //<S2SV> errExit ( "chown" ) ; //<S2SV> if ( chmod ( fname , S_IRUSR | S_IWUSR ) < 0 ) //<S2SV> errExit ( "chown" ) ; //<S2SV> fs_logger2 ( "touch" , fname ) ; //<S2SV> } //<S2SV> } //<S2SV> free ( fname ) ; //<S2SV> } //<S2SV> else { //<S2SV> if ( asprintf ( & fname , "%s/.bashrc" , homedir ) == - 1 ) //<S2SV> errExit ( "asprintf" ) ; //<S2SV> struct stat s ; //<S2SV> if ( stat ( fname , & s ) == 0 ) //<S2SV> return ; //<S2SV> if ( stat ( "/etc/skel/.bashrc" , & s ) == 0 ) { //<S2SV> if ( is_link ( "/etc/skel/.bashrc" ) ) { //<S2SV> fprintf ( stderr , "Error:<S2SV_blank>invalid<S2SV_blank>/etc/skel/.bashrc<S2SV_blank>file\\n" ) ; //<S2SV> exit ( 1 ) ; //<S2SV> } //<S2SV> if ( copy_file ( "/etc/skel/.bashrc" , fname ) == 0 ) { //<S2SV> if ( chown ( fname , u , g ) == - 1 ) //<S2SV> errExit ( "chown" ) ; //<S2SV> fs_logger ( "clone<S2SV_blank>/etc/skel/.bashrc" ) ; //<S2SV> } //<S2SV> } //<S2SV> free ( fname ) ; //<S2SV> } //<S2SV> } //<S2SV> 