static MagickBooleanType Get8BIMProperty ( const Image * image , const char * key , //<S2SV> ExceptionInfo * exception ) //<S2SV> { //<S2SV> char //<S2SV> * attribute , //<S2SV> format [ MagickPathExtent ] , //<S2SV> name [ MagickPathExtent ] , //<S2SV> * resource ; //<S2SV> const StringInfo //<S2SV> * profile ; //<S2SV> const unsigned char //<S2SV> * info ; //<S2SV> long //<S2SV> start , //<S2SV> stop ; //<S2SV> MagickBooleanType //<S2SV> status ; //<S2SV> register ssize_t //<S2SV> i ; //<S2SV> size_t //<S2SV> length ; //<S2SV> ssize_t //<S2SV> count , //<S2SV> id , //<S2SV> sub_number ; //<S2SV> profile = GetImageProfile ( image , "8bim" ) ; //<S2SV> if ( profile == ( StringInfo * ) NULL ) //<S2SV> return ( MagickFalse ) ; //<S2SV> count = ( ssize_t ) sscanf ( key , "8BIM:%ld,%ld:%1024[^\\n]\\n%1024[^\\n]" , & start , & stop , //<S2SV> name , format ) ; //<S2SV> if ( ( count != 2 ) && ( count != 3 ) && ( count != 4 ) ) //<S2SV> return ( MagickFalse ) ; //<S2SV> if ( count < 4 ) //<S2SV> ( void ) CopyMagickString ( format , "SVG" , MagickPathExtent ) ; //<S2SV> if ( count < 3 ) //<S2SV> * name = '\\0' ; //<S2SV> sub_number = 1 ; //<S2SV> if ( * name == '#' ) //<S2SV> sub_number = ( ssize_t ) StringToLong ( & name [ 1 ] ) ; //<S2SV> sub_number = MagickMax ( sub_number , 1L ) ; //<S2SV> resource = ( char * ) NULL ; //<S2SV> status = MagickFalse ; //<S2SV> length = GetStringInfoLength ( profile ) ; //<S2SV> info = GetStringInfoDatum ( profile ) ; //<S2SV> while ( ( length > 0 ) && ( status == MagickFalse ) ) //<S2SV> { //<S2SV> if ( ReadPropertyByte ( & info , & length ) != ( unsigned char ) '8' ) //<S2SV> continue ; //<S2SV> if ( ReadPropertyByte ( & info , & length ) != ( unsigned char ) 'B' ) //<S2SV> continue ; //<S2SV> if ( ReadPropertyByte ( & info , & length ) != ( unsigned char ) 'I' ) //<S2SV> continue ; //<S2SV> if ( ReadPropertyByte ( & info , & length ) != ( unsigned char ) 'M' ) //<S2SV> continue ; //<S2SV> id = ( ssize_t ) ReadPropertyMSBShort ( & info , & length ) ; //<S2SV> if ( id < ( ssize_t ) start ) //<S2SV> continue ; //<S2SV> if ( id > ( ssize_t ) stop ) //<S2SV> continue ; //<S2SV> if ( resource != ( char * ) NULL ) //<S2SV> resource = DestroyString ( resource ) ; //<S2SV> count = ( ssize_t ) ReadPropertyByte ( & info , & length ) ; //<S2SV> if ( ( count != 0 ) && ( ( size_t ) count <= length ) ) //<S2SV> { //<S2SV> resource = ( char * ) NULL ; //<S2SV> if ( ~ ( ( size_t ) count ) >= ( MagickPathExtent - 1 ) ) //<S2SV> resource = ( char * ) AcquireQuantumMemory ( ( size_t ) count + //<S2SV> MagickPathExtent , sizeof ( * resource ) ) ; //<S2SV> if ( resource != ( char * ) NULL ) //<S2SV> { //<S2SV> for ( i = 0 ; i < ( ssize_t ) count ; i ++ ) //<S2SV> resource [ i ] = ( char ) ReadPropertyByte ( & info , & length ) ; //<S2SV> resource [ count ] = '\\0' ; //<S2SV> } //<S2SV> } //<S2SV> if ( ( count & 0x01 ) == 0 ) //<S2SV> ( void ) ReadPropertyByte ( & info , & length ) ; //<S2SV> count = ( ssize_t ) ReadPropertyMSBLong ( & info , & length ) ; //<S2SV> if ( ( * name != '\\0' ) && ( * name != '#' ) ) //<S2SV> if ( ( resource == ( char * ) NULL ) || ( LocaleCompare ( name , resource ) != 0 ) ) //<S2SV> { //<S2SV> info += count ; //<S2SV> length -= MagickMin ( count , ( ssize_t ) length ) ; //<S2SV> continue ; //<S2SV> } //<S2SV> if ( ( * name == '#' ) && ( sub_number != 1 ) ) //<S2SV> { //<S2SV> sub_number -- ; //<S2SV> info += count ; //<S2SV> length -= MagickMin ( count , ( ssize_t ) length ) ; //<S2SV> continue ; //<S2SV> } //<S2SV> attribute = ( char * ) NULL ; //<S2SV> if ( ~ ( ( size_t ) count ) >= ( MagickPathExtent - 1 ) ) //<S2SV> attribute = ( char * ) AcquireQuantumMemory ( ( size_t ) count + MagickPathExtent , //<S2SV> sizeof ( * attribute ) ) ; //<S2SV> if ( attribute != ( char * ) NULL ) //<S2SV> { //<S2SV> ( void ) CopyMagickMemory ( attribute , ( char * ) info , ( size_t ) count ) ; //<S2SV> attribute [ count ] = '\\0' ; //<S2SV> info += count ; //<S2SV> length -= MagickMin ( count , ( ssize_t ) length ) ; //<S2SV> if ( ( id <= 1999 ) || ( id >= 2999 ) ) //<S2SV> ( void ) SetImageProperty ( ( Image * ) image , key , ( const char * ) //<S2SV> attribute , exception ) ; //<S2SV> else //<S2SV> { //<S2SV> char //<S2SV> * path ; //<S2SV> if ( LocaleCompare ( format , "svg" ) == 0 ) //<S2SV> path = TraceSVGClippath ( ( unsigned char * ) attribute , ( size_t ) count , //<S2SV> image -> columns , image -> rows ) ; //<S2SV> else //<S2SV> path = TracePSClippath ( ( unsigned char * ) attribute , ( size_t ) count ) ; //<S2SV> ( void ) SetImageProperty ( ( Image * ) image , key , ( const char * ) path , //<S2SV> exception ) ; //<S2SV> path = DestroyString ( path ) ; //<S2SV> } //<S2SV> attribute = DestroyString ( attribute ) ; //<S2SV> status = MagickTrue ; //<S2SV> } //<S2SV> } //<S2SV> if ( resource != ( char * ) NULL ) //<S2SV> resource = DestroyString ( resource ) ; //<S2SV> return ( status ) ; //<S2SV> } //<S2SV> 