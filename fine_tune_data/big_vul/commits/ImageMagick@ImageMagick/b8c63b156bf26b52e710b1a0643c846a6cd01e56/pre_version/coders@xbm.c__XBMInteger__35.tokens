static unsigned int XBMInteger ( Image * image , short int * hex_digits ) //<S2SV> { //<S2SV> int //<S2SV> c ; //<S2SV> unsigned int //<S2SV> value ; //<S2SV> do //<S2SV> { //<S2SV> c = ReadBlobByte ( image ) ; //<S2SV> if ( c == EOF ) //<S2SV> return ( 0 ) ; //<S2SV> } while ( ( c == '<S2SV_blank>' ) || ( c == '\\t' ) || ( c == '\\n' ) || ( c == '\\r' ) ) ; //<S2SV> value = 0 ; //<S2SV> while ( hex_digits [ c ] >= 0 ) { //<S2SV> if ( value > ( unsigned int ) ( INT_MAX / 10 ) ) //<S2SV> break ; //<S2SV> value *= 16 ; //<S2SV> c &= 0xff ; //<S2SV> if ( value > ( unsigned int ) ( INT_MAX - hex_digits [ c ] ) ) //<S2SV> break ; //<S2SV> value += hex_digits [ c ] ; //<S2SV> c = ReadBlobByte ( image ) ; //<S2SV> if ( c == EOF ) //<S2SV> return ( 0 ) ; //<S2SV> } //<S2SV> return ( value ) ; //<S2SV> } //<S2SV> 