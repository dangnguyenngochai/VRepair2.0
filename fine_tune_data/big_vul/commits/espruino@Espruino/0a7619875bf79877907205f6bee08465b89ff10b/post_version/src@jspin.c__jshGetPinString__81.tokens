void jshGetPinString ( char * result , Pin pin ) { //<S2SV> result [ 0 ] = 0 ; //<S2SV> # ifdef PIN_NAMES_DIRECT //<S2SV> if ( jshIsPinValid ( pin ) ) { //<S2SV> result [ 0 ] = ( char ) ( 'A' + ( pinInfo [ pin ] . port & JSH_PORT_MASK ) - JSH_PORTA ) ; //<S2SV> itostr ( pinInfo [ pin ] . pin - JSH_PIN0 , & result [ 1 ] , 10 ) ; //<S2SV> # else //<S2SV> if ( false ) { //<S2SV> # if JSH_PORTA_OFFSET != - 1 //<S2SV> } else if ( //<S2SV> # if JSH_PORTA_OFFSET != 0 //<S2SV> pin >= JSH_PORTA_OFFSET && //<S2SV> # endif //<S2SV> pin < JSH_PORTA_OFFSET + JSH_PORTA_COUNT ) { //<S2SV> result [ 0 ] = 'A' ; //<S2SV> itostr ( pin - JSH_PORTA_OFFSET , & result [ 1 ] , 10 ) ; //<S2SV> # endif //<S2SV> # if JSH_PORTB_OFFSET != - 1 //<S2SV> } else if ( pin >= JSH_PORTB_OFFSET && pin < JSH_PORTB_OFFSET + JSH_PORTB_COUNT ) { //<S2SV> result [ 0 ] = 'B' ; //<S2SV> itostr ( pin - JSH_PORTB_OFFSET , & result [ 1 ] , 10 ) ; //<S2SV> # endif //<S2SV> # if JSH_PORTC_OFFSET != - 1 //<S2SV> } else if ( pin >= JSH_PORTC_OFFSET && pin < JSH_PORTC_OFFSET + JSH_PORTC_COUNT ) { //<S2SV> result [ 0 ] = 'C' ; //<S2SV> itostr ( pin - JSH_PORTC_OFFSET , & result [ 1 ] , 10 ) ; //<S2SV> # endif //<S2SV> # if JSH_PORTD_OFFSET != - 1 //<S2SV> } else if ( //<S2SV> # if JSH_PORTD_OFFSET != 0 //<S2SV> pin >= JSH_PORTD_OFFSET && //<S2SV> # endif //<S2SV> pin < JSH_PORTD_OFFSET + JSH_PORTD_COUNT ) { //<S2SV> result [ 0 ] = 'D' ; //<S2SV> itostr ( pin - JSH_PORTD_OFFSET , & result [ 1 ] , 10 ) ; //<S2SV> # endif //<S2SV> # if JSH_PORTE_OFFSET != - 1 //<S2SV> } else if ( pin >= JSH_PORTE_OFFSET && pin < JSH_PORTE_OFFSET + JSH_PORTE_COUNT ) { //<S2SV> result [ 0 ] = 'E' ; //<S2SV> itostr ( pin - JSH_PORTE_OFFSET , & result [ 1 ] , 10 ) ; //<S2SV> # endif //<S2SV> # if JSH_PORTF_OFFSET != - 1 //<S2SV> } else if ( pin >= JSH_PORTF_OFFSET && pin < JSH_PORTF_OFFSET + JSH_PORTF_COUNT ) { //<S2SV> result [ 0 ] = 'F' ; //<S2SV> itostr ( pin - JSH_PORTF_OFFSET , & result [ 1 ] , 10 ) ; //<S2SV> # endif //<S2SV> # if JSH_PORTG_OFFSET != - 1 //<S2SV> } else if ( pin >= JSH_PORTG_OFFSET && pin < JSH_PORTG_OFFSET + JSH_PORTG_COUNT ) { //<S2SV> result [ 0 ] = 'G' ; //<S2SV> itostr ( pin - JSH_PORTG_OFFSET , & result [ 1 ] , 10 ) ; //<S2SV> # endif //<S2SV> # if JSH_PORTH_OFFSET != - 1 //<S2SV> } else if ( pin >= JSH_PORTH_OFFSET && pin < JSH_PORTH_OFFSET + JSH_PORTH_COUNT ) { //<S2SV> result [ 0 ] = 'H' ; //<S2SV> itostr ( pin - JSH_PORTH_OFFSET , & result [ 1 ] , 10 ) ; //<S2SV> # endif //<S2SV> # if JSH_PORTI_OFFSET != - 1 //<S2SV> } else if ( pin >= JSH_PORTI_OFFSET && pin < JSH_PORTI_OFFSET + JSH_PORTI_COUNT ) { //<S2SV> result [ 0 ] = 'I' ; //<S2SV> itostr ( pin - JSH_PORTI_OFFSET , & result [ 1 ] , 10 ) ; //<S2SV> # endif //<S2SV> # if JSH_PORTV_OFFSET != - 1 //<S2SV> } else if ( pin >= JSH_PORTV_OFFSET && pin < JSH_PORTV_OFFSET + JSH_PORTV_COUNT ) { //<S2SV> result [ 0 ] = 'V' ; //<S2SV> itostr ( pin - JSH_PORTV_OFFSET , & result [ 1 ] , 10 ) ; //<S2SV> # endif //<S2SV> # endif //<S2SV> } else { //<S2SV> strcpy ( result , "undefined" ) ; //<S2SV> } //<S2SV> } //<S2SV> 