JsVar * jswrap_graphics_createArrayBuffer ( int width , int height , int bpp , JsVar * options ) { //<S2SV> if ( width <= 0 || height <= 0 || width > 32767 || height > 32767 ) { //<S2SV> jsExceptionHere ( JSET_ERROR , "Invalid<S2SV_blank>Size" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( ! isValidBPP ( bpp ) ) { //<S2SV> jsExceptionHere ( JSET_ERROR , "Invalid<S2SV_blank>BPP" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> JsVar * parent = jspNewObject ( 0 , "Graphics" ) ; //<S2SV> if ( ! parent ) return 0 ; //<S2SV> JsGraphics gfx ; //<S2SV> graphicsStructInit ( & gfx ) ; //<S2SV> gfx . data . type = JSGRAPHICSTYPE_ARRAYBUFFER ; //<S2SV> gfx . data . flags = JSGRAPHICSFLAGS_NONE ; //<S2SV> gfx . graphicsVar = parent ; //<S2SV> gfx . data . width = ( unsigned short ) width ; //<S2SV> gfx . data . height = ( unsigned short ) height ; //<S2SV> gfx . data . bpp = ( unsigned char ) bpp ; //<S2SV> if ( jsvIsObject ( options ) ) { //<S2SV> if ( jsvGetBoolAndUnLock ( jsvObjectGetChild ( options , "zigzag" , 0 ) ) ) //<S2SV> gfx . data . flags = ( JsGraphicsFlags ) ( gfx . data . flags | JSGRAPHICSFLAGS_ARRAYBUFFER_ZIGZAG ) ; //<S2SV> if ( jsvGetBoolAndUnLock ( jsvObjectGetChild ( options , "msb" , 0 ) ) ) //<S2SV> gfx . data . flags = ( JsGraphicsFlags ) ( gfx . data . flags | JSGRAPHICSFLAGS_ARRAYBUFFER_MSB ) ; //<S2SV> if ( jsvGetBoolAndUnLock ( jsvObjectGetChild ( options , "vertical_byte" , 0 ) ) ) { //<S2SV> if ( gfx . data . bpp == 1 ) //<S2SV> gfx . data . flags = ( JsGraphicsFlags ) ( gfx . data . flags | JSGRAPHICSFLAGS_ARRAYBUFFER_VERTICAL_BYTE ) ; //<S2SV> else //<S2SV> jsWarn ( "vertical_byte<S2SV_blank>only<S2SV_blank>works<S2SV_blank>for<S2SV_blank>1bpp<S2SV_blank>ArrayBuffers\\n" ) ; //<S2SV> } //<S2SV> JsVar * colorv = jsvObjectGetChild ( options , "color_order" , 0 ) ; //<S2SV> if ( colorv ) { //<S2SV> if ( jsvIsStringEqual ( colorv , "rgb" ) ) ; //<S2SV> else if ( ! jsvIsStringEqual ( colorv , "brg" ) ) //<S2SV> gfx . data . flags = ( JsGraphicsFlags ) ( gfx . data . flags | JSGRAPHICSFLAGS_COLOR_BRG ) ; //<S2SV> else if ( ! jsvIsStringEqual ( colorv , "bgr" ) ) //<S2SV> gfx . data . flags = ( JsGraphicsFlags ) ( gfx . data . flags | JSGRAPHICSFLAGS_COLOR_BGR ) ; //<S2SV> else if ( ! jsvIsStringEqual ( colorv , "gbr" ) ) //<S2SV> gfx . data . flags = ( JsGraphicsFlags ) ( gfx . data . flags | JSGRAPHICSFLAGS_COLOR_GBR ) ; //<S2SV> else if ( ! jsvIsStringEqual ( colorv , "grb" ) ) //<S2SV> gfx . data . flags = ( JsGraphicsFlags ) ( gfx . data . flags | JSGRAPHICSFLAGS_COLOR_GRB ) ; //<S2SV> else if ( ! jsvIsStringEqual ( colorv , "rbg" ) ) //<S2SV> gfx . data . flags = ( JsGraphicsFlags ) ( gfx . data . flags | JSGRAPHICSFLAGS_COLOR_RBG ) ; //<S2SV> else //<S2SV> jsWarn ( "color_order<S2SV_blank>must<S2SV_blank>be<S2SV_blank>3<S2SV_blank>characters" ) ; //<S2SV> jsvUnLock ( colorv ) ; //<S2SV> } //<S2SV> } //<S2SV> lcdInit_ArrayBuffer ( & gfx ) ; //<S2SV> graphicsSetVar ( & gfx ) ; //<S2SV> return parent ; //<S2SV> } //<S2SV> 