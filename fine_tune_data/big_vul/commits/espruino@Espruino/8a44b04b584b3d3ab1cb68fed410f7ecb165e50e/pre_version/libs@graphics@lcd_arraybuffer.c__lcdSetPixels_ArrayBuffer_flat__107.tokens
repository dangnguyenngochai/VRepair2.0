void lcdSetPixels_ArrayBuffer_flat ( JsGraphics * gfx , short x , short y , short pixelCount , unsigned int col ) { //<S2SV> unsigned char * ptr = ( unsigned char * ) gfx -> backendData ; //<S2SV> unsigned int idx = lcdGetPixelIndex_ArrayBuffer ( gfx , x , y , pixelCount ) ; //<S2SV> ptr += idx >> 3 ; //<S2SV> unsigned int whiteMask = ( 1U << gfx -> data . bpp ) - 1 ; //<S2SV> bool shortCut = ( col == 0 || ( col & whiteMask ) == whiteMask ) && ( ! ( gfx -> data . flags & JSGRAPHICSFLAGS_ARRAYBUFFER_VERTICAL_BYTE ) ) ; //<S2SV> while ( pixelCount -- ) { //<S2SV> if ( gfx -> data . bpp & 7 ) { //<S2SV> idx = idx & 7 ; //<S2SV> if ( shortCut && idx == 0 ) { //<S2SV> int wholeBytes = ( gfx -> data . bpp * ( pixelCount + 1 ) ) >> 3 ; //<S2SV> if ( wholeBytes ) { //<S2SV> char c = ( char ) ( col ? 0xFF : 0 ) ; //<S2SV> pixelCount = ( short ) ( pixelCount + 1 - ( wholeBytes * 8 / gfx -> data . bpp ) ) ; //<S2SV> while ( wholeBytes -- ) { //<S2SV> * ptr = c ; //<S2SV> ptr ++ ; //<S2SV> } //<S2SV> continue ; //<S2SV> } //<S2SV> } //<S2SV> unsigned int mask = ( unsigned int ) ( 1 << gfx -> data . bpp ) - 1 ; //<S2SV> unsigned int existing = ( unsigned int ) * ptr ; //<S2SV> unsigned int bitIdx = ( gfx -> data . flags & JSGRAPHICSFLAGS_ARRAYBUFFER_MSB ) ? 8 - ( idx + gfx -> data . bpp ) : idx ; //<S2SV> * ptr = ( char ) ( ( existing & ~ ( mask << bitIdx ) ) | ( ( col & mask ) << bitIdx ) ) ; //<S2SV> if ( gfx -> data . flags & JSGRAPHICSFLAGS_ARRAYBUFFER_VERTICAL_BYTE ) { //<S2SV> ptr ++ ; //<S2SV> } else { //<S2SV> idx += gfx -> data . bpp ; //<S2SV> if ( idx >= 8 ) ptr ++ ; //<S2SV> } //<S2SV> } else { //<S2SV> int i ; //<S2SV> for ( i = 0 ; i < gfx -> data . bpp ; i += 8 ) { //<S2SV> * ptr = ( char ) ( col >> i ) ; //<S2SV> ptr ++ ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> 