void parser ( void ) //<S2SV> { //<S2SV> char * arg ; //<S2SV> # ifndef MINIMAL //<S2SV> char * sitearg ; //<S2SV> # endif //<S2SV> # ifdef WITH_RFC2640 //<S2SV> char * narg = NULL ; //<S2SV> # endif //<S2SV> size_t n ; //<S2SV> # ifdef IMPLICIT_TLS //<S2SV> ( void ) tls_init_new_session ( ) ; //<S2SV> data_protection_level = CPL_PRIVATE ; //<S2SV> # endif //<S2SV> for ( ; ; ) { //<S2SV> xferfd = - 1 ; //<S2SV> if ( state_needs_update != 0 ) { //<S2SV> state_needs_update = 0 ; //<S2SV> setprocessname ( "pure-ftpd<S2SV_blank>(IDLE)" ) ; //<S2SV> # ifdef FTPWHO //<S2SV> if ( shm_data_cur != NULL ) { //<S2SV> ftpwho_lock ( ) ; //<S2SV> shm_data_cur -> state = FTPWHO_STATE_IDLE ; //<S2SV> * shm_data_cur -> filename = 0 ; //<S2SV> ftpwho_unlock ( ) ; //<S2SV> } //<S2SV> # endif //<S2SV> } //<S2SV> doreply ( ) ; //<S2SV> alarm ( idletime * 2 ) ; //<S2SV> switch ( sfgets ( ) ) { //<S2SV> case - 1 : //<S2SV> # ifdef BORING_MODE //<S2SV> die ( 421 , LOG_INFO , MSG_TIMEOUT ) ; //<S2SV> # else //<S2SV> die ( 421 , LOG_INFO , MSG_TIMEOUT_PARSER ) ; //<S2SV> # endif //<S2SV> case - 2 : //<S2SV> return ; //<S2SV> } //<S2SV> # ifdef DEBUG //<S2SV> if ( debug != 0 ) { //<S2SV> addreply ( 0 , "%s" , cmd ) ; //<S2SV> } //<S2SV> # endif //<S2SV> n = ( size_t ) 0U ; //<S2SV> while ( ( isalpha ( ( unsigned char ) cmd [ n ] ) || cmd [ n ] == '@' ) && //<S2SV> n < cmdsize ) { //<S2SV> cmd [ n ] = ( char ) tolower ( ( unsigned char ) cmd [ n ] ) ; //<S2SV> n ++ ; //<S2SV> } //<S2SV> if ( n >= cmdsize ) { //<S2SV> die ( 421 , LOG_WARNING , MSG_LINE_TOO_LONG ) ; //<S2SV> } //<S2SV> if ( n == ( size_t ) 0U ) { //<S2SV> nop : //<S2SV> addreply_noformat ( 500 , "?" ) ; //<S2SV> continue ; //<S2SV> } //<S2SV> # ifdef SKIP_COMMAND_TRAILING_SPACES //<S2SV> while ( isspace ( ( unsigned char ) cmd [ n ] ) && n < cmdsize ) { //<S2SV> cmd [ n ++ ] = 0 ; //<S2SV> } //<S2SV> arg = cmd + n ; //<S2SV> while ( cmd [ n ] != 0 && n < cmdsize ) { //<S2SV> n ++ ; //<S2SV> } //<S2SV> n -- ; //<S2SV> while ( isspace ( ( unsigned char ) cmd [ n ] ) ) { //<S2SV> cmd [ n -- ] = 0 ; //<S2SV> } //<S2SV> # else //<S2SV> if ( cmd [ n ] == 0 ) { //<S2SV> arg = cmd + n ; //<S2SV> } else if ( isspace ( ( unsigned char ) cmd [ n ] ) ) { //<S2SV> cmd [ n ] = 0 ; //<S2SV> arg = cmd + n + 1 ; //<S2SV> } else { //<S2SV> goto nop ; //<S2SV> } //<S2SV> # endif //<S2SV> if ( logging != 0 ) { //<S2SV> # ifdef DEBUG //<S2SV> logfile ( LOG_DEBUG , MSG_DEBUG_COMMAND "<S2SV_blank>[%s]<S2SV_blank>[%s]" , //<S2SV> cmd , arg ) ; //<S2SV> # else //<S2SV> logfile ( LOG_DEBUG , MSG_DEBUG_COMMAND "<S2SV_blank>[%s]<S2SV_blank>[%s]" , //<S2SV> cmd , strcmp ( cmd , "pass" ) ? arg : "<*>" ) ; //<S2SV> # endif //<S2SV> } //<S2SV> # ifdef WITH_RFC2640 //<S2SV> narg = charset_client2fs ( arg ) ; //<S2SV> arg = narg ; //<S2SV> # endif //<S2SV> # ifndef MINIMAL //<S2SV> if ( ! strcmp ( cmd , "noop" ) ) { //<S2SV> antiidle ( ) ; //<S2SV> donoop ( ) ; //<S2SV> goto wayout ; //<S2SV> } //<S2SV> # endif //<S2SV> if ( ! strcmp ( cmd , "user" ) ) { //<S2SV> # ifdef WITH_TLS //<S2SV> if ( enforce_tls_auth > 1 && tls_cnx == NULL ) { //<S2SV> die ( 421 , LOG_WARNING , MSG_TLS_NEEDED ) ; //<S2SV> } //<S2SV> # endif //<S2SV> douser ( arg ) ; //<S2SV> } else if ( ! strcmp ( cmd , "acct" ) ) { //<S2SV> addreply ( 202 , MSG_WHOAREYOU ) ; //<S2SV> } else if ( ! strcmp ( cmd , "pass" ) ) { //<S2SV> if ( guest == 0 ) { //<S2SV> randomdelay ( ) ; //<S2SV> } //<S2SV> dopass ( arg ) ; //<S2SV> } else if ( ! strcmp ( cmd , "quit" ) ) { //<S2SV> addreply ( 221 , MSG_GOODBYE , //<S2SV> ( unsigned long long ) ( ( uploaded + 1023ULL ) / 1024ULL ) , //<S2SV> ( unsigned long long ) ( ( downloaded + 1023ULL ) / 1024ULL ) ) ; //<S2SV> return ; //<S2SV> } else if ( ! strcmp ( cmd , "syst" ) ) { //<S2SV> antiidle ( ) ; //<S2SV> addreply_noformat ( 215 , "UNIX<S2SV_blank>Type:<S2SV_blank>L8" ) ; //<S2SV> goto wayout ; //<S2SV> # ifdef WITH_TLS //<S2SV> } else if ( enforce_tls_auth > 0 && //<S2SV> ! strcmp ( cmd , "auth" ) && ! strcasecmp ( arg , "tls" ) ) { //<S2SV> addreply_noformat ( 234 , "AUTH<S2SV_blank>TLS<S2SV_blank>OK." ) ; //<S2SV> doreply ( ) ; //<S2SV> if ( tls_cnx == NULL ) { //<S2SV> ( void ) tls_init_new_session ( ) ; //<S2SV> } //<S2SV> goto wayout ; //<S2SV> } else if ( ! strcmp ( cmd , "pbsz" ) ) { //<S2SV> addreply_noformat ( tls_cnx == NULL ? 503 : 200 , "PBSZ=0" ) ; //<S2SV> } else if ( ! strcmp ( cmd , "prot" ) ) { //<S2SV> if ( tls_cnx == NULL ) { //<S2SV> addreply_noformat ( 503 , MSG_PROT_BEFORE_PBSZ ) ; //<S2SV> goto wayout ; //<S2SV> } //<S2SV> switch ( * arg ) { //<S2SV> case 0 : //<S2SV> addreply_noformat ( 503 , MSG_MISSING_ARG ) ; //<S2SV> data_protection_level = CPL_NONE ; //<S2SV> break ; //<S2SV> case 'C' : //<S2SV> if ( arg [ 1 ] == 0 ) { //<S2SV> addreply ( 200 , MSG_PROT_OK , "clear" ) ; //<S2SV> data_protection_level = CPL_CLEAR ; //<S2SV> break ; //<S2SV> } //<S2SV> case 'S' : //<S2SV> case 'E' : //<S2SV> if ( arg [ 1 ] == 0 ) { //<S2SV> addreply ( 200 , MSG_PROT_UNKNOWN_LEVEL , arg , "private" ) ; //<S2SV> data_protection_level = CPL_PRIVATE ; //<S2SV> break ; //<S2SV> } //<S2SV> case 'P' : //<S2SV> if ( arg [ 1 ] == 0 ) { //<S2SV> addreply ( 200 , MSG_PROT_OK , "private" ) ; //<S2SV> data_protection_level = CPL_PRIVATE ; //<S2SV> break ; //<S2SV> } //<S2SV> default : //<S2SV> addreply_noformat ( 534 , "Fallback<S2SV_blank>to<S2SV_blank>[C]" ) ; //<S2SV> data_protection_level = CPL_CLEAR ; //<S2SV> break ; //<S2SV> } //<S2SV> # endif //<S2SV> } else if ( ! strcmp ( cmd , "auth" ) || ! strcmp ( cmd , "adat" ) ) { //<S2SV> addreply_noformat ( 500 , MSG_AUTH_UNIMPLEMENTED ) ; //<S2SV> } else if ( ! strcmp ( cmd , "type" ) ) { //<S2SV> antiidle ( ) ; //<S2SV> dotype ( arg ) ; //<S2SV> goto wayout ; //<S2SV> } else if ( ! strcmp ( cmd , "mode" ) ) { //<S2SV> antiidle ( ) ; //<S2SV> domode ( arg ) ; //<S2SV> goto wayout ; //<S2SV> # ifndef MINIMAL //<S2SV> } else if ( ! strcmp ( cmd , "feat" ) ) { //<S2SV> dofeat ( ) ; //<S2SV> goto wayout ; //<S2SV> } else if ( ! strcmp ( cmd , "opts" ) ) { //<S2SV> doopts ( arg ) ; //<S2SV> goto wayout ; //<S2SV> # endif //<S2SV> } else if ( ! strcmp ( cmd , "stru" ) ) { //<S2SV> dostru ( arg ) ; //<S2SV> goto wayout ; //<S2SV> # ifndef MINIMAL //<S2SV> } else if ( ! strcmp ( cmd , "help" ) ) { //<S2SV> goto help_site ; //<S2SV> # endif //<S2SV> # ifdef DEBUG //<S2SV> } else if ( ! strcmp ( cmd , "xdbg" ) ) { //<S2SV> debug ++ ; //<S2SV> addreply ( 200 , MSG_XDBG_OK , debug ) ; //<S2SV> goto wayout ; //<S2SV> # endif //<S2SV> } else if ( loggedin == 0 ) { //<S2SV> addreply_noformat ( 530 , MSG_NOT_LOGGED_IN ) ; //<S2SV> goto wayout ; //<S2SV> } else { //<S2SV> if ( ! strcmp ( cmd , "cwd" ) || ! strcmp ( cmd , "xcwd" ) ) { //<S2SV> antiidle ( ) ; //<S2SV> docwd ( arg ) ; //<S2SV> goto wayout ; //<S2SV> } else if ( ! strcmp ( cmd , "port" ) ) { //<S2SV> doport ( arg ) ; //<S2SV> # ifndef MINIMAL //<S2SV> } else if ( ! strcmp ( cmd , "eprt" ) ) { //<S2SV> doeprt ( arg ) ; //<S2SV> } else if ( ! strcmp ( cmd , "esta" ) && //<S2SV> disallow_passive == 0 && //<S2SV> STORAGE_FAMILY ( force_passive_ip ) == 0 ) { //<S2SV> doesta ( ) ; //<S2SV> } else if ( ! strcmp ( cmd , "estp" ) ) { //<S2SV> doestp ( ) ; //<S2SV> # endif //<S2SV> } else if ( disallow_passive == 0 && //<S2SV> ( ! strcmp ( cmd , "pasv" ) || ! strcmp ( cmd , "p@sw" ) ) ) { //<S2SV> dopasv ( 0 ) ; //<S2SV> } else if ( disallow_passive == 0 && //<S2SV> ( ! strcmp ( cmd , "epsv" ) && //<S2SV> ( broken_client_compat == 0 || //<S2SV> STORAGE_FAMILY ( ctrlconn ) == AF_INET6 ) ) ) { //<S2SV> if ( ! strcasecmp ( arg , "all" ) ) { //<S2SV> epsv_all = 1 ; //<S2SV> addreply_noformat ( 220 , MSG_ACTIVE_DISABLED ) ; //<S2SV> } else if ( ! strcmp ( arg , "2" ) && ! v6ready ) { //<S2SV> addreply_noformat ( 522 , MSG_ONLY_IPV4 ) ; //<S2SV> } else { //<S2SV> dopasv ( 1 ) ; //<S2SV> } //<S2SV> # ifndef MINIMAL //<S2SV> } else if ( disallow_passive == 0 && ! strcmp ( cmd , "spsv" ) ) { //<S2SV> dopasv ( 2 ) ; //<S2SV> } else if ( ! strcmp ( cmd , "allo" ) ) { //<S2SV> if ( * arg == 0 ) { //<S2SV> addreply_noformat ( 501 , MSG_STAT_FAILURE ) ; //<S2SV> } else { //<S2SV> const off_t size = ( off_t ) strtoull ( arg , NULL , 10 ) ; //<S2SV> if ( size < ( off_t ) 0 ) { //<S2SV> addreply_noformat ( 501 , MSG_STAT_FAILURE ) ; //<S2SV> } else { //<S2SV> doallo ( size ) ; //<S2SV> } //<S2SV> } //<S2SV> # endif //<S2SV> } else if ( ! strcmp ( cmd , "pwd" ) || ! strcmp ( cmd , "xpwd" ) ) { //<S2SV> # ifdef WITH_RFC2640 //<S2SV> char * nwd ; //<S2SV> # endif //<S2SV> antiidle ( ) ; //<S2SV> # ifdef WITH_RFC2640 //<S2SV> nwd = charset_fs2client ( wd ) ; //<S2SV> addreply ( 257 , "\\"%s\\"<S2SV_blank>" MSG_IS_YOUR_CURRENT_LOCATION , nwd ) ; //<S2SV> free ( nwd ) ; //<S2SV> # else //<S2SV> addreply ( 257 , "\\"%s\\"<S2SV_blank>" MSG_IS_YOUR_CURRENT_LOCATION , wd ) ; //<S2SV> # endif //<S2SV> goto wayout ; //<S2SV> } else if ( ! strcmp ( cmd , "cdup" ) || ! strcmp ( cmd , "xcup" ) ) { //<S2SV> docwd ( ".." ) ; //<S2SV> } else if ( ! strcmp ( cmd , "retr" ) ) { //<S2SV> if ( * arg != 0 ) { //<S2SV> # ifdef WITH_TLS //<S2SV> if ( enforce_tls_auth == 3 && //<S2SV> data_protection_level != CPL_PRIVATE ) { //<S2SV> addreply_noformat ( 521 , MSG_PROT_PRIVATE_NEEDED ) ; //<S2SV> } //<S2SV> else //<S2SV> # endif //<S2SV> { //<S2SV> doretr ( arg ) ; //<S2SV> } //<S2SV> } else { //<S2SV> addreply_noformat ( 501 , MSG_NO_FILE_NAME ) ; //<S2SV> } //<S2SV> } else if ( ! strcmp ( cmd , "rest" ) ) { //<S2SV> antiidle ( ) ; //<S2SV> if ( * arg != 0 ) { //<S2SV> dorest ( arg ) ; //<S2SV> } else { //<S2SV> addreply_noformat ( 501 , MSG_NO_RESTART_POINT ) ; //<S2SV> restartat = ( off_t ) 0 ; //<S2SV> } //<S2SV> goto wayout ; //<S2SV> } else if ( ! strcmp ( cmd , "dele" ) ) { //<S2SV> if ( * arg != 0 ) { //<S2SV> dodele ( arg ) ; //<S2SV> } else { //<S2SV> addreply_noformat ( 501 , MSG_NO_FILE_NAME ) ; //<S2SV> } //<S2SV> } else if ( ! strcmp ( cmd , "stor" ) ) { //<S2SV> arg = revealextraspc ( arg ) ; //<S2SV> if ( * arg != 0 ) { //<S2SV> # ifdef WITH_TLS //<S2SV> if ( enforce_tls_auth == 3 && //<S2SV> data_protection_level != CPL_PRIVATE ) { //<S2SV> addreply_noformat ( 521 , MSG_PROT_PRIVATE_NEEDED ) ; //<S2SV> } else //<S2SV> # endif //<S2SV> { //<S2SV> dostor ( arg , 0 , autorename ) ; //<S2SV> } //<S2SV> } else { //<S2SV> addreply_noformat ( 501 , MSG_NO_FILE_NAME ) ; //<S2SV> } //<S2SV> } else if ( ! strcmp ( cmd , "appe" ) ) { //<S2SV> arg = revealextraspc ( arg ) ; //<S2SV> if ( * arg != 0 ) { //<S2SV> # ifdef WITH_TLS //<S2SV> if ( enforce_tls_auth == 3 && //<S2SV> data_protection_level != CPL_PRIVATE ) { //<S2SV> addreply_noformat ( 521 , MSG_PROT_PRIVATE_NEEDED ) ; //<S2SV> } else //<S2SV> # endif //<S2SV> { //<S2SV> dostor ( arg , 1 , 0 ) ; //<S2SV> } //<S2SV> } else { //<S2SV> addreply_noformat ( 501 , MSG_NO_FILE_NAME ) ; //<S2SV> } //<S2SV> # ifndef MINIMAL //<S2SV> } else if ( ! strcmp ( cmd , "stou" ) ) { //<S2SV> # ifdef WITH_TLS //<S2SV> if ( enforce_tls_auth == 3 && //<S2SV> data_protection_level != CPL_PRIVATE ) { //<S2SV> addreply_noformat ( 521 , MSG_PROT_PRIVATE_NEEDED ) ; //<S2SV> } else //<S2SV> # endif //<S2SV> { //<S2SV> dostou ( ) ; //<S2SV> } //<S2SV> # endif //<S2SV> # ifndef DISABLE_MKD_RMD //<S2SV> } else if ( ! strcmp ( cmd , "mkd" ) || ! strcmp ( cmd , "xmkd" ) ) { //<S2SV> arg = revealextraspc ( arg ) ; //<S2SV> if ( * arg != 0 ) { //<S2SV> domkd ( arg ) ; //<S2SV> } else { //<S2SV> addreply_noformat ( 501 , MSG_NO_DIRECTORY_NAME ) ; //<S2SV> } //<S2SV> } else if ( ! strcmp ( cmd , "rmd" ) || ! strcmp ( cmd , "xrmd" ) ) { //<S2SV> if ( * arg != 0 ) { //<S2SV> dormd ( arg ) ; //<S2SV> } else { //<S2SV> addreply_noformat ( 550 , MSG_NO_DIRECTORY_NAME ) ; //<S2SV> } //<S2SV> # endif //<S2SV> # ifndef MINIMAL //<S2SV> } else if ( ! strcmp ( cmd , "stat" ) ) { //<S2SV> if ( * arg != 0 ) { //<S2SV> modern_listings = 0 ; //<S2SV> donlist ( arg , 1 , 1 , 1 , 1 ) ; //<S2SV> } else { //<S2SV> addreply_noformat ( 211 , "http://www.pureftpd.org/" ) ; //<S2SV> } //<S2SV> # endif //<S2SV> } else if ( ! strcmp ( cmd , "list" ) ) { //<S2SV> # ifndef MINIMAL //<S2SV> modern_listings = 0 ; //<S2SV> # endif //<S2SV> # ifdef WITH_TLS //<S2SV> if ( enforce_tls_auth == 3 && //<S2SV> data_protection_level != CPL_PRIVATE ) { //<S2SV> addreply_noformat ( 521 , MSG_PROT_PRIVATE_NEEDED ) ; //<S2SV> } else //<S2SV> # endif //<S2SV> { //<S2SV> donlist ( arg , 0 , 1 , 0 , 1 ) ; //<S2SV> } //<S2SV> } else if ( ! strcmp ( cmd , "nlst" ) ) { //<S2SV> # ifndef MINIMAL //<S2SV> modern_listings = 0 ; //<S2SV> # endif //<S2SV> # ifdef WITH_TLS //<S2SV> if ( enforce_tls_auth == 3 && //<S2SV> data_protection_level != CPL_PRIVATE ) { //<S2SV> addreply_noformat ( 521 , MSG_PROT_PRIVATE_NEEDED ) ; //<S2SV> } else //<S2SV> # endif //<S2SV> { //<S2SV> donlist ( arg , 0 , 0 , 0 , broken_client_compat ) ; //<S2SV> } //<S2SV> # ifndef MINIMAL //<S2SV> } else if ( ! strcmp ( cmd , "mlst" ) ) { //<S2SV> # ifdef WITH_TLS //<S2SV> if ( enforce_tls_auth == 3 && //<S2SV> data_protection_level != CPL_PRIVATE ) { //<S2SV> addreply_noformat ( 521 , MSG_PROT_PRIVATE_NEEDED ) ; //<S2SV> } else //<S2SV> # endif //<S2SV> { //<S2SV> domlst ( * arg != 0 ? arg : "." ) ; //<S2SV> } //<S2SV> } else if ( ! strcmp ( cmd , "mlsd" ) ) { //<S2SV> modern_listings = 1 ; //<S2SV> # ifdef WITH_TLS //<S2SV> if ( enforce_tls_auth == 3 && //<S2SV> data_protection_level != CPL_PRIVATE ) { //<S2SV> addreply_noformat ( 521 , MSG_PROT_PRIVATE_NEEDED ) ; //<S2SV> } else //<S2SV> # endif //<S2SV> { //<S2SV> donlist ( arg , 0 , 1 , 1 , 0 ) ; //<S2SV> } //<S2SV> # endif //<S2SV> } else if ( ! strcmp ( cmd , "abor" ) ) { //<S2SV> addreply_noformat ( 226 , MSG_ABOR_SUCCESS ) ; //<S2SV> # ifndef MINIMAL //<S2SV> } else if ( ! strcmp ( cmd , "site" ) ) { //<S2SV> if ( ( sitearg = arg ) != NULL ) { //<S2SV> while ( * sitearg != 0 && ! isspace ( ( unsigned char ) * sitearg ) ) { //<S2SV> sitearg ++ ; //<S2SV> } //<S2SV> if ( * sitearg != 0 ) { //<S2SV> * sitearg ++ = 0 ; //<S2SV> } //<S2SV> } //<S2SV> if ( ! strcasecmp ( arg , "idle" ) ) { //<S2SV> if ( sitearg == NULL || * sitearg == 0 ) { //<S2SV> addreply_noformat ( 501 , "SITE<S2SV_blank>IDLE:<S2SV_blank>" MSG_MISSING_ARG ) ; //<S2SV> } else { //<S2SV> unsigned long int i = 0 ; //<S2SV> i = strtoul ( sitearg , & sitearg , 10 ) ; //<S2SV> if ( sitearg && * sitearg ) //<S2SV> addreply ( 501 , MSG_GARBAGE_FOUND "<S2SV_blank>:<S2SV_blank>%s" , sitearg ) ; //<S2SV> else if ( i > MAX_SITE_IDLE ) //<S2SV> addreply_noformat ( 501 , MSG_VALUE_TOO_LARGE ) ; //<S2SV> else { //<S2SV> idletime = i ; //<S2SV> addreply ( 200 , MSG_IDLE_TIME , idletime ) ; //<S2SV> idletime_noop = ( double ) idletime * 2.0 ; //<S2SV> } //<S2SV> } //<S2SV> } else if ( ! strcasecmp ( arg , "time" ) ) { //<S2SV> dositetime ( ) ; //<S2SV> } else if ( ! strcasecmp ( arg , "help" ) ) { //<S2SV> help_site : //<S2SV> addreply_noformat ( 214 , MSG_SITE_HELP CRLF //<S2SV> # ifdef WITH_DIRALIASES //<S2SV> "<S2SV_blank>ALIAS" CRLF //<S2SV> # endif //<S2SV> "<S2SV_blank>CHMOD" CRLF "<S2SV_blank>IDLE" CRLF "<S2SV_blank>UTIME" ) ; //<S2SV> addreply_noformat ( 214 , "Pure-FTPd<S2SV_blank>-<S2SV_blank>http://pureftpd.org/" ) ; //<S2SV> } else if ( ! strcasecmp ( arg , "chmod" ) ) { //<S2SV> char * sitearg2 ; //<S2SV> mode_t mode ; //<S2SV> parsechmod : //<S2SV> if ( sitearg == NULL || * sitearg == 0 ) { //<S2SV> addreply_noformat ( 501 , MSG_MISSING_ARG ) ; //<S2SV> goto chmod_wayout ; //<S2SV> } //<S2SV> sitearg2 = sitearg ; //<S2SV> while ( * sitearg2 != 0 && ! isspace ( ( unsigned char ) * sitearg2 ) ) { //<S2SV> sitearg2 ++ ; //<S2SV> } //<S2SV> while ( * sitearg2 != 0 && isspace ( ( unsigned char ) * sitearg2 ) ) { //<S2SV> sitearg2 ++ ; //<S2SV> } //<S2SV> if ( * sitearg2 == 0 ) { //<S2SV> addreply_noformat ( 550 , MSG_NO_FILE_NAME ) ; //<S2SV> goto chmod_wayout ; //<S2SV> } //<S2SV> mode = ( mode_t ) strtoul ( sitearg , NULL , 8 ) ; //<S2SV> if ( mode > ( mode_t ) 07777 ) { //<S2SV> addreply_noformat ( 501 , MSG_BAD_CHMOD ) ; //<S2SV> goto chmod_wayout ; //<S2SV> } //<S2SV> dochmod ( sitearg2 , mode ) ; //<S2SV> chmod_wayout : //<S2SV> ( void ) 0 ; //<S2SV> } else if ( ! strcasecmp ( arg , "utime" ) ) { //<S2SV> char * sitearg2 ; //<S2SV> if ( sitearg == NULL || * sitearg == 0 ) { //<S2SV> addreply_noformat ( 501 , MSG_NO_FILE_NAME ) ; //<S2SV> goto utime_wayout ; //<S2SV> } //<S2SV> if ( ( sitearg2 = strrchr ( sitearg , '<S2SV_blank>' ) ) == NULL || //<S2SV> sitearg2 == sitearg ) { //<S2SV> addreply_noformat ( 501 , MSG_MISSING_ARG ) ; //<S2SV> goto utime_wayout ; //<S2SV> } //<S2SV> if ( strcasecmp ( sitearg2 , "<S2SV_blank>UTC" ) != 0 ) { //<S2SV> addreply_noformat ( 500 , "UTC<S2SV_blank>Only" ) ; //<S2SV> goto utime_wayout ; //<S2SV> } //<S2SV> * sitearg2 -- = 0 ; //<S2SV> if ( ( sitearg2 = strrchr ( sitearg , '<S2SV_blank>' ) ) == NULL || //<S2SV> sitearg2 == sitearg ) { //<S2SV> utime_no_arg : //<S2SV> addreply_noformat ( 501 , MSG_MISSING_ARG ) ; //<S2SV> goto utime_wayout ; //<S2SV> } //<S2SV> * sitearg2 -- = 0 ; //<S2SV> if ( ( sitearg2 = strrchr ( sitearg , '<S2SV_blank>' ) ) == NULL || //<S2SV> sitearg2 == sitearg ) { //<S2SV> goto utime_no_arg ; //<S2SV> } //<S2SV> * sitearg2 -- = 0 ; //<S2SV> if ( ( sitearg2 = strrchr ( sitearg , '<S2SV_blank>' ) ) == NULL || //<S2SV> sitearg2 == sitearg ) { //<S2SV> goto utime_no_arg ; //<S2SV> } //<S2SV> * sitearg2 ++ = 0 ; //<S2SV> if ( * sitearg2 == 0 ) { //<S2SV> goto utime_no_arg ; //<S2SV> } //<S2SV> doutime ( sitearg , sitearg2 ) ; //<S2SV> utime_wayout : //<S2SV> ( void ) 0 ; //<S2SV> # ifdef WITH_DIRALIASES //<S2SV> } else if ( ! strcasecmp ( arg , "alias" ) ) { //<S2SV> if ( sitearg == NULL || * sitearg == 0 ) { //<S2SV> print_aliases ( ) ; //<S2SV> } else { //<S2SV> const char * alias ; //<S2SV> if ( ( alias = lookup_alias ( sitearg ) ) != NULL ) { //<S2SV> addreply ( 214 , MSG_ALIASES_ALIAS , sitearg , alias ) ; //<S2SV> } else { //<S2SV> addreply ( 502 , MSG_ALIASES_UNKNOWN , sitearg ) ; //<S2SV> } //<S2SV> } //<S2SV> # endif //<S2SV> } else if ( * arg != 0 ) { //<S2SV> addreply ( 500 , "SITE<S2SV_blank>%s<S2SV_blank>" MSG_UNKNOWN_EXTENSION , arg ) ; //<S2SV> } else { //<S2SV> addreply_noformat ( 500 , "SITE:<S2SV_blank>" MSG_MISSING_ARG ) ; //<S2SV> } //<S2SV> # endif //<S2SV> } else if ( ! strcmp ( cmd , "mdtm" ) ) { //<S2SV> domdtm ( arg ) ; //<S2SV> } else if ( ! strcmp ( cmd , "size" ) ) { //<S2SV> dosize ( arg ) ; //<S2SV> # ifndef MINIMAL //<S2SV> } else if ( ! strcmp ( cmd , "chmod" ) ) { //<S2SV> sitearg = arg ; //<S2SV> goto parsechmod ; //<S2SV> # endif //<S2SV> } else if ( ! strcmp ( cmd , "rnfr" ) ) { //<S2SV> if ( * arg != 0 ) { //<S2SV> dornfr ( arg ) ; //<S2SV> } else { //<S2SV> addreply_noformat ( 550 , MSG_NO_FILE_NAME ) ; //<S2SV> } //<S2SV> } else if ( ! strcmp ( cmd , "rnto" ) ) { //<S2SV> arg = revealextraspc ( arg ) ; //<S2SV> if ( * arg != 0 ) { //<S2SV> dornto ( arg ) ; //<S2SV> } else { //<S2SV> addreply_noformat ( 550 , MSG_NO_FILE_NAME ) ; //<S2SV> } //<S2SV> } else { //<S2SV> addreply_noformat ( 500 , MSG_UNKNOWN_COMMAND ) ; //<S2SV> } //<S2SV> } //<S2SV> noopidle = ( time_t ) - 1 ; //<S2SV> wayout : //<S2SV> # ifdef WITH_RFC2640 //<S2SV> free ( narg ) ; //<S2SV> narg = NULL ; //<S2SV> # endif //<S2SV> # ifdef THROTTLING //<S2SV> if ( throttling_delay != 0UL ) { //<S2SV> usleep2 ( throttling_delay ) ; //<S2SV> } //<S2SV> # else //<S2SV> ( void ) 0 ; //<S2SV> # endif //<S2SV> } //<S2SV> } //<S2SV> 