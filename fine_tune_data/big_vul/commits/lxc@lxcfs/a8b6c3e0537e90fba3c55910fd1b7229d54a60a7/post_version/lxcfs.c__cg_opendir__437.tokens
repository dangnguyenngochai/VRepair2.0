static int cg_opendir ( const char * path , struct fuse_file_info * fi ) //<S2SV> { //<S2SV> struct fuse_context * fc = fuse_get_context ( ) ; //<S2SV> const char * cgroup ; //<S2SV> struct file_info * dir_info ; //<S2SV> char * controller = NULL ; //<S2SV> if ( ! fc ) //<S2SV> return - EIO ; //<S2SV> if ( strcmp ( path , "/cgroup" ) == 0 ) { //<S2SV> cgroup = NULL ; //<S2SV> controller = NULL ; //<S2SV> } else { //<S2SV> controller = pick_controller_from_path ( fc , path ) ; //<S2SV> if ( ! controller ) //<S2SV> return - EIO ; //<S2SV> cgroup = find_cgroup_in_path ( path ) ; //<S2SV> if ( ! cgroup ) { //<S2SV> cgroup = "/" ; //<S2SV> } //<S2SV> } //<S2SV> if ( cgroup ) { //<S2SV> if ( ! caller_may_see_dir ( fc -> pid , controller , cgroup ) ) //<S2SV> return - ENOENT ; //<S2SV> if ( ! fc_may_access ( fc , controller , cgroup , NULL , O_RDONLY ) ) //<S2SV> return - EACCES ; //<S2SV> } //<S2SV> dir_info = malloc ( sizeof ( * dir_info ) ) ; //<S2SV> if ( ! dir_info ) //<S2SV> return - ENOMEM ; //<S2SV> dir_info -> controller = must_copy_string ( controller ) ; //<S2SV> dir_info -> cgroup = must_copy_string ( cgroup ) ; //<S2SV> dir_info -> type = LXC_TYPE_CGDIR ; //<S2SV> dir_info -> buf = NULL ; //<S2SV> dir_info -> file = NULL ; //<S2SV> dir_info -> buflen = 0 ; //<S2SV> fi -> fh = ( unsigned long ) dir_info ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 