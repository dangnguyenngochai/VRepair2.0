static void WritePixels ( struct ngiflib_img * i , struct ngiflib_decode_context * context , const u8 * pixels , u16 n ) { //<S2SV> u16 tocopy ; //<S2SV> struct ngiflib_gif * p = i -> parent ; //<S2SV> while ( n > 0 ) { //<S2SV> tocopy = ( context -> Xtogo < n ) ? context -> Xtogo : n ; //<S2SV> if ( ! i -> gce . transparent_flag ) { //<S2SV> # ifndef NGIFLIB_INDEXED_ONLY //<S2SV> if ( p -> mode & NGIFLIB_MODE_INDEXED ) { //<S2SV> # endif //<S2SV> ngiflib_memcpy ( context -> frbuff_p . p8 , pixels , tocopy ) ; //<S2SV> pixels += tocopy ; //<S2SV> context -> frbuff_p . p8 += tocopy ; //<S2SV> # ifndef NGIFLIB_INDEXED_ONLY //<S2SV> } else { //<S2SV> int j ; //<S2SV> for ( j = ( int ) tocopy ; j > 0 ; j -- ) { //<S2SV> * ( context -> frbuff_p . p32 ++ ) = //<S2SV> GifIndexToTrueColor ( i -> palette , * pixels ++ ) ; //<S2SV> } //<S2SV> } //<S2SV> # endif //<S2SV> } else { //<S2SV> int j ; //<S2SV> # ifndef NGIFLIB_INDEXED_ONLY //<S2SV> if ( p -> mode & NGIFLIB_MODE_INDEXED ) { //<S2SV> # endif //<S2SV> for ( j = ( int ) tocopy ; j > 0 ; j -- ) { //<S2SV> if ( * pixels != i -> gce . transparent_color ) * context -> frbuff_p . p8 = * pixels ; //<S2SV> pixels ++ ; //<S2SV> context -> frbuff_p . p8 ++ ; //<S2SV> } //<S2SV> # ifndef NGIFLIB_INDEXED_ONLY //<S2SV> } else { //<S2SV> for ( j = ( int ) tocopy ; j > 0 ; j -- ) { //<S2SV> if ( * pixels != i -> gce . transparent_color ) { //<S2SV> * context -> frbuff_p . p32 = GifIndexToTrueColor ( i -> palette , * pixels ) ; //<S2SV> } //<S2SV> pixels ++ ; //<S2SV> context -> frbuff_p . p32 ++ ; //<S2SV> } //<S2SV> } //<S2SV> # endif //<S2SV> } //<S2SV> context -> Xtogo -= tocopy ; //<S2SV> if ( context -> Xtogo == 0 ) { //<S2SV> # ifdef NGIFLIB_ENABLE_CALLBACKS //<S2SV> if ( p -> line_cb ) p -> line_cb ( p , context -> line_p , context -> curY ) ; //<S2SV> # endif //<S2SV> context -> Xtogo = i -> width ; //<S2SV> switch ( context -> pass ) { //<S2SV> case 0 : //<S2SV> context -> curY ++ ; //<S2SV> break ; //<S2SV> case 1 : //<S2SV> context -> curY += 8 ; //<S2SV> if ( context -> curY >= p -> height ) { //<S2SV> context -> pass ++ ; //<S2SV> context -> curY = i -> posY + 4 ; //<S2SV> } //<S2SV> break ; //<S2SV> case 2 : //<S2SV> context -> curY += 8 ; //<S2SV> if ( context -> curY >= p -> height ) { //<S2SV> context -> pass ++ ; //<S2SV> context -> curY = i -> posY + 2 ; //<S2SV> } //<S2SV> break ; //<S2SV> case 3 : //<S2SV> context -> curY += 4 ; //<S2SV> if ( context -> curY >= p -> height ) { //<S2SV> context -> pass ++ ; //<S2SV> context -> curY = i -> posY + 1 ; //<S2SV> } //<S2SV> break ; //<S2SV> case 4 : //<S2SV> context -> curY += 2 ; //<S2SV> break ; //<S2SV> } //<S2SV> # ifndef NGIFLIB_INDEXED_ONLY //<S2SV> if ( p -> mode & NGIFLIB_MODE_INDEXED ) { //<S2SV> # endif //<S2SV> # ifdef NGIFLIB_ENABLE_CALLBACKS //<S2SV> context -> line_p . p8 = p -> frbuff . p8 + ( u32 ) context -> curY * p -> width ; //<S2SV> context -> frbuff_p . p8 = context -> line_p . p8 + i -> posX ; //<S2SV> # else //<S2SV> context -> frbuff_p . p8 = p -> frbuff . p8 + ( u32 ) context -> curY * p -> width + i -> posX ; //<S2SV> # endif //<S2SV> # ifndef NGIFLIB_INDEXED_ONLY //<S2SV> } else { //<S2SV> # ifdef NGIFLIB_ENABLE_CALLBACKS //<S2SV> context -> line_p . p32 = p -> frbuff . p32 + ( u32 ) context -> curY * p -> width ; //<S2SV> context -> frbuff_p . p32 = context -> line_p . p32 + i -> posX ; //<S2SV> # else //<S2SV> context -> frbuff_p . p32 = p -> frbuff . p32 + ( u32 ) context -> curY * p -> width + i -> posX ; //<S2SV> # endif //<S2SV> } //<S2SV> # endif //<S2SV> } //<S2SV> n -= tocopy ; //<S2SV> } //<S2SV> } //<S2SV> 