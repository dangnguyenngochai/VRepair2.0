int main ( int argc , char * argv [ ] ) //<S2SV> { //<S2SV> int ret_value = 0 ; //<S2SV> libettercap_init ( ) ; //<S2SV> ef_globals_alloc ( ) ; //<S2SV> select_text_interface ( ) ; //<S2SV> libettercap_ui_init ( ) ; //<S2SV> fprintf ( stdout , "\\n" EC_COLOR_BOLD "%s<S2SV_blank>%s" EC_COLOR_END "<S2SV_blank>copyright<S2SV_blank>%s<S2SV_blank>%s\\n\\n" , //<S2SV> PROGRAM , EC_VERSION , EC_COPYRIGHT , EC_AUTHORS ) ; //<S2SV> EF_GBL -> lineno = 1 ; //<S2SV> parse_options ( argc , argv ) ; //<S2SV> if ( EF_GBL_OPTIONS -> source_file ) { //<S2SV> yyin = fopen ( EF_GBL_OPTIONS -> source_file , "r" ) ; //<S2SV> if ( yyin == NULL ) //<S2SV> FATAL_ERROR ( "Input<S2SV_blank>file<S2SV_blank>not<S2SV_blank>found<S2SV_blank>!" ) ; //<S2SV> } else { //<S2SV> FATAL_ERROR ( "No<S2SV_blank>source<S2SV_blank>file." ) ; //<S2SV> } //<S2SV> setbuf ( yyin , NULL ) ; //<S2SV> setbuf ( stdout , NULL ) ; //<S2SV> setbuf ( stderr , NULL ) ; //<S2SV> load_tables ( ) ; //<S2SV> load_constants ( ) ; //<S2SV> fprintf ( stdout , "\\n<S2SV_blank>Parsing<S2SV_blank>source<S2SV_blank>file<S2SV_blank>\\\'%s\\\'<S2SV_blank>" , EF_GBL_OPTIONS -> source_file ) ; //<S2SV> fflush ( stdout ) ; //<S2SV> ef_debug ( 1 , "\\n" ) ; //<S2SV> if ( yyparse ( ) == 0 ) //<S2SV> fprintf ( stdout , "<S2SV_blank>done.\\n\\n" ) ; //<S2SV> else //<S2SV> fprintf ( stdout , "\\n\\nThe<S2SV_blank>script<S2SV_blank>contains<S2SV_blank>errors...\\n\\n" ) ; //<S2SV> ret_value = write_output ( ) ; //<S2SV> if ( ret_value == - E_NOTHANDLED ) //<S2SV> FATAL_ERROR ( "Cannot<S2SV_blank>write<S2SV_blank>output<S2SV_blank>file<S2SV_blank>(%s):<S2SV_blank>the<S2SV_blank>filter<S2SV_blank>is<S2SV_blank>not<S2SV_blank>correctly<S2SV_blank>handled." , EF_GBL_OPTIONS -> output_file ) ; //<S2SV> else if ( ret_value == - E_INVALID ) //<S2SV> FATAL_ERROR ( "Cannot<S2SV_blank>write<S2SV_blank>output<S2SV_blank>file<S2SV_blank>(%s):<S2SV_blank>the<S2SV_blank>filter<S2SV_blank>format<S2SV_blank>is<S2SV_blank>not<S2SV_blank>correct.<S2SV_blank>" , EF_GBL_OPTIONS -> output_file ) ; //<S2SV> ef_globals_free ( ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 