static OM_uint32 //<S2SV> acc_ctx_cont ( OM_uint32 * minstat , //<S2SV> gss_buffer_t buf , //<S2SV> gss_ctx_id_t * ctx , //<S2SV> gss_buffer_t * responseToken , //<S2SV> gss_buffer_t * mechListMIC , //<S2SV> OM_uint32 * negState , //<S2SV> send_token_flag * return_token ) //<S2SV> { //<S2SV> OM_uint32 ret , tmpmin ; //<S2SV> gss_OID supportedMech ; //<S2SV> spnego_gss_ctx_id_t sc ; //<S2SV> unsigned int len ; //<S2SV> unsigned char * ptr , * bufstart ; //<S2SV> sc = ( spnego_gss_ctx_id_t ) * ctx ; //<S2SV> ret = GSS_S_DEFECTIVE_TOKEN ; //<S2SV> * negState = REJECT ; //<S2SV> * minstat = 0 ; //<S2SV> supportedMech = GSS_C_NO_OID ; //<S2SV> * return_token = ERROR_TOKEN_SEND ; //<S2SV> * responseToken = * mechListMIC = GSS_C_NO_BUFFER ; //<S2SV> ptr = bufstart = buf -> value ; //<S2SV> # define REMAIN ( buf -> length - ( ptr - bufstart ) ) //<S2SV> if ( REMAIN == 0 || REMAIN > INT_MAX ) //<S2SV> return GSS_S_DEFECTIVE_TOKEN ; //<S2SV> if ( * ptr == HEADER_ID ) { //<S2SV> ret = g_verify_token_header ( gss_mech_spnego , //<S2SV> & len , & ptr , 0 , REMAIN ) ; //<S2SV> if ( ret ) { //<S2SV> * minstat = ret ; //<S2SV> return GSS_S_DEFECTIVE_TOKEN ; //<S2SV> } //<S2SV> } //<S2SV> if ( * ptr != ( CONTEXT | 0x01 ) ) { //<S2SV> return GSS_S_DEFECTIVE_TOKEN ; //<S2SV> } //<S2SV> ret = get_negTokenResp ( minstat , ptr , REMAIN , //<S2SV> negState , & supportedMech , //<S2SV> responseToken , mechListMIC ) ; //<S2SV> if ( ret != GSS_S_COMPLETE ) //<S2SV> goto cleanup ; //<S2SV> if ( * responseToken == GSS_C_NO_BUFFER && //<S2SV> * mechListMIC == GSS_C_NO_BUFFER ) { //<S2SV> ret = GSS_S_DEFECTIVE_TOKEN ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> if ( supportedMech != GSS_C_NO_OID ) { //<S2SV> ret = GSS_S_DEFECTIVE_TOKEN ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> sc -> firstpass = 0 ; //<S2SV> * negState = ACCEPT_INCOMPLETE ; //<S2SV> * return_token = CONT_TOKEN_SEND ; //<S2SV> cleanup : //<S2SV> if ( supportedMech != GSS_C_NO_OID ) { //<S2SV> generic_gss_release_oid ( & tmpmin , & supportedMech ) ; //<S2SV> } //<S2SV> return ret ; //<S2SV> # undef REMAIN //<S2SV> } //<S2SV> 