static krb5_error_code //<S2SV> find_alternate_tgs ( kdc_realm_t * kdc_active_realm , krb5_principal princ , //<S2SV> krb5_db_entry * * server_ptr , const char * * status ) //<S2SV> { //<S2SV> krb5_error_code retval ; //<S2SV> krb5_principal * plist = NULL , * pl2 ; //<S2SV> krb5_data tmp ; //<S2SV> krb5_db_entry * server = NULL ; //<S2SV> * server_ptr = NULL ; //<S2SV> assert ( is_cross_tgs_principal ( princ ) ) ; //<S2SV> if ( ( retval = krb5_walk_realm_tree ( kdc_context , //<S2SV> krb5_princ_realm ( kdc_context , princ ) , //<S2SV> krb5_princ_component ( kdc_context , princ , 1 ) , //<S2SV> & plist , KRB5_REALM_BRANCH_CHAR ) ) ) { //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> for ( pl2 = plist ; * pl2 ; pl2 ++ ) ; //<S2SV> while ( -- pl2 > plist ) { //<S2SV> tmp = * krb5_princ_realm ( kdc_context , * pl2 ) ; //<S2SV> krb5_princ_set_realm ( kdc_context , * pl2 , //<S2SV> krb5_princ_realm ( kdc_context , tgs_server ) ) ; //<S2SV> retval = db_get_svc_princ ( kdc_context , * pl2 , 0 , & server , status ) ; //<S2SV> krb5_princ_set_realm ( kdc_context , * pl2 , & tmp ) ; //<S2SV> if ( retval == KRB5_KDB_NOENTRY ) //<S2SV> continue ; //<S2SV> else if ( retval ) //<S2SV> goto cleanup ; //<S2SV> log_tgs_alt_tgt ( kdc_context , server -> princ ) ; //<S2SV> * server_ptr = server ; //<S2SV> server = NULL ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> cleanup : //<S2SV> if ( retval != 0 ) //<S2SV> * status = "UNKNOWN_SERVER" ; //<S2SV> krb5_free_realm_tree ( kdc_context , plist ) ; //<S2SV> krb5_db_free_principal ( kdc_context , server ) ; //<S2SV> return retval ; //<S2SV> } //<S2SV> 