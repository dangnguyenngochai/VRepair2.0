static krb5_error_code //<S2SV> s4u_identify_user ( krb5_context context , //<S2SV> krb5_creds * in_creds , //<S2SV> krb5_data * subject_cert , //<S2SV> krb5_principal * canon_user ) //<S2SV> { //<S2SV> krb5_error_code code ; //<S2SV> krb5_preauthtype ptypes [ 1 ] = { KRB5_PADATA_S4U_X509_USER } ; //<S2SV> krb5_creds creds ; //<S2SV> int use_master = 0 ; //<S2SV> krb5_get_init_creds_opt * opts = NULL ; //<S2SV> krb5_principal_data client ; //<S2SV> krb5_s4u_userid userid ; //<S2SV> * canon_user = NULL ; //<S2SV> if ( in_creds -> client == NULL && subject_cert == NULL ) { //<S2SV> return EINVAL ; //<S2SV> } //<S2SV> if ( in_creds -> client != NULL && //<S2SV> in_creds -> client -> type != KRB5_NT_ENTERPRISE_PRINCIPAL ) { //<S2SV> int anonymous ; //<S2SV> anonymous = krb5_principal_compare ( context , in_creds -> client , //<S2SV> krb5_anonymous_principal ( ) ) ; //<S2SV> return krb5_copy_principal ( context , //<S2SV> anonymous ? in_creds -> server //<S2SV> : in_creds -> client , //<S2SV> canon_user ) ; //<S2SV> } //<S2SV> memset ( & creds , 0 , sizeof ( creds ) ) ; //<S2SV> memset ( & userid , 0 , sizeof ( userid ) ) ; //<S2SV> if ( subject_cert != NULL ) //<S2SV> userid . subject_cert = * subject_cert ; //<S2SV> code = krb5_get_init_creds_opt_alloc ( context , & opts ) ; //<S2SV> if ( code != 0 ) //<S2SV> goto cleanup ; //<S2SV> krb5_get_init_creds_opt_set_tkt_life ( opts , 15 ) ; //<S2SV> krb5_get_init_creds_opt_set_renew_life ( opts , 0 ) ; //<S2SV> krb5_get_init_creds_opt_set_forwardable ( opts , 0 ) ; //<S2SV> krb5_get_init_creds_opt_set_proxiable ( opts , 0 ) ; //<S2SV> krb5_get_init_creds_opt_set_canonicalize ( opts , 1 ) ; //<S2SV> krb5_get_init_creds_opt_set_preauth_list ( opts , ptypes , 1 ) ; //<S2SV> if ( in_creds -> client != NULL ) { //<S2SV> client = * in_creds -> client ; //<S2SV> client . realm = in_creds -> server -> realm ; //<S2SV> } else { //<S2SV> client . magic = KV5M_PRINCIPAL ; //<S2SV> client . realm = in_creds -> server -> realm ; //<S2SV> client . data = NULL ; //<S2SV> client . length = 0 ; //<S2SV> client . type = KRB5_NT_ENTERPRISE_PRINCIPAL ; //<S2SV> } //<S2SV> code = k5_get_init_creds ( context , & creds , & client , NULL , NULL , 0 , NULL , //<S2SV> opts , krb5_get_as_key_noop , & userid , & use_master , //<S2SV> NULL ) ; //<S2SV> if ( code == 0 || code == KRB5_PREAUTH_FAILED ) { //<S2SV> * canon_user = userid . user ; //<S2SV> userid . user = NULL ; //<S2SV> code = 0 ; //<S2SV> } //<S2SV> cleanup : //<S2SV> krb5_free_cred_contents ( context , & creds ) ; //<S2SV> if ( opts != NULL ) //<S2SV> krb5_get_init_creds_opt_free ( context , opts ) ; //<S2SV> if ( userid . user != NULL ) //<S2SV> krb5_free_principal ( context , userid . user ) ; //<S2SV> return code ; //<S2SV> } //<S2SV> 