static krb5_error_code //<S2SV> recvauth_common ( krb5_context context , //<S2SV> krb5_auth_context * auth_context , //<S2SV> krb5_pointer fd , //<S2SV> char * appl_version , //<S2SV> krb5_principal server , //<S2SV> krb5_int32 flags , //<S2SV> krb5_keytab keytab , //<S2SV> krb5_ticket * * ticket , //<S2SV> krb5_data * version ) //<S2SV> { //<S2SV> krb5_auth_context new_auth_context ; //<S2SV> krb5_flags ap_option = 0 ; //<S2SV> krb5_error_code retval , problem ; //<S2SV> krb5_data inbuf ; //<S2SV> krb5_data outbuf ; //<S2SV> krb5_rcache rcache = 0 ; //<S2SV> krb5_octet response ; //<S2SV> krb5_data null_server ; //<S2SV> krb5_data d ; //<S2SV> int need_error_free = 0 ; //<S2SV> int local_rcache = 0 , local_authcon = 0 ; //<S2SV> problem = 0 ; //<S2SV> response = 0 ; //<S2SV> if ( ! ( flags & KRB5_RECVAUTH_SKIP_VERSION ) ) { //<S2SV> if ( ( retval = krb5_read_message ( context , fd , & inbuf ) ) ) //<S2SV> return ( retval ) ; //<S2SV> d = make_data ( ( char * ) sendauth_version , strlen ( sendauth_version ) + 1 ) ; //<S2SV> if ( ! data_eq ( inbuf , d ) ) { //<S2SV> problem = KRB5_SENDAUTH_BADAUTHVERS ; //<S2SV> response = 1 ; //<S2SV> } //<S2SV> free ( inbuf . data ) ; //<S2SV> } //<S2SV> if ( flags & KRB5_RECVAUTH_BADAUTHVERS ) { //<S2SV> problem = KRB5_SENDAUTH_BADAUTHVERS ; //<S2SV> response = 1 ; //<S2SV> } //<S2SV> if ( ( retval = krb5_read_message ( context , fd , & inbuf ) ) ) //<S2SV> return ( retval ) ; //<S2SV> if ( appl_version != NULL && ! problem ) { //<S2SV> d = make_data ( appl_version , strlen ( appl_version ) + 1 ) ; //<S2SV> if ( ! data_eq ( inbuf , d ) ) { //<S2SV> problem = KRB5_SENDAUTH_BADAPPLVERS ; //<S2SV> response = 2 ; //<S2SV> } //<S2SV> } //<S2SV> if ( version && ! problem ) //<S2SV> * version = inbuf ; //<S2SV> else //<S2SV> free ( inbuf . data ) ; //<S2SV> if ( ( krb5_net_write ( context , * ( ( int * ) fd ) , ( char * ) & response , 1 ) ) < 0 ) { //<S2SV> return ( problem ) ; //<S2SV> } //<S2SV> if ( problem ) //<S2SV> return ( problem ) ; //<S2SV> if ( ( retval = krb5_read_message ( context , fd , & inbuf ) ) ) //<S2SV> return retval ; //<S2SV> if ( * auth_context == NULL ) { //<S2SV> problem = krb5_auth_con_init ( context , & new_auth_context ) ; //<S2SV> * auth_context = new_auth_context ; //<S2SV> local_authcon = 1 ; //<S2SV> } //<S2SV> krb5_auth_con_getrcache ( context , * auth_context , & rcache ) ; //<S2SV> if ( ( ! problem ) && rcache == NULL ) { //<S2SV> if ( server != NULL && server -> length > 0 ) { //<S2SV> problem = krb5_get_server_rcache ( context , & server -> data [ 0 ] , //<S2SV> & rcache ) ; //<S2SV> } else { //<S2SV> null_server . length = 7 ; //<S2SV> null_server . data = "default" ; //<S2SV> problem = krb5_get_server_rcache ( context , & null_server , & rcache ) ; //<S2SV> } //<S2SV> if ( ! problem ) //<S2SV> problem = krb5_auth_con_setrcache ( context , * auth_context , rcache ) ; //<S2SV> local_rcache = 1 ; //<S2SV> } //<S2SV> if ( ! problem ) { //<S2SV> problem = krb5_rd_req ( context , auth_context , & inbuf , server , //<S2SV> keytab , & ap_option , ticket ) ; //<S2SV> free ( inbuf . data ) ; //<S2SV> } //<S2SV> if ( problem ) { //<S2SV> krb5_error error ; //<S2SV> const char * message ; //<S2SV> memset ( & error , 0 , sizeof ( error ) ) ; //<S2SV> krb5_us_timeofday ( context , & error . stime , & error . susec ) ; //<S2SV> if ( server ) //<S2SV> error . server = server ; //<S2SV> else { //<S2SV> ( void ) krb5_parse_name ( context , "????" , & error . server ) ; //<S2SV> need_error_free = 1 ; //<S2SV> } //<S2SV> error . error = problem - ERROR_TABLE_BASE_krb5 ; //<S2SV> if ( error . error > 127 ) //<S2SV> error . error = KRB_ERR_GENERIC ; //<S2SV> message = error_message ( problem ) ; //<S2SV> error . text . length = strlen ( message ) + 1 ; //<S2SV> error . text . data = strdup ( message ) ; //<S2SV> if ( ! error . text . data ) { //<S2SV> retval = ENOMEM ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> if ( ( retval = krb5_mk_error ( context , & error , & outbuf ) ) ) { //<S2SV> free ( error . text . data ) ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> free ( error . text . data ) ; //<S2SV> if ( need_error_free ) //<S2SV> krb5_free_principal ( context , error . server ) ; //<S2SV> } else { //<S2SV> outbuf . length = 0 ; //<S2SV> outbuf . data = 0 ; //<S2SV> } //<S2SV> retval = krb5_write_message ( context , fd , & outbuf ) ; //<S2SV> if ( outbuf . data ) { //<S2SV> free ( outbuf . data ) ; //<S2SV> retval = problem ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> if ( retval ) //<S2SV> goto cleanup ; //<S2SV> if ( ( ap_option & AP_OPTS_MUTUAL_REQUIRED ) ) { //<S2SV> if ( ( retval = krb5_mk_rep ( context , * auth_context , & outbuf ) ) ) { //<S2SV> return ( retval ) ; //<S2SV> } //<S2SV> retval = krb5_write_message ( context , fd , & outbuf ) ; //<S2SV> free ( outbuf . data ) ; //<S2SV> } //<S2SV> cleanup : ; //<S2SV> if ( retval ) { //<S2SV> if ( local_authcon ) { //<S2SV> krb5_auth_con_free ( context , * auth_context ) ; //<S2SV> } else if ( local_rcache && rcache != NULL ) { //<S2SV> krb5_rc_close ( context , rcache ) ; //<S2SV> krb5_auth_con_setrcache ( context , * auth_context , NULL ) ; //<S2SV> } //<S2SV> } //<S2SV> return retval ; //<S2SV> } //<S2SV> 