int main ( argc , argv ) //<S2SV> int argc ; //<S2SV> char * argv [ ] ; //<S2SV> { //<S2SV> krb5_data pname_data , tkt_data ; //<S2SV> int sock = 0 ; //<S2SV> socklen_t l ; //<S2SV> int retval ; //<S2SV> struct sockaddr_in l_inaddr , f_inaddr ; //<S2SV> krb5_creds creds , * new_creds ; //<S2SV> krb5_ccache cc ; //<S2SV> krb5_data msgtext , msg ; //<S2SV> krb5_context context ; //<S2SV> krb5_auth_context auth_context = NULL ; //<S2SV> # ifndef DEBUG //<S2SV> freopen ( "/tmp/uu-server.log" , "w" , stderr ) ; //<S2SV> # endif //<S2SV> retval = krb5_init_context ( & context ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( argv [ 0 ] , retval , "while<S2SV_blank>initializing<S2SV_blank>krb5" ) ; //<S2SV> exit ( 1 ) ; //<S2SV> } //<S2SV> # ifdef DEBUG //<S2SV> { //<S2SV> int one = 1 ; //<S2SV> int acc ; //<S2SV> struct servent * sp ; //<S2SV> socklen_t namelen = sizeof ( f_inaddr ) ; //<S2SV> if ( ( sock = socket ( PF_INET , SOCK_STREAM , 0 ) ) < 0 ) { //<S2SV> com_err ( "uu-server" , errno , "creating<S2SV_blank>socket" ) ; //<S2SV> exit ( 3 ) ; //<S2SV> } //<S2SV> l_inaddr . sin_family = AF_INET ; //<S2SV> l_inaddr . sin_addr . s_addr = 0 ; //<S2SV> if ( argc == 2 ) { //<S2SV> l_inaddr . sin_port = htons ( atoi ( argv [ 1 ] ) ) ; //<S2SV> } else { //<S2SV> if ( ! ( sp = getservbyname ( "uu-sample" , "tcp" ) ) ) { //<S2SV> com_err ( "uu-server" , 0 , "can\'t<S2SV_blank>find<S2SV_blank>uu-sample/tcp<S2SV_blank>service" ) ; //<S2SV> exit ( 3 ) ; //<S2SV> } //<S2SV> l_inaddr . sin_port = sp -> s_port ; //<S2SV> } //<S2SV> ( void ) setsockopt ( sock , SOL_SOCKET , SO_REUSEADDR , ( char * ) & one , sizeof ( one ) ) ; //<S2SV> if ( bind ( sock , ( struct sockaddr * ) & l_inaddr , sizeof ( l_inaddr ) ) ) { //<S2SV> com_err ( "uu-server" , errno , "binding<S2SV_blank>socket" ) ; //<S2SV> exit ( 3 ) ; //<S2SV> } //<S2SV> if ( listen ( sock , 1 ) == - 1 ) { //<S2SV> com_err ( "uu-server" , errno , "listening" ) ; //<S2SV> exit ( 3 ) ; //<S2SV> } //<S2SV> printf ( "Server<S2SV_blank>started\\n" ) ; //<S2SV> fflush ( stdout ) ; //<S2SV> if ( ( acc = accept ( sock , ( struct sockaddr * ) & f_inaddr , & namelen ) ) == - 1 ) { //<S2SV> com_err ( "uu-server" , errno , "accepting" ) ; //<S2SV> exit ( 3 ) ; //<S2SV> } //<S2SV> dup2 ( acc , 0 ) ; //<S2SV> close ( sock ) ; //<S2SV> sock = 0 ; //<S2SV> } //<S2SV> # endif //<S2SV> retval = krb5_read_message ( context , ( krb5_pointer ) & sock , & pname_data ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-server" , retval , "reading<S2SV_blank>pname" ) ; //<S2SV> return 2 ; //<S2SV> } //<S2SV> retval = krb5_read_message ( context , ( krb5_pointer ) & sock , & tkt_data ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-server" , retval , "reading<S2SV_blank>ticket<S2SV_blank>data" ) ; //<S2SV> return 2 ; //<S2SV> } //<S2SV> retval = krb5_cc_default ( context , & cc ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-server" , retval , "getting<S2SV_blank>credentials<S2SV_blank>cache" ) ; //<S2SV> return 4 ; //<S2SV> } //<S2SV> memset ( & creds , 0 , sizeof ( creds ) ) ; //<S2SV> retval = krb5_cc_get_principal ( context , cc , & creds . client ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-client" , retval , "getting<S2SV_blank>principal<S2SV_blank>name" ) ; //<S2SV> return 6 ; //<S2SV> } //<S2SV> printf ( "uu-server:<S2SV_blank>client<S2SV_blank>principal<S2SV_blank>is<S2SV_blank>\\"%s\\".\\n" , pname_data . data ) ; //<S2SV> retval = krb5_parse_name ( context , pname_data . data , & creds . server ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-server" , retval , "parsing<S2SV_blank>client<S2SV_blank>name" ) ; //<S2SV> return 3 ; //<S2SV> } //<S2SV> creds . second_ticket = tkt_data ; //<S2SV> printf ( "uu-server:<S2SV_blank>client<S2SV_blank>ticket<S2SV_blank>is<S2SV_blank>%d<S2SV_blank>bytes.\\n" , //<S2SV> creds . second_ticket . length ) ; //<S2SV> retval = krb5_get_credentials ( context , KRB5_GC_USER_USER , cc , //<S2SV> & creds , & new_creds ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-server" , retval , "getting<S2SV_blank>user-user<S2SV_blank>ticket" ) ; //<S2SV> return 5 ; //<S2SV> } //<S2SV> # ifndef DEBUG //<S2SV> l = sizeof ( f_inaddr ) ; //<S2SV> if ( getpeername ( 0 , ( struct sockaddr * ) & f_inaddr , & l ) == - 1 ) //<S2SV> { //<S2SV> com_err ( "uu-server" , errno , "getting<S2SV_blank>client<S2SV_blank>address" ) ; //<S2SV> return 6 ; //<S2SV> } //<S2SV> # endif //<S2SV> l = sizeof ( l_inaddr ) ; //<S2SV> if ( getsockname ( 0 , ( struct sockaddr * ) & l_inaddr , & l ) == - 1 ) //<S2SV> { //<S2SV> com_err ( "uu-server" , errno , "getting<S2SV_blank>local<S2SV_blank>address" ) ; //<S2SV> return 6 ; //<S2SV> } //<S2SV> retval = krb5_auth_con_init ( context , & auth_context ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-server" , retval , "making<S2SV_blank>auth_context" ) ; //<S2SV> return 8 ; //<S2SV> } //<S2SV> retval = krb5_auth_con_setflags ( context , auth_context , //<S2SV> KRB5_AUTH_CONTEXT_DO_SEQUENCE ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-server" , retval , "initializing<S2SV_blank>the<S2SV_blank>auth_context<S2SV_blank>flags" ) ; //<S2SV> return 8 ; //<S2SV> } //<S2SV> retval = //<S2SV> krb5_auth_con_genaddrs ( context , auth_context , sock , //<S2SV> KRB5_AUTH_CONTEXT_GENERATE_LOCAL_FULL_ADDR | //<S2SV> KRB5_AUTH_CONTEXT_GENERATE_REMOTE_FULL_ADDR ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-server" , retval , "generating<S2SV_blank>addrs<S2SV_blank>for<S2SV_blank>auth_context" ) ; //<S2SV> return 9 ; //<S2SV> } //<S2SV> # if 1 //<S2SV> retval = krb5_mk_req_extended ( context , & auth_context , //<S2SV> AP_OPTS_USE_SESSION_KEY , //<S2SV> NULL , new_creds , & msg ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-server" , retval , "making<S2SV_blank>AP_REQ" ) ; //<S2SV> return 8 ; //<S2SV> } //<S2SV> retval = krb5_write_message ( context , ( krb5_pointer ) & sock , & msg ) ; //<S2SV> # else //<S2SV> retval = krb5_sendauth ( context , & auth_context , ( krb5_pointer ) & sock , "???" , //<S2SV> 0 , 0 , //<S2SV> AP_OPTS_MUTUAL_REQUIRED | AP_OPTS_USE_SESSION_KEY , //<S2SV> NULL , & creds , cc , NULL , NULL , NULL ) ; //<S2SV> # endif //<S2SV> if ( retval ) //<S2SV> goto cl_short_wrt ; //<S2SV> free ( msg . data ) ; //<S2SV> msgtext . length = 32 ; //<S2SV> msgtext . data = "Hello,<S2SV_blank>other<S2SV_blank>end<S2SV_blank>of<S2SV_blank>connection." ; //<S2SV> retval = krb5_mk_safe ( context , auth_context , & msgtext , & msg , NULL ) ; //<S2SV> if ( retval ) { //<S2SV> com_err ( "uu-server" , retval , "encoding<S2SV_blank>message<S2SV_blank>to<S2SV_blank>client" ) ; //<S2SV> return 6 ; //<S2SV> } //<S2SV> retval = krb5_write_message ( context , ( krb5_pointer ) & sock , & msg ) ; //<S2SV> if ( retval ) { //<S2SV> cl_short_wrt : //<S2SV> com_err ( "uu-server" , retval , "writing<S2SV_blank>message<S2SV_blank>to<S2SV_blank>client" ) ; //<S2SV> return 7 ; //<S2SV> } //<S2SV> krb5_free_data_contents ( context , & msg ) ; //<S2SV> krb5_free_data_contents ( context , & pname_data ) ; //<S2SV> krb5_free_cred_contents ( context , & creds ) ; //<S2SV> krb5_free_creds ( context , new_creds ) ; //<S2SV> krb5_cc_close ( context , cc ) ; //<S2SV> krb5_auth_con_free ( context , auth_context ) ; //<S2SV> krb5_free_context ( context ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 