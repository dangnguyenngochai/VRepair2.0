static krb5_error_code //<S2SV> process_db_args ( krb5_context context , char * * db_args , xargs_t * xargs , //<S2SV> OPERATION optype ) //<S2SV> { //<S2SV> int i = 0 ; //<S2SV> krb5_error_code st = 0 ; //<S2SV> char * arg = NULL , * arg_val = NULL ; //<S2SV> char * * dptr = NULL ; //<S2SV> unsigned int arg_val_len = 0 ; //<S2SV> if ( db_args ) { //<S2SV> for ( i = 0 ; db_args [ i ] ; ++ i ) { //<S2SV> arg = strtok_r ( db_args [ i ] , "=" , & arg_val ) ; //<S2SV> arg = ( arg != NULL ) ? arg : "" ; //<S2SV> if ( strcmp ( arg , TKTPOLICY_ARG ) == 0 ) { //<S2SV> dptr = & xargs -> tktpolicydn ; //<S2SV> } else { //<S2SV> if ( strcmp ( arg , USERDN_ARG ) == 0 ) { //<S2SV> if ( optype == MODIFY_PRINCIPAL || //<S2SV> xargs -> dn != NULL || xargs -> containerdn != NULL || //<S2SV> xargs -> linkdn != NULL ) { //<S2SV> st = EINVAL ; //<S2SV> k5_setmsg ( context , st , _ ( "%s<S2SV_blank>option<S2SV_blank>not<S2SV_blank>supported" ) , //<S2SV> arg ) ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> dptr = & xargs -> dn ; //<S2SV> } else if ( strcmp ( arg , CONTAINERDN_ARG ) == 0 ) { //<S2SV> if ( optype == MODIFY_PRINCIPAL || //<S2SV> xargs -> dn != NULL || xargs -> containerdn != NULL ) { //<S2SV> st = EINVAL ; //<S2SV> k5_setmsg ( context , st , _ ( "%s<S2SV_blank>option<S2SV_blank>not<S2SV_blank>supported" ) , //<S2SV> arg ) ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> dptr = & xargs -> containerdn ; //<S2SV> } else if ( strcmp ( arg , LINKDN_ARG ) == 0 ) { //<S2SV> if ( xargs -> dn != NULL || xargs -> linkdn != NULL ) { //<S2SV> st = EINVAL ; //<S2SV> k5_setmsg ( context , st , _ ( "%s<S2SV_blank>option<S2SV_blank>not<S2SV_blank>supported" ) , //<S2SV> arg ) ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> dptr = & xargs -> linkdn ; //<S2SV> } else { //<S2SV> st = EINVAL ; //<S2SV> k5_setmsg ( context , st , _ ( "unknown<S2SV_blank>option:<S2SV_blank>%s" ) , arg ) ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> xargs -> dn_from_kbd = TRUE ; //<S2SV> if ( arg_val == NULL || strlen ( arg_val ) == 0 ) { //<S2SV> st = EINVAL ; //<S2SV> k5_setmsg ( context , st , _ ( "%s<S2SV_blank>option<S2SV_blank>value<S2SV_blank>missing" ) , arg ) ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> } //<S2SV> if ( arg_val == NULL ) { //<S2SV> st = EINVAL ; //<S2SV> k5_setmsg ( context , st , _ ( "%s<S2SV_blank>option<S2SV_blank>value<S2SV_blank>missing" ) , arg ) ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> arg_val_len = strlen ( arg_val ) + 1 ; //<S2SV> if ( strcmp ( arg , TKTPOLICY_ARG ) == 0 ) { //<S2SV> if ( ( st = krb5_ldap_name_to_policydn ( context , //<S2SV> arg_val , //<S2SV> dptr ) ) != 0 ) //<S2SV> goto cleanup ; //<S2SV> } else { //<S2SV> * dptr = k5memdup ( arg_val , arg_val_len , & st ) ; //<S2SV> if ( * dptr == NULL ) //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> cleanup : //<S2SV> return st ; //<S2SV> } //<S2SV> 