static int decode_level3_header ( LHAFileHeader * * header , LHAInputStream * stream ) //<S2SV> { //<S2SV> unsigned int header_len ; //<S2SV> if ( lha_decode_uint16 ( & RAW_DATA ( header , 0 ) ) != 4 ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( ! extend_raw_data ( header , stream , //<S2SV> LEVEL_3_HEADER_LEN - RAW_DATA_LEN ( header ) ) ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> header_len = lha_decode_uint32 ( & RAW_DATA ( header , 24 ) ) ; //<S2SV> if ( header_len > LEVEL_3_MAX_HEADER_LEN ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( ! extend_raw_data ( header , stream , //<S2SV> header_len - RAW_DATA_LEN ( header ) ) ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> memcpy ( ( * header ) -> compress_method , & RAW_DATA ( header , 2 ) , 5 ) ; //<S2SV> ( * header ) -> compress_method [ 5 ] = '\\0' ; //<S2SV> ( * header ) -> compressed_length = lha_decode_uint32 ( & RAW_DATA ( header , 7 ) ) ; //<S2SV> ( * header ) -> length = lha_decode_uint32 ( & RAW_DATA ( header , 11 ) ) ; //<S2SV> ( * header ) -> timestamp = lha_decode_uint32 ( & RAW_DATA ( header , 15 ) ) ; //<S2SV> ( * header ) -> crc = lha_decode_uint16 ( & RAW_DATA ( header , 21 ) ) ; //<S2SV> ( * header ) -> os_type = RAW_DATA ( header , 23 ) ; //<S2SV> if ( ! decode_extended_headers ( header , 28 ) ) { //<S2SV> return 0 ; //<S2SV> } //<S2SV> return 1 ; //<S2SV> } //<S2SV> 