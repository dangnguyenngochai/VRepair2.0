void impeg2d_dec_hdr ( void * pv_dec , impeg2d_video_decode_ip_t * ps_ip , //<S2SV> impeg2d_video_decode_op_t * ps_op ) //<S2SV> { //<S2SV> UWORD32 u4_bits_read ; //<S2SV> dec_state_t * ps_dec ; //<S2SV> ps_dec = ( dec_state_t * ) pv_dec ; //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_error_code = 0 ; //<S2SV> impeg2d_bit_stream_init ( & ( ps_dec -> s_bit_stream ) , ps_ip -> s_ivd_video_decode_ip_t . pv_stream_buffer , //<S2SV> ps_ip -> s_ivd_video_decode_ip_t . u4_num_Bytes ) ; //<S2SV> { //<S2SV> { //<S2SV> IMPEG2D_ERROR_CODES_T e_error ; //<S2SV> e_error = impeg2d_process_video_header ( ps_dec ) ; //<S2SV> if ( ( IMPEG2D_ERROR_CODES_T ) IVD_ERROR_NONE != e_error ) //<S2SV> { //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_error_code = e_error ; //<S2SV> u4_bits_read = impeg2d_bit_stream_num_bits_read ( & ps_dec -> s_bit_stream ) ; //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_num_bytes_consumed = u4_bits_read >> 3 ; //<S2SV> if ( ps_op -> s_ivd_video_decode_op_t . u4_num_bytes_consumed > ps_ip -> s_ivd_video_decode_ip_t . u4_num_Bytes ) //<S2SV> { //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_num_bytes_consumed = ps_ip -> s_ivd_video_decode_ip_t . u4_num_Bytes ; //<S2SV> } //<S2SV> if ( ps_op -> s_ivd_video_decode_op_t . u4_error_code == 0 ) //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_error_code = e_error ; //<S2SV> impeg2d_next_code ( ps_dec , SEQUENCE_HEADER_CODE ) ; //<S2SV> return ; //<S2SV> } //<S2SV> } //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_pic_ht = ps_dec -> u2_vertical_size ; //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_pic_wd = ps_dec -> u2_horizontal_size ; //<S2SV> ps_op -> s_ivd_video_decode_op_t . e_pic_type = IV_NA_FRAME ; //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_error_code = IV_SUCCESS ; //<S2SV> u4_bits_read = impeg2d_bit_stream_num_bits_read ( & ps_dec -> s_bit_stream ) ; //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_num_bytes_consumed = u4_bits_read >> 3 ; //<S2SV> if ( ps_op -> s_ivd_video_decode_op_t . u4_num_bytes_consumed > ps_ip -> s_ivd_video_decode_ip_t . u4_num_Bytes ) //<S2SV> { //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_num_bytes_consumed = ps_ip -> s_ivd_video_decode_ip_t . u4_num_Bytes ; //<S2SV> } //<S2SV> ps_op -> s_ivd_video_decode_op_t . u4_frame_decoded_flag = 0 ; //<S2SV> ps_dec -> u2_header_done = 1 ; //<S2SV> } //<S2SV> } //<S2SV> 