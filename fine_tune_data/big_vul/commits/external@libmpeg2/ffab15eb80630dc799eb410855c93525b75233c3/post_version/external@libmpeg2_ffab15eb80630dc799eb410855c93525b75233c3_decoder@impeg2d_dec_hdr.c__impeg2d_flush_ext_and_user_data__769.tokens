void impeg2d_flush_ext_and_user_data ( dec_state_t * ps_dec ) //<S2SV> { //<S2SV> UWORD32 u4_start_code ; //<S2SV> stream_t * ps_stream ; //<S2SV> ps_stream = & ps_dec -> s_bit_stream ; //<S2SV> u4_start_code = impeg2d_bit_stream_nxt ( ps_stream , START_CODE_LEN ) ; //<S2SV> while ( ( u4_start_code == EXTENSION_START_CODE || u4_start_code == USER_DATA_START_CODE ) && //<S2SV> ( ps_stream -> u4_offset < ps_stream -> u4_max_offset ) ) //<S2SV> { //<S2SV> impeg2d_bit_stream_flush ( ps_stream , START_CODE_LEN ) ; //<S2SV> while ( impeg2d_bit_stream_nxt ( ps_stream , START_CODE_PREFIX_LEN ) != START_CODE_PREFIX && //<S2SV> ( ps_stream -> u4_offset < ps_stream -> u4_max_offset ) ) //<S2SV> { //<S2SV> impeg2d_bit_stream_flush ( ps_stream , 8 ) ; //<S2SV> } //<S2SV> u4_start_code = impeg2d_bit_stream_nxt ( ps_stream , START_CODE_LEN ) ; //<S2SV> } //<S2SV> } //<S2SV> 