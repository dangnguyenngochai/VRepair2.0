int socket_create ( uint16_t port ) //<S2SV> { //<S2SV> int sfd = - 1 ; //<S2SV> int yes = 1 ; //<S2SV> # ifdef WIN32 //<S2SV> WSADATA wsa_data ; //<S2SV> if ( ! wsa_init ) { //<S2SV> if ( WSAStartup ( MAKEWORD ( 2 , 2 ) , & wsa_data ) != ERROR_SUCCESS ) { //<S2SV> fprintf ( stderr , "WSAStartup<S2SV_blank>failed!\\n" ) ; //<S2SV> ExitProcess ( - 1 ) ; //<S2SV> } //<S2SV> wsa_init = 1 ; //<S2SV> } //<S2SV> # endif //<S2SV> struct sockaddr_in saddr ; //<S2SV> if ( 0 > ( sfd = socket ( PF_INET , SOCK_STREAM , IPPROTO_TCP ) ) ) { //<S2SV> perror ( "socket()" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> if ( setsockopt ( sfd , SOL_SOCKET , SO_REUSEADDR , ( void * ) & yes , sizeof ( int ) ) == - 1 ) { //<S2SV> perror ( "setsockopt()" ) ; //<S2SV> socket_close ( sfd ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> memset ( ( void * ) & saddr , 0 , sizeof ( saddr ) ) ; //<S2SV> saddr . sin_family = AF_INET ; //<S2SV> saddr . sin_addr . s_addr = htonl ( INADDR_ANY ) ; //<S2SV> saddr . sin_port = htons ( port ) ; //<S2SV> if ( 0 > bind ( sfd , ( struct sockaddr * ) & saddr , sizeof ( saddr ) ) ) { //<S2SV> perror ( "bind()" ) ; //<S2SV> socket_close ( sfd ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> if ( listen ( sfd , 1 ) == - 1 ) { //<S2SV> perror ( "listen()" ) ; //<S2SV> socket_close ( sfd ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> return sfd ; //<S2SV> } //<S2SV> 