static gdImagePtr //<S2SV> gdImageScaleTwoPass ( const gdImagePtr src , const unsigned int new_width , //<S2SV> const unsigned int new_height ) //<S2SV> { //<S2SV> const unsigned int src_width = src -> sx ; //<S2SV> const unsigned int src_height = src -> sy ; //<S2SV> gdImagePtr tmp_im = NULL ; //<S2SV> gdImagePtr dst = NULL ; //<S2SV> if ( src_width == new_width && src_height == new_height ) { //<S2SV> return gdImageClone ( src ) ; //<S2SV> } //<S2SV> if ( ! src -> trueColor ) { //<S2SV> gdImagePaletteToTrueColor ( src ) ; //<S2SV> } //<S2SV> if ( src_width == new_width ) { //<S2SV> tmp_im = src ; //<S2SV> } else { //<S2SV> tmp_im = gdImageCreateTrueColor ( new_width , src_height ) ; //<S2SV> if ( tmp_im == NULL ) { //<S2SV> return NULL ; //<S2SV> } //<S2SV> gdImageSetInterpolationMethod ( tmp_im , src -> interpolation_id ) ; //<S2SV> _gdScalePass ( src , src_width , tmp_im , new_width , src_height , HORIZONTAL ) ; //<S2SV> } //<S2SV> if ( src_height == new_height ) { //<S2SV> assert ( tmp_im != src ) ; //<S2SV> return tmp_im ; //<S2SV> } //<S2SV> dst = gdImageCreateTrueColor ( new_width , new_height ) ; //<S2SV> if ( dst != NULL ) { //<S2SV> gdImageSetInterpolationMethod ( dst , src -> interpolation_id ) ; //<S2SV> _gdScalePass ( tmp_im , src_height , dst , new_height , new_width , VERTICAL ) ; //<S2SV> } //<S2SV> if ( src != tmp_im ) { //<S2SV> gdImageDestroy ( tmp_im ) ; //<S2SV> } //<S2SV> return dst ; //<S2SV> } //<S2SV> 