void * //<S2SV> vips_tracked_malloc ( size_t size ) //<S2SV> { //<S2SV> void * buf ; //<S2SV> vips_tracked_init ( ) ; //<S2SV> size += 16 ; //<S2SV> if ( ! ( buf = g_try_malloc0 ( size ) ) ) { //<S2SV> # ifdef DEBUG //<S2SV> g_assert_not_reached ( ) ; //<S2SV> # endif //<S2SV> vips_error ( "vips_tracked" , //<S2SV> _ ( "out<S2SV_blank>of<S2SV_blank>memory<S2SV_blank>---<S2SV_blank>size<S2SV_blank>==<S2SV_blank>%dMB" ) , //<S2SV> ( int ) ( size / ( 1024.0 * 1024.0 ) ) ) ; //<S2SV> g_warning ( _ ( "out<S2SV_blank>of<S2SV_blank>memory<S2SV_blank>---<S2SV_blank>size<S2SV_blank>==<S2SV_blank>%dMB" ) , //<S2SV> ( int ) ( size / ( 1024.0 * 1024.0 ) ) ) ; //<S2SV> return ( NULL ) ; //<S2SV> } //<S2SV> g_mutex_lock ( vips_tracked_mutex ) ; //<S2SV> * ( ( size_t * ) buf ) = size ; //<S2SV> buf = ( void * ) ( ( char * ) buf + 16 ) ; //<S2SV> vips_tracked_mem += size ; //<S2SV> if ( vips_tracked_mem > vips_tracked_mem_highwater ) //<S2SV> vips_tracked_mem_highwater = vips_tracked_mem ; //<S2SV> vips_tracked_allocs += 1 ; //<S2SV> # ifdef DEBUG_VERBOSE //<S2SV> printf ( "vips_tracked_malloc:<S2SV_blank>%p,<S2SV_blank>%zd<S2SV_blank>bytes\\n" , buf , size ) ; //<S2SV> # endif //<S2SV> g_mutex_unlock ( vips_tracked_mutex ) ; //<S2SV> VIPS_GATE_MALLOC ( size ) ; //<S2SV> return ( buf ) ; //<S2SV> } //<S2SV> 