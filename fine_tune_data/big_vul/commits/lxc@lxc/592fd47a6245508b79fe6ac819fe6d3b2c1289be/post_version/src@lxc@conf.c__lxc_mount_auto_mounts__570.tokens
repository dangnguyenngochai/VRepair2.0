static int lxc_mount_auto_mounts ( struct lxc_conf * conf , int flags , struct lxc_handler * handler ) //<S2SV> { //<S2SV> int r ; //<S2SV> size_t i ; //<S2SV> static struct { //<S2SV> int match_mask ; //<S2SV> int match_flag ; //<S2SV> const char * source ; //<S2SV> const char * destination ; //<S2SV> const char * fstype ; //<S2SV> unsigned long flags ; //<S2SV> const char * options ; //<S2SV> } default_mounts [ ] = { //<S2SV> { LXC_AUTO_PROC_MASK , LXC_AUTO_PROC_MIXED , "proc" , "%r/proc" , "proc" , MS_NODEV | MS_NOEXEC | MS_NOSUID , NULL } , //<S2SV> { LXC_AUTO_PROC_MASK , LXC_AUTO_PROC_MIXED , "%r/proc/sys/net" , "%r/proc/tty" , NULL , MS_BIND , NULL } , //<S2SV> { LXC_AUTO_PROC_MASK , LXC_AUTO_PROC_MIXED , "%r/proc/sys" , "%r/proc/sys" , NULL , MS_BIND , NULL } , //<S2SV> { LXC_AUTO_PROC_MASK , LXC_AUTO_PROC_MIXED , NULL , "%r/proc/sys" , NULL , MS_REMOUNT | MS_BIND | MS_RDONLY , NULL } , //<S2SV> { LXC_AUTO_PROC_MASK , LXC_AUTO_PROC_MIXED , "%r/proc/tty" , "%r/proc/sys/net" , NULL , MS_MOVE , NULL } , //<S2SV> { LXC_AUTO_PROC_MASK , LXC_AUTO_PROC_MIXED , "%r/proc/sysrq-trigger" , "%r/proc/sysrq-trigger" , NULL , MS_BIND , NULL } , //<S2SV> { LXC_AUTO_PROC_MASK , LXC_AUTO_PROC_MIXED , NULL , "%r/proc/sysrq-trigger" , NULL , MS_REMOUNT | MS_BIND | MS_RDONLY , NULL } , //<S2SV> { LXC_AUTO_PROC_MASK , LXC_AUTO_PROC_RW , "proc" , "%r/proc" , "proc" , MS_NODEV | MS_NOEXEC | MS_NOSUID , NULL } , //<S2SV> { LXC_AUTO_SYS_MASK , LXC_AUTO_SYS_RW , "sysfs" , "%r/sys" , "sysfs" , 0 , NULL } , //<S2SV> { LXC_AUTO_SYS_MASK , LXC_AUTO_SYS_RO , "sysfs" , "%r/sys" , "sysfs" , MS_RDONLY , NULL } , //<S2SV> { LXC_AUTO_SYS_MASK , LXC_AUTO_SYS_MIXED , "sysfs" , "%r/sys" , "sysfs" , MS_NODEV | MS_NOEXEC | MS_NOSUID , NULL } , //<S2SV> { LXC_AUTO_SYS_MASK , LXC_AUTO_SYS_MIXED , "%r/sys" , "%r/sys" , NULL , MS_BIND , NULL } , //<S2SV> { LXC_AUTO_SYS_MASK , LXC_AUTO_SYS_MIXED , NULL , "%r/sys" , NULL , MS_REMOUNT | MS_BIND | MS_RDONLY , NULL } , //<S2SV> { LXC_AUTO_SYS_MASK , LXC_AUTO_SYS_MIXED , "sysfs" , "%r/sys/devices/virtual/net" , "sysfs" , 0 , NULL } , //<S2SV> { LXC_AUTO_SYS_MASK , LXC_AUTO_SYS_MIXED , "%r/sys/devices/virtual/net/devices/virtual/net" , "%r/sys/devices/virtual/net" , NULL , MS_BIND , NULL } , //<S2SV> { LXC_AUTO_SYS_MASK , LXC_AUTO_SYS_MIXED , NULL , "%r/sys/devices/virtual/net" , NULL , MS_REMOUNT | MS_BIND | MS_NOSUID | MS_NODEV | MS_NOEXEC , NULL } , //<S2SV> { 0 , 0 , NULL , NULL , NULL , 0 , NULL } //<S2SV> } ; //<S2SV> for ( i = 0 ; default_mounts [ i ] . match_mask ; i ++ ) { //<S2SV> if ( ( flags & default_mounts [ i ] . match_mask ) == default_mounts [ i ] . match_flag ) { //<S2SV> char * source = NULL ; //<S2SV> char * destination = NULL ; //<S2SV> int saved_errno ; //<S2SV> unsigned long mflags ; //<S2SV> if ( default_mounts [ i ] . source ) { //<S2SV> source = lxc_string_replace ( "%r" , conf -> rootfs . path ? conf -> rootfs . mount : "" , default_mounts [ i ] . source ) ; //<S2SV> if ( ! source ) { //<S2SV> SYSERROR ( "memory<S2SV_blank>allocation<S2SV_blank>error" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> if ( default_mounts [ i ] . destination ) { //<S2SV> destination = lxc_string_replace ( "%r" , conf -> rootfs . path ? conf -> rootfs . mount : "" , default_mounts [ i ] . destination ) ; //<S2SV> if ( ! destination ) { //<S2SV> saved_errno = errno ; //<S2SV> SYSERROR ( "memory<S2SV_blank>allocation<S2SV_blank>error" ) ; //<S2SV> free ( source ) ; //<S2SV> errno = saved_errno ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> mflags = add_required_remount_flags ( source , destination , //<S2SV> default_mounts [ i ] . flags ) ; //<S2SV> r = safe_mount ( source , destination , default_mounts [ i ] . fstype , mflags , default_mounts [ i ] . options , conf -> rootfs . path ? conf -> rootfs . mount : NULL ) ; //<S2SV> saved_errno = errno ; //<S2SV> if ( r < 0 && errno == ENOENT ) { //<S2SV> INFO ( "Mount<S2SV_blank>source<S2SV_blank>or<S2SV_blank>target<S2SV_blank>for<S2SV_blank>%s<S2SV_blank>on<S2SV_blank>%s<S2SV_blank>doesn\'t<S2SV_blank>exist.<S2SV_blank>Skipping." , source , destination ) ; //<S2SV> r = 0 ; //<S2SV> } //<S2SV> else if ( r < 0 ) //<S2SV> SYSERROR ( "error<S2SV_blank>mounting<S2SV_blank>%s<S2SV_blank>on<S2SV_blank>%s<S2SV_blank>flags<S2SV_blank>%lu" , source , destination , mflags ) ; //<S2SV> free ( source ) ; //<S2SV> free ( destination ) ; //<S2SV> if ( r < 0 ) { //<S2SV> errno = saved_errno ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> if ( flags & LXC_AUTO_CGROUP_MASK ) { //<S2SV> int cg_flags ; //<S2SV> cg_flags = flags & LXC_AUTO_CGROUP_MASK ; //<S2SV> if ( cg_flags == LXC_AUTO_CGROUP_NOSPEC || cg_flags == LXC_AUTO_CGROUP_FULL_NOSPEC ) { //<S2SV> int has_sys_admin = 0 ; //<S2SV> if ( ! lxc_list_empty ( & conf -> keepcaps ) ) { //<S2SV> has_sys_admin = in_caplist ( CAP_SYS_ADMIN , & conf -> keepcaps ) ; //<S2SV> } else { //<S2SV> has_sys_admin = ! in_caplist ( CAP_SYS_ADMIN , & conf -> caps ) ; //<S2SV> } //<S2SV> if ( cg_flags == LXC_AUTO_CGROUP_NOSPEC ) { //<S2SV> cg_flags = has_sys_admin ? LXC_AUTO_CGROUP_RW : LXC_AUTO_CGROUP_MIXED ; //<S2SV> } else { //<S2SV> cg_flags = has_sys_admin ? LXC_AUTO_CGROUP_FULL_RW : LXC_AUTO_CGROUP_FULL_MIXED ; //<S2SV> } //<S2SV> } //<S2SV> if ( ! cgroup_mount ( conf -> rootfs . path ? conf -> rootfs . mount : "" , handler , cg_flags ) ) { //<S2SV> SYSERROR ( "error<S2SV_blank>mounting<S2SV_blank>/sys/fs/cgroup" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 