static int mount_entry_on_absolute_rootfs ( struct mntent * mntent , //<S2SV> const struct lxc_rootfs * rootfs , //<S2SV> const char * lxc_name ) //<S2SV> { //<S2SV> char * aux ; //<S2SV> char path [ MAXPATHLEN ] ; //<S2SV> int r , ret = 0 , offset ; //<S2SV> const char * lxcpath ; //<S2SV> lxcpath = lxc_global_config_value ( "lxc.lxcpath" ) ; //<S2SV> if ( ! lxcpath ) { //<S2SV> ERROR ( "Out<S2SV_blank>of<S2SV_blank>memory" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> r = snprintf ( path , MAXPATHLEN , "%s/%s/rootfs" , lxcpath , lxc_name ) ; //<S2SV> if ( r < 0 || r >= MAXPATHLEN ) //<S2SV> goto skipvarlib ; //<S2SV> aux = strstr ( mntent -> mnt_dir , path ) ; //<S2SV> if ( aux ) { //<S2SV> offset = strlen ( path ) ; //<S2SV> goto skipabs ; //<S2SV> } //<S2SV> skipvarlib : //<S2SV> aux = strstr ( mntent -> mnt_dir , rootfs -> path ) ; //<S2SV> if ( ! aux ) { //<S2SV> WARN ( "ignoring<S2SV_blank>mount<S2SV_blank>point<S2SV_blank>\'%s\'" , mntent -> mnt_dir ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> offset = strlen ( rootfs -> path ) ; //<S2SV> skipabs : //<S2SV> r = snprintf ( path , MAXPATHLEN , "%s/%s" , rootfs -> mount , //<S2SV> aux + offset ) ; //<S2SV> if ( r < 0 || r >= MAXPATHLEN ) { //<S2SV> WARN ( "pathnme<S2SV_blank>too<S2SV_blank>long<S2SV_blank>for<S2SV_blank>\'%s\'" , mntent -> mnt_dir ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> return mount_entry_on_generic ( mntent , path , rootfs -> mount ) ; //<S2SV> } //<S2SV> 