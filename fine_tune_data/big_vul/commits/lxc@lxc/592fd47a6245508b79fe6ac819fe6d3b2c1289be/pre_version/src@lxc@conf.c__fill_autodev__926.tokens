static int fill_autodev ( const struct lxc_rootfs * rootfs ) //<S2SV> { //<S2SV> int ret ; //<S2SV> char path [ MAXPATHLEN ] ; //<S2SV> int i ; //<S2SV> mode_t cmask ; //<S2SV> INFO ( "Creating<S2SV_blank>initial<S2SV_blank>consoles<S2SV_blank>under<S2SV_blank>container<S2SV_blank>/dev" ) ; //<S2SV> ret = snprintf ( path , MAXPATHLEN , "%s/dev" , rootfs -> path ? rootfs -> mount : "" ) ; //<S2SV> if ( ret < 0 || ret >= MAXPATHLEN ) { //<S2SV> ERROR ( "Error<S2SV_blank>calculating<S2SV_blank>container<S2SV_blank>/dev<S2SV_blank>location" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> if ( ! dir_exists ( path ) ) //<S2SV> return 0 ; //<S2SV> INFO ( "Populating<S2SV_blank>container<S2SV_blank>/dev" ) ; //<S2SV> cmask = umask ( S_IXUSR | S_IXGRP | S_IXOTH ) ; //<S2SV> for ( i = 0 ; i < sizeof ( lxc_devs ) / sizeof ( lxc_devs [ 0 ] ) ; i ++ ) { //<S2SV> const struct lxc_devs * d = & lxc_devs [ i ] ; //<S2SV> ret = snprintf ( path , MAXPATHLEN , "%s/dev/%s" , rootfs -> path ? rootfs -> mount : "" , d -> name ) ; //<S2SV> if ( ret < 0 || ret >= MAXPATHLEN ) //<S2SV> return - 1 ; //<S2SV> ret = mknod ( path , d -> mode , makedev ( d -> maj , d -> min ) ) ; //<S2SV> if ( ret && errno != EEXIST ) { //<S2SV> char hostpath [ MAXPATHLEN ] ; //<S2SV> FILE * pathfile ; //<S2SV> ret = snprintf ( hostpath , MAXPATHLEN , "/dev/%s" , d -> name ) ; //<S2SV> if ( ret < 0 || ret >= MAXPATHLEN ) //<S2SV> return - 1 ; //<S2SV> pathfile = fopen ( path , "wb" ) ; //<S2SV> if ( ! pathfile ) { //<S2SV> SYSERROR ( "Failed<S2SV_blank>to<S2SV_blank>create<S2SV_blank>device<S2SV_blank>mount<S2SV_blank>target<S2SV_blank>\'%s\'" , path ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> fclose ( pathfile ) ; //<S2SV> if ( mount ( hostpath , path , 0 , MS_BIND , NULL ) != 0 ) { //<S2SV> SYSERROR ( "Failed<S2SV_blank>bind<S2SV_blank>mounting<S2SV_blank>device<S2SV_blank>%s<S2SV_blank>from<S2SV_blank>host<S2SV_blank>into<S2SV_blank>container" , //<S2SV> d -> name ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> umask ( cmask ) ; //<S2SV> INFO ( "Populated<S2SV_blank>container<S2SV_blank>/dev" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 