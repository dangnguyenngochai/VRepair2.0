static int mount_entry ( const char * fsname , const char * target , //<S2SV> const char * fstype , unsigned long mountflags , //<S2SV> const char * data , int optional ) //<S2SV> { //<S2SV> # ifdef HAVE_STATVFS //<S2SV> struct statvfs sb ; //<S2SV> # endif //<S2SV> if ( mount ( fsname , target , fstype , mountflags & ~ MS_REMOUNT , data ) ) { //<S2SV> if ( optional ) { //<S2SV> INFO ( "failed<S2SV_blank>to<S2SV_blank>mount<S2SV_blank>\'%s\'<S2SV_blank>on<S2SV_blank>\'%s\'<S2SV_blank>(optional):<S2SV_blank>%s" , fsname , //<S2SV> target , strerror ( errno ) ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> else { //<S2SV> SYSERROR ( "failed<S2SV_blank>to<S2SV_blank>mount<S2SV_blank>\'%s\'<S2SV_blank>on<S2SV_blank>\'%s\'" , fsname , target ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> if ( ( mountflags & MS_REMOUNT ) || ( mountflags & MS_BIND ) ) { //<S2SV> DEBUG ( "remounting<S2SV_blank>%s<S2SV_blank>on<S2SV_blank>%s<S2SV_blank>to<S2SV_blank>respect<S2SV_blank>bind<S2SV_blank>or<S2SV_blank>remount<S2SV_blank>options" , //<S2SV> fsname ? fsname : "(none)" , target ? target : "(none)" ) ; //<S2SV> unsigned long rqd_flags = 0 ; //<S2SV> if ( mountflags & MS_RDONLY ) //<S2SV> rqd_flags |= MS_RDONLY ; //<S2SV> # ifdef HAVE_STATVFS //<S2SV> if ( statvfs ( fsname , & sb ) == 0 ) { //<S2SV> unsigned long required_flags = rqd_flags ; //<S2SV> if ( sb . f_flag & MS_NOSUID ) //<S2SV> required_flags |= MS_NOSUID ; //<S2SV> if ( sb . f_flag & MS_NODEV ) //<S2SV> required_flags |= MS_NODEV ; //<S2SV> if ( sb . f_flag & MS_RDONLY ) //<S2SV> required_flags |= MS_RDONLY ; //<S2SV> if ( sb . f_flag & MS_NOEXEC ) //<S2SV> required_flags |= MS_NOEXEC ; //<S2SV> DEBUG ( "(at<S2SV_blank>remount)<S2SV_blank>flags<S2SV_blank>for<S2SV_blank>%s<S2SV_blank>was<S2SV_blank>%lu,<S2SV_blank>required<S2SV_blank>extra<S2SV_blank>flags<S2SV_blank>are<S2SV_blank>%lu" , fsname , sb . f_flag , required_flags ) ; //<S2SV> if ( ! ( mountflags & MS_REMOUNT ) ) { //<S2SV> if ( ! ( required_flags & ~ mountflags ) && rqd_flags == 0 ) { //<S2SV> DEBUG ( "mountflags<S2SV_blank>already<S2SV_blank>was<S2SV_blank>%lu,<S2SV_blank>skipping<S2SV_blank>remount" , //<S2SV> mountflags ) ; //<S2SV> goto skipremount ; //<S2SV> } //<S2SV> } //<S2SV> mountflags |= required_flags ; //<S2SV> } //<S2SV> # endif //<S2SV> if ( mount ( fsname , target , fstype , //<S2SV> mountflags | MS_REMOUNT , data ) ) { //<S2SV> if ( optional ) { //<S2SV> INFO ( "failed<S2SV_blank>to<S2SV_blank>mount<S2SV_blank>\'%s\'<S2SV_blank>on<S2SV_blank>\'%s\'<S2SV_blank>(optional):<S2SV_blank>%s" , //<S2SV> fsname , target , strerror ( errno ) ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> else { //<S2SV> SYSERROR ( "failed<S2SV_blank>to<S2SV_blank>mount<S2SV_blank>\'%s\'<S2SV_blank>on<S2SV_blank>\'%s\'" , //<S2SV> fsname , target ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> # ifdef HAVE_STATVFS //<S2SV> skipremount : //<S2SV> # endif //<S2SV> DEBUG ( "mounted<S2SV_blank>\'%s\'<S2SV_blank>on<S2SV_blank>\'%s\',<S2SV_blank>type<S2SV_blank>\'%s\'" , fsname , target , fstype ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 