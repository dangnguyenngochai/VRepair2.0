static int setup_ttydir_console ( const struct lxc_rootfs * rootfs , //<S2SV> const struct lxc_console * console , //<S2SV> char * ttydir ) //<S2SV> { //<S2SV> char path [ MAXPATHLEN ] , lxcpath [ MAXPATHLEN ] ; //<S2SV> int ret ; //<S2SV> ret = snprintf ( path , sizeof ( path ) , "%s/dev/%s" , rootfs -> mount , //<S2SV> ttydir ) ; //<S2SV> if ( ret >= sizeof ( path ) ) //<S2SV> return - 1 ; //<S2SV> ret = mkdir ( path , 0755 ) ; //<S2SV> if ( ret && errno != EEXIST ) { //<S2SV> SYSERROR ( "failed<S2SV_blank>with<S2SV_blank>errno<S2SV_blank>%d<S2SV_blank>to<S2SV_blank>create<S2SV_blank>%s" , errno , path ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> INFO ( "created<S2SV_blank>%s" , path ) ; //<S2SV> ret = snprintf ( lxcpath , sizeof ( lxcpath ) , "%s/dev/%s/console" , //<S2SV> rootfs -> mount , ttydir ) ; //<S2SV> if ( ret >= sizeof ( lxcpath ) ) { //<S2SV> ERROR ( "console<S2SV_blank>path<S2SV_blank>too<S2SV_blank>long" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> snprintf ( path , sizeof ( path ) , "%s/dev/console" , rootfs -> mount ) ; //<S2SV> ret = unlink ( path ) ; //<S2SV> if ( ret && errno != ENOENT ) { //<S2SV> SYSERROR ( "error<S2SV_blank>unlinking<S2SV_blank>%s" , path ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> ret = creat ( lxcpath , 0660 ) ; //<S2SV> if ( ret == - 1 && errno != EEXIST ) { //<S2SV> SYSERROR ( "error<S2SV_blank>%d<S2SV_blank>creating<S2SV_blank>%s" , errno , lxcpath ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> if ( ret >= 0 ) //<S2SV> close ( ret ) ; //<S2SV> if ( console -> master < 0 ) { //<S2SV> INFO ( "no<S2SV_blank>console" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( mount ( console -> name , lxcpath , "none" , MS_BIND , 0 ) ) { //<S2SV> ERROR ( "failed<S2SV_blank>to<S2SV_blank>mount<S2SV_blank>\'%s\'<S2SV_blank>on<S2SV_blank>\'%s\'" , console -> name , lxcpath ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> ret = snprintf ( lxcpath , sizeof ( lxcpath ) , "%s/console" , ttydir ) ; //<S2SV> if ( ret >= sizeof ( lxcpath ) ) { //<S2SV> ERROR ( "lxc/console<S2SV_blank>path<S2SV_blank>too<S2SV_blank>long" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> ret = symlink ( lxcpath , path ) ; //<S2SV> if ( ret ) { //<S2SV> SYSERROR ( "failed<S2SV_blank>to<S2SV_blank>create<S2SV_blank>symlink<S2SV_blank>for<S2SV_blank>console" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> INFO ( "console<S2SV_blank>has<S2SV_blank>been<S2SV_blank>setup<S2SV_blank>on<S2SV_blank>%s" , lxcpath ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 