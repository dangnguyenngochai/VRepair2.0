static char * lxclock_name ( const char * p , const char * n ) //<S2SV> { //<S2SV> int ret ; //<S2SV> int len ; //<S2SV> char * dest ; //<S2SV> char * rundir ; //<S2SV> len = strlen ( "/lock/lxc/" ) + strlen ( n ) + strlen ( p ) + 3 ; //<S2SV> rundir = get_rundir ( ) ; //<S2SV> if ( ! rundir ) //<S2SV> return NULL ; //<S2SV> len += strlen ( rundir ) ; //<S2SV> if ( ( dest = malloc ( len ) ) == NULL ) { //<S2SV> free ( rundir ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> ret = snprintf ( dest , len , "%s/lock/lxc/%s" , rundir , p ) ; //<S2SV> if ( ret < 0 || ret >= len ) { //<S2SV> free ( dest ) ; //<S2SV> free ( rundir ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> ret = mkdir_p ( dest , 0755 ) ; //<S2SV> if ( ret < 0 ) { //<S2SV> int l2 = 22 + strlen ( n ) + strlen ( p ) ; //<S2SV> if ( l2 > len ) { //<S2SV> char * d ; //<S2SV> d = realloc ( dest , l2 ) ; //<S2SV> if ( ! d ) { //<S2SV> free ( dest ) ; //<S2SV> free ( rundir ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> len = l2 ; //<S2SV> dest = d ; //<S2SV> } //<S2SV> ret = snprintf ( dest , len , "/tmp/%d/lxc%s" , geteuid ( ) , p ) ; //<S2SV> if ( ret < 0 || ret >= len ) { //<S2SV> free ( dest ) ; //<S2SV> free ( rundir ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> ret = mkdir_p ( dest , 0755 ) ; //<S2SV> if ( ret < 0 ) { //<S2SV> free ( dest ) ; //<S2SV> free ( rundir ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> ret = snprintf ( dest , len , "/tmp/%d/lxc%s/.%s" , geteuid ( ) , p , n ) ; //<S2SV> } else //<S2SV> ret = snprintf ( dest , len , "%s/lock/lxc/%s/.%s" , rundir , p , n ) ; //<S2SV> free ( rundir ) ; //<S2SV> if ( ret < 0 || ret >= len ) { //<S2SV> free ( dest ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> return dest ; //<S2SV> } //<S2SV> 