static int key_verify ( pam_handle_t * pamh , int flags , PKCS11_KEY * authkey ) //<S2SV> { //<S2SV> int ok = 0 ; //<S2SV> unsigned char challenge [ 30 ] ; //<S2SV> unsigned char * signature = NULL ; //<S2SV> unsigned int siglen ; //<S2SV> const EVP_MD * md = EVP_sha1 ( ) ; //<S2SV> EVP_MD_CTX * md_ctx = EVP_MD_CTX_new ( ) ; //<S2SV> EVP_PKEY * privkey = PKCS11_get_private_key ( authkey ) ; //<S2SV> EVP_PKEY * pubkey = PKCS11_get_public_key ( authkey ) ; //<S2SV> if ( NULL == privkey ) //<S2SV> goto err ; //<S2SV> siglen = EVP_PKEY_size ( privkey ) ; //<S2SV> if ( siglen <= 0 ) //<S2SV> goto err ; //<S2SV> signature = malloc ( siglen ) ; //<S2SV> if ( NULL == signature ) //<S2SV> goto err ; //<S2SV> if ( 1 != randomize ( pamh , challenge , sizeof challenge ) ) { //<S2SV> goto err ; //<S2SV> } //<S2SV> if ( NULL == pubkey || NULL == privkey || NULL == md_ctx || NULL == md //<S2SV> || ! EVP_SignInit ( md_ctx , md ) //<S2SV> || ! EVP_SignUpdate ( md_ctx , challenge , sizeof challenge ) //<S2SV> || ! EVP_SignFinal ( md_ctx , signature , & siglen , privkey ) //<S2SV> || ! EVP_MD_CTX_reset ( md_ctx ) //<S2SV> || ! EVP_VerifyInit ( md_ctx , md ) //<S2SV> || ! EVP_VerifyUpdate ( md_ctx , challenge , sizeof challenge ) //<S2SV> || 1 != EVP_VerifyFinal ( md_ctx , signature , siglen , pubkey ) ) { //<S2SV> pam_syslog ( pamh , LOG_DEBUG , "Error<S2SV_blank>verifying<S2SV_blank>key:<S2SV_blank>%s\\n" , //<S2SV> ERR_reason_error_string ( ERR_get_error ( ) ) ) ; //<S2SV> prompt ( flags , pamh , PAM_ERROR_MSG , NULL , _ ( "Error<S2SV_blank>verifying<S2SV_blank>key" ) ) ; //<S2SV> goto err ; //<S2SV> } //<S2SV> ok = 1 ; //<S2SV> err : //<S2SV> free ( signature ) ; //<S2SV> if ( NULL != pubkey ) //<S2SV> EVP_PKEY_free ( pubkey ) ; //<S2SV> if ( NULL != privkey ) //<S2SV> EVP_PKEY_free ( privkey ) ; //<S2SV> if ( NULL != md_ctx ) { //<S2SV> EVP_MD_CTX_free ( md_ctx ) ; //<S2SV> } //<S2SV> return ok ; //<S2SV> } //<S2SV> 