static void //<S2SV> build_config ( char * prefix , struct manager_ctx * manager , struct server * server ) //<S2SV> { //<S2SV> char * path = NULL ; //<S2SV> int path_size = strlen ( prefix ) + strlen ( server -> port ) + 20 ; //<S2SV> path = ss_malloc ( path_size ) ; //<S2SV> snprintf ( path , path_size , "%s/.shadowsocks_%s.conf" , prefix , server -> port ) ; //<S2SV> FILE * f = fopen ( path , "w+" ) ; //<S2SV> if ( f == NULL ) { //<S2SV> if ( verbose ) { //<S2SV> LOGE ( "unable<S2SV_blank>to<S2SV_blank>open<S2SV_blank>config<S2SV_blank>file" ) ; //<S2SV> } //<S2SV> ss_free ( path ) ; //<S2SV> return ; //<S2SV> } //<S2SV> fprintf ( f , "{\\n" ) ; //<S2SV> fprintf ( f , "\\"server_port\\":%d,\\n" , atoi ( server -> port ) ) ; //<S2SV> fprintf ( f , "\\"password\\":\\"%s\\"" , server -> password ) ; //<S2SV> if ( server -> method ) //<S2SV> fprintf ( f , ",\\n\\"method\\":\\"%s\\"" , server -> method ) ; //<S2SV> else if ( manager -> method ) //<S2SV> fprintf ( f , ",\\n\\"method\\":\\"%s\\"" , manager -> method ) ; //<S2SV> if ( server -> fast_open [ 0 ] ) //<S2SV> fprintf ( f , ",\\n\\"fast_open\\":<S2SV_blank>%s" , server -> fast_open ) ; //<S2SV> if ( server -> mode ) //<S2SV> fprintf ( f , ",\\n\\"mode\\":\\"%s\\"" , server -> mode ) ; //<S2SV> if ( server -> plugin ) //<S2SV> fprintf ( f , ",\\n\\"plugin\\":\\"%s\\"" , server -> plugin ) ; //<S2SV> if ( server -> plugin_opts ) //<S2SV> fprintf ( f , ",\\n\\"plugin_opts\\":\\"%s\\"" , server -> plugin_opts ) ; //<S2SV> fprintf ( f , "\\n}\\n" ) ; //<S2SV> fclose ( f ) ; //<S2SV> ss_free ( path ) ; //<S2SV> } //<S2SV> 