static int mailimf_group_parse ( const char * message , size_t length , //<S2SV> size_t * indx , //<S2SV> struct mailimf_group * * result ) //<S2SV> { //<S2SV> size_t cur_token ; //<S2SV> char * display_name ; //<S2SV> struct mailimf_mailbox_list * mailbox_list ; //<S2SV> struct mailimf_group * group ; //<S2SV> int r ; //<S2SV> int res ; //<S2SV> cur_token = * indx ; //<S2SV> mailbox_list = NULL ; //<S2SV> r = mailimf_display_name_parse ( message , length , & cur_token , & display_name ) ; //<S2SV> if ( r != MAILIMF_NO_ERROR ) { //<S2SV> res = r ; //<S2SV> goto err ; //<S2SV> } //<S2SV> r = mailimf_colon_parse ( message , length , & cur_token ) ; //<S2SV> if ( r != MAILIMF_NO_ERROR ) { //<S2SV> res = r ; //<S2SV> goto free_display_name ; //<S2SV> } //<S2SV> r = mailimf_mailbox_list_parse ( message , length , & cur_token , & mailbox_list ) ; //<S2SV> switch ( r ) { //<S2SV> case MAILIMF_NO_ERROR : //<S2SV> break ; //<S2SV> case MAILIMF_ERROR_PARSE : //<S2SV> r = mailimf_cfws_parse ( message , length , & cur_token ) ; //<S2SV> if ( ( r != MAILIMF_NO_ERROR ) && ( r != MAILIMF_ERROR_PARSE ) ) { //<S2SV> res = r ; //<S2SV> goto free_display_name ; //<S2SV> } //<S2SV> break ; //<S2SV> default : //<S2SV> res = r ; //<S2SV> goto free_display_name ; //<S2SV> } //<S2SV> r = mailimf_semi_colon_parse ( message , length , & cur_token ) ; //<S2SV> if ( r != MAILIMF_NO_ERROR ) { //<S2SV> res = r ; //<S2SV> goto free_mailbox_list ; //<S2SV> } //<S2SV> group = mailimf_group_new ( display_name , mailbox_list ) ; //<S2SV> if ( group == NULL ) { //<S2SV> res = MAILIMF_ERROR_MEMORY ; //<S2SV> goto free_mailbox_list ; //<S2SV> } //<S2SV> * indx = cur_token ; //<S2SV> * result = group ; //<S2SV> return MAILIMF_NO_ERROR ; //<S2SV> free_mailbox_list : //<S2SV> if ( mailbox_list != NULL ) { //<S2SV> mailimf_mailbox_list_free ( mailbox_list ) ; //<S2SV> } //<S2SV> free_display_name : //<S2SV> mailimf_display_name_free ( display_name ) ; //<S2SV> err : //<S2SV> return res ; //<S2SV> } //<S2SV> 