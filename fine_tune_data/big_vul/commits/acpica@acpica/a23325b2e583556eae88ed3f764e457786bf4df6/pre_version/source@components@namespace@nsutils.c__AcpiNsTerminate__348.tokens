void //<S2SV> AcpiNsTerminate ( //<S2SV> void ) //<S2SV> { //<S2SV> ACPI_STATUS Status ; //<S2SV> ACPI_FUNCTION_TRACE ( NsTerminate ) ; //<S2SV> # ifdef ACPI_EXEC_APP //<S2SV> { //<S2SV> ACPI_OPERAND_OBJECT * Prev ; //<S2SV> ACPI_OPERAND_OBJECT * Next ; //<S2SV> Next = AcpiGbl_ModuleCodeList ; //<S2SV> while ( Next ) //<S2SV> { //<S2SV> Prev = Next ; //<S2SV> Next = Next -> Method . Mutex ; //<S2SV> Prev -> Method . Mutex = NULL ; //<S2SV> AcpiUtRemoveReference ( Prev ) ; //<S2SV> } //<S2SV> } //<S2SV> # endif //<S2SV> AcpiNsDeleteNamespaceSubtree ( AcpiGbl_RootNode ) ; //<S2SV> Status = AcpiUtAcquireMutex ( ACPI_MTX_NAMESPACE ) ; //<S2SV> if ( ACPI_FAILURE ( Status ) ) //<S2SV> { //<S2SV> return_VOID ; //<S2SV> } //<S2SV> AcpiNsDeleteNode ( AcpiGbl_RootNode ) ; //<S2SV> ( void ) AcpiUtReleaseMutex ( ACPI_MTX_NAMESPACE ) ; //<S2SV> ACPI_DEBUG_PRINT ( ( ACPI_DB_INFO , "Namespace<S2SV_blank>freed\\n" ) ) ; //<S2SV> return_VOID ; //<S2SV> } //<S2SV> 