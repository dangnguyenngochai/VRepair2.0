static void //<S2SV> feed_table_block_tag ( struct table * tbl , //<S2SV> char * line , struct table_mode * mode , int indent , int cmd ) //<S2SV> { //<S2SV> int offset ; //<S2SV> if ( mode -> indent_level <= 0 && indent == - 1 ) //<S2SV> return ; //<S2SV> if ( mode -> indent_level >= CHAR_MAX && indent == 1 ) //<S2SV> return ; //<S2SV> setwidth ( tbl , mode ) ; //<S2SV> feed_table_inline_tag ( tbl , line , mode , - 1 ) ; //<S2SV> clearcontentssize ( tbl , mode ) ; //<S2SV> if ( indent == 1 ) { //<S2SV> mode -> indent_level ++ ; //<S2SV> if ( mode -> indent_level <= MAX_INDENT_LEVEL ) //<S2SV> tbl -> indent += INDENT_INCR ; //<S2SV> } //<S2SV> else if ( indent == - 1 ) { //<S2SV> mode -> indent_level -- ; //<S2SV> if ( mode -> indent_level < MAX_INDENT_LEVEL ) //<S2SV> tbl -> indent -= INDENT_INCR ; //<S2SV> } //<S2SV> if ( tbl -> indent < 0 ) //<S2SV> tbl -> indent = 0 ; //<S2SV> offset = tbl -> indent ; //<S2SV> if ( cmd == HTML_DT ) { //<S2SV> if ( mode -> indent_level > 0 && mode -> indent_level <= MAX_INDENT_LEVEL ) //<S2SV> offset -= INDENT_INCR ; //<S2SV> if ( offset < 0 ) //<S2SV> offset = 0 ; //<S2SV> } //<S2SV> if ( tbl -> indent > 0 ) { //<S2SV> check_minimum0 ( tbl , 0 ) ; //<S2SV> addcontentssize ( tbl , offset ) ; //<S2SV> } //<S2SV> } //<S2SV> 