static void //<S2SV> process_open ( u_int32_t id ) //<S2SV> { //<S2SV> u_int32_t pflags ; //<S2SV> Attrib a ; //<S2SV> char * name ; //<S2SV> int r , handle , fd , flags , mode , status = SSH2_FX_FAILURE ; //<S2SV> if ( ( r = sshbuf_get_cstring ( iqueue , & name , NULL ) ) != 0 || //<S2SV> ( r = sshbuf_get_u32 ( iqueue , & pflags ) ) != 0 || //<S2SV> ( r = decode_attrib ( iqueue , & a ) ) != 0 ) //<S2SV> fatal ( "%s:<S2SV_blank>buffer<S2SV_blank>error:<S2SV_blank>%s" , __func__ , ssh_err ( r ) ) ; //<S2SV> debug3 ( "request<S2SV_blank>%u:<S2SV_blank>open<S2SV_blank>flags<S2SV_blank>%d" , id , pflags ) ; //<S2SV> flags = flags_from_portable ( pflags ) ; //<S2SV> mode = ( a . flags & SSH2_FILEXFER_ATTR_PERMISSIONS ) ? a . perm : 0666 ; //<S2SV> logit ( "open<S2SV_blank>\\"%s\\"<S2SV_blank>flags<S2SV_blank>%s<S2SV_blank>mode<S2SV_blank>0%o" , //<S2SV> name , string_from_portable ( pflags ) , mode ) ; //<S2SV> if ( readonly && //<S2SV> ( ( flags & O_ACCMODE ) != O_RDONLY || //<S2SV> ( flags & ( O_CREAT | O_TRUNC ) ) != 0 ) ) { //<S2SV> verbose ( "Refusing<S2SV_blank>open<S2SV_blank>request<S2SV_blank>in<S2SV_blank>read-only<S2SV_blank>mode" ) ; //<S2SV> status = SSH2_FX_PERMISSION_DENIED ; //<S2SV> } else { //<S2SV> fd = open ( name , flags , mode ) ; //<S2SV> if ( fd < 0 ) { //<S2SV> status = errno_to_portable ( errno ) ; //<S2SV> } else { //<S2SV> handle = handle_new ( HANDLE_FILE , name , fd , flags , NULL ) ; //<S2SV> if ( handle < 0 ) { //<S2SV> close ( fd ) ; //<S2SV> } else { //<S2SV> send_handle ( id , handle ) ; //<S2SV> status = SSH2_FX_OK ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> if ( status != SSH2_FX_OK ) //<S2SV> send_status ( id , status ) ; //<S2SV> free ( name ) ; //<S2SV> } //<S2SV> 