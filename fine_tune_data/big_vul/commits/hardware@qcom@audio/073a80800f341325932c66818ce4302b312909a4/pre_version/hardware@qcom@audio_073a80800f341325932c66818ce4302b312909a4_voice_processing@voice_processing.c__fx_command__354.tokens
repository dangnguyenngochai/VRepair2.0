static int fx_command ( effect_handle_t self , //<S2SV> uint32_t cmdCode , //<S2SV> uint32_t cmdSize , //<S2SV> void * pCmdData , //<S2SV> uint32_t * replySize , //<S2SV> void * pReplyData ) //<S2SV> { //<S2SV> struct effect_s * effect = ( struct effect_s * ) self ; //<S2SV> if ( effect == NULL ) //<S2SV> return - EINVAL ; //<S2SV> switch ( cmdCode ) { //<S2SV> case EFFECT_CMD_INIT : //<S2SV> if ( pReplyData == NULL || * replySize != sizeof ( int ) ) //<S2SV> return - EINVAL ; //<S2SV> * ( int * ) pReplyData = 0 ; //<S2SV> break ; //<S2SV> case EFFECT_CMD_SET_CONFIG : { //<S2SV> if ( pCmdData == NULL || //<S2SV> cmdSize != sizeof ( effect_config_t ) || //<S2SV> pReplyData == NULL || //<S2SV> * replySize != sizeof ( int ) ) { //<S2SV> ALOGV ( "fx_command()<S2SV_blank>EFFECT_CMD_SET_CONFIG<S2SV_blank>invalid<S2SV_blank>args" ) ; //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> * ( int * ) pReplyData = session_set_config ( effect -> session , ( effect_config_t * ) pCmdData ) ; //<S2SV> if ( * ( int * ) pReplyData != 0 ) //<S2SV> break ; //<S2SV> if ( effect -> state != EFFECT_STATE_ACTIVE ) //<S2SV> * ( int * ) pReplyData = effect_set_state ( effect , EFFECT_STATE_CONFIG ) ; //<S2SV> } break ; //<S2SV> case EFFECT_CMD_GET_CONFIG : //<S2SV> if ( pReplyData == NULL || //<S2SV> * replySize != sizeof ( effect_config_t ) ) { //<S2SV> ALOGV ( "fx_command()<S2SV_blank>EFFECT_CMD_GET_CONFIG<S2SV_blank>invalid<S2SV_blank>args" ) ; //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> session_get_config ( effect -> session , ( effect_config_t * ) pReplyData ) ; //<S2SV> break ; //<S2SV> case EFFECT_CMD_RESET : //<S2SV> break ; //<S2SV> case EFFECT_CMD_GET_PARAM : { //<S2SV> if ( pCmdData == NULL || //<S2SV> cmdSize < ( int ) sizeof ( effect_param_t ) || //<S2SV> pReplyData == NULL || //<S2SV> * replySize < ( int ) sizeof ( effect_param_t ) ) { //<S2SV> ALOGV ( "fx_command()<S2SV_blank>EFFECT_CMD_GET_PARAM<S2SV_blank>invalid<S2SV_blank>args" ) ; //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> effect_param_t * p = ( effect_param_t * ) pCmdData ; //<S2SV> memcpy ( pReplyData , pCmdData , sizeof ( effect_param_t ) + p -> psize ) ; //<S2SV> p = ( effect_param_t * ) pReplyData ; //<S2SV> p -> status = - ENOSYS ; //<S2SV> } break ; //<S2SV> case EFFECT_CMD_SET_PARAM : { //<S2SV> if ( pCmdData == NULL || //<S2SV> cmdSize < ( int ) sizeof ( effect_param_t ) || //<S2SV> pReplyData == NULL || //<S2SV> * replySize != sizeof ( int32_t ) ) { //<S2SV> ALOGV ( "fx_command()<S2SV_blank>EFFECT_CMD_SET_PARAM<S2SV_blank>invalid<S2SV_blank>args" ) ; //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> effect_param_t * p = ( effect_param_t * ) pCmdData ; //<S2SV> if ( p -> psize != sizeof ( int32_t ) ) { //<S2SV> ALOGV ( "fx_command()<S2SV_blank>EFFECT_CMD_SET_PARAM<S2SV_blank>invalid<S2SV_blank>param<S2SV_blank>format" ) ; //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> * ( int * ) pReplyData = - ENOSYS ; //<S2SV> } break ; //<S2SV> case EFFECT_CMD_ENABLE : //<S2SV> if ( pReplyData == NULL || * replySize != sizeof ( int ) ) { //<S2SV> ALOGV ( "fx_command()<S2SV_blank>EFFECT_CMD_ENABLE<S2SV_blank>invalid<S2SV_blank>args" ) ; //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> * ( int * ) pReplyData = effect_set_state ( effect , EFFECT_STATE_ACTIVE ) ; //<S2SV> break ; //<S2SV> case EFFECT_CMD_DISABLE : //<S2SV> if ( pReplyData == NULL || * replySize != sizeof ( int ) ) { //<S2SV> ALOGV ( "fx_command()<S2SV_blank>EFFECT_CMD_DISABLE<S2SV_blank>invalid<S2SV_blank>args" ) ; //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> * ( int * ) pReplyData = effect_set_state ( effect , EFFECT_STATE_CONFIG ) ; //<S2SV> break ; //<S2SV> case EFFECT_CMD_SET_DEVICE : //<S2SV> case EFFECT_CMD_SET_INPUT_DEVICE : //<S2SV> case EFFECT_CMD_SET_VOLUME : //<S2SV> case EFFECT_CMD_SET_AUDIO_MODE : //<S2SV> if ( pCmdData == NULL || //<S2SV> cmdSize != sizeof ( uint32_t ) ) { //<S2SV> ALOGV ( "fx_command()<S2SV_blank>%s<S2SV_blank>invalid<S2SV_blank>args" , //<S2SV> cmdCode == EFFECT_CMD_SET_DEVICE ? "EFFECT_CMD_SET_DEVICE" : //<S2SV> cmdCode == EFFECT_CMD_SET_INPUT_DEVICE ? "EFFECT_CMD_SET_INPUT_DEVICE" : //<S2SV> cmdCode == EFFECT_CMD_SET_VOLUME ? "EFFECT_CMD_SET_VOLUME" : //<S2SV> cmdCode == EFFECT_CMD_SET_AUDIO_MODE ? "EFFECT_CMD_SET_AUDIO_MODE" : //<S2SV> "" ) ; //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> ALOGV ( "fx_command()<S2SV_blank>%s<S2SV_blank>value<S2SV_blank>%08x" , //<S2SV> cmdCode == EFFECT_CMD_SET_DEVICE ? "EFFECT_CMD_SET_DEVICE" : //<S2SV> cmdCode == EFFECT_CMD_SET_INPUT_DEVICE ? "EFFECT_CMD_SET_INPUT_DEVICE" : //<S2SV> cmdCode == EFFECT_CMD_SET_VOLUME ? "EFFECT_CMD_SET_VOLUME" : //<S2SV> cmdCode == EFFECT_CMD_SET_AUDIO_MODE ? "EFFECT_CMD_SET_AUDIO_MODE" : //<S2SV> "" , //<S2SV> * ( int * ) pCmdData ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 