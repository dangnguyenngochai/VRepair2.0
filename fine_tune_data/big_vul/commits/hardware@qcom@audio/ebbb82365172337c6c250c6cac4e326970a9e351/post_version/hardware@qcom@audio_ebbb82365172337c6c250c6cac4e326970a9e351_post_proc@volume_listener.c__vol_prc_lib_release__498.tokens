static int vol_prc_lib_release ( effect_handle_t handle ) //<S2SV> { //<S2SV> struct listnode * node , * temp_node_next ; //<S2SV> vol_listener_context_t * context = NULL ; //<S2SV> vol_listener_context_t * recv_contex = ( vol_listener_context_t * ) handle ; //<S2SV> int status = - EINVAL ; //<S2SV> bool recompute_flag = false ; //<S2SV> int active_stream_count = 0 ; //<S2SV> uint32_t session_id ; //<S2SV> uint32_t stream_type ; //<S2SV> effect_uuid_t uuid ; //<S2SV> ALOGV ( "%s<S2SV_blank>context<S2SV_blank>%p" , __func__ , handle ) ; //<S2SV> if ( recv_contex == NULL ) { //<S2SV> return status ; //<S2SV> } //<S2SV> pthread_mutex_lock ( & vol_listner_init_lock ) ; //<S2SV> session_id = recv_contex -> session_id ; //<S2SV> stream_type = recv_contex -> stream_type ; //<S2SV> uuid = recv_contex -> desc -> uuid ; //<S2SV> list_for_each_safe ( node , temp_node_next , & vol_effect_list ) { //<S2SV> context = node_to_item ( node , struct vol_listener_context_s , effect_list_node ) ; //<S2SV> if ( ( memcmp ( & ( context -> desc -> uuid ) , & uuid , sizeof ( effect_uuid_t ) ) == 0 ) //<S2SV> && ( context -> session_id == session_id ) //<S2SV> && ( context -> stream_type == stream_type ) ) { //<S2SV> ALOGV ( "---<S2SV_blank>Found<S2SV_blank>something<S2SV_blank>to<S2SV_blank>remove<S2SV_blank>---" ) ; //<S2SV> list_remove ( node ) ; //<S2SV> PRINT_STREAM_TYPE ( context -> stream_type ) ; //<S2SV> if ( context -> dev_id && AUDIO_DEVICE_OUT_SPEAKER ) { //<S2SV> recompute_flag = true ; //<S2SV> } //<S2SV> free ( context ) ; //<S2SV> status = 0 ; //<S2SV> } else { //<S2SV> ++ active_stream_count ; //<S2SV> } //<S2SV> } //<S2SV> if ( status != 0 ) { //<S2SV> ALOGE ( "something<S2SV_blank>wrong<S2SV_blank>...<S2SV_blank><<<---<S2SV_blank>Found<S2SV_blank>NOTHING<S2SV_blank>to<S2SV_blank>remove<S2SV_blank>...<S2SV_blank>????<S2SV_blank>--->>>>>" ) ; //<S2SV> pthread_mutex_unlock ( & vol_listner_init_lock ) ; //<S2SV> return status ; //<S2SV> } //<S2SV> if ( active_stream_count == 0 ) { //<S2SV> current_gain_dep_cal_level = - 1 ; //<S2SV> current_vol = 0.0 ; //<S2SV> } //<S2SV> if ( recompute_flag ) { //<S2SV> check_and_set_gain_dep_cal ( ) ; //<S2SV> } //<S2SV> if ( dumping_enabled ) { //<S2SV> dump_list_l ( ) ; //<S2SV> } //<S2SV> pthread_mutex_unlock ( & vol_listner_init_lock ) ; //<S2SV> return status ; //<S2SV> } //<S2SV> 