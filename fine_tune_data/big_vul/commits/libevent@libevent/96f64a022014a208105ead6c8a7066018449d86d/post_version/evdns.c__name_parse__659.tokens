static int //<S2SV> name_parse ( u8 * packet , int length , int * idx , char * name_out , int name_out_len ) { //<S2SV> int name_end = - 1 ; //<S2SV> int j = * idx ; //<S2SV> int ptr_count = 0 ; //<S2SV> # define GET32 ( x ) do { if ( j + 4 > length ) goto err ; memcpy ( & t32_ , packet + j , 4 ) ; j += 4 ; x = ntohl ( t32_ ) ; } while ( 0 ) //<S2SV> # define GET16 ( x ) do { if ( j + 2 > length ) goto err ; memcpy ( & t_ , packet + j , 2 ) ; j += 2 ; x = ntohs ( t_ ) ; } while ( 0 ) //<S2SV> # define GET8 ( x ) do { if ( j >= length ) goto err ; x = packet [ j ++ ] ; } while ( 0 ) //<S2SV> char * cp = name_out ; //<S2SV> const char * const end = name_out + name_out_len ; //<S2SV> for ( ; ; ) { //<S2SV> u8 label_len ; //<S2SV> GET8 ( label_len ) ; //<S2SV> if ( ! label_len ) break ; //<S2SV> if ( label_len & 0xc0 ) { //<S2SV> u8 ptr_low ; //<S2SV> GET8 ( ptr_low ) ; //<S2SV> if ( name_end < 0 ) name_end = j ; //<S2SV> j = ( ( ( int ) label_len & 0x3f ) << 8 ) + ptr_low ; //<S2SV> if ( j < 0 || j >= length ) return - 1 ; //<S2SV> if ( ++ ptr_count > length ) return - 1 ; //<S2SV> continue ; //<S2SV> } //<S2SV> if ( label_len > 63 ) return - 1 ; //<S2SV> if ( cp != name_out ) { //<S2SV> if ( cp + 1 >= end ) return - 1 ; //<S2SV> * cp ++ = '.' ; //<S2SV> } //<S2SV> if ( cp + label_len >= end ) return - 1 ; //<S2SV> if ( j + label_len > length ) return - 1 ; //<S2SV> memcpy ( cp , packet + j , label_len ) ; //<S2SV> cp += label_len ; //<S2SV> j += label_len ; //<S2SV> } //<S2SV> if ( cp >= end ) return - 1 ; //<S2SV> * cp = '\\0' ; //<S2SV> if ( name_end < 0 ) //<S2SV> * idx = j ; //<S2SV> else //<S2SV> * idx = name_end ; //<S2SV> return 0 ; //<S2SV> err : //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 