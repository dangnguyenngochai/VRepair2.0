static int iwgif_read_image ( struct iwgifrcontext * rctx ) //<S2SV> { //<S2SV> int retval = 0 ; //<S2SV> struct lzwdeccontext d ; //<S2SV> size_t subblocksize ; //<S2SV> int has_local_ct ; //<S2SV> int local_ct_size ; //<S2SV> unsigned int root_codesize ; //<S2SV> if ( ! iwgif_read ( rctx , rctx -> rbuf , 9 ) ) goto done ; //<S2SV> rctx -> image_left = ( int ) iw_get_ui16le ( & rctx -> rbuf [ 0 ] ) ; //<S2SV> rctx -> image_top = ( int ) iw_get_ui16le ( & rctx -> rbuf [ 2 ] ) ; //<S2SV> rctx -> image_width = ( int ) iw_get_ui16le ( & rctx -> rbuf [ 4 ] ) ; //<S2SV> rctx -> image_height = ( int ) iw_get_ui16le ( & rctx -> rbuf [ 6 ] ) ; //<S2SV> rctx -> interlaced = ( int ) ( ( rctx -> rbuf [ 8 ] >> 6 ) & 0x01 ) ; //<S2SV> has_local_ct = ( int ) ( ( rctx -> rbuf [ 8 ] >> 7 ) & 0x01 ) ; //<S2SV> if ( has_local_ct ) { //<S2SV> local_ct_size = ( int ) ( rctx -> rbuf [ 8 ] & 0x07 ) ; //<S2SV> rctx -> colortable . num_entries = 1 << ( 1 + local_ct_size ) ; //<S2SV> } //<S2SV> if ( has_local_ct ) { //<S2SV> if ( ! iwgif_read_color_table ( rctx , & rctx -> colortable ) ) goto done ; //<S2SV> } //<S2SV> if ( rctx -> has_transparency ) { //<S2SV> rctx -> colortable . entry [ rctx -> trans_color_index ] . a = 0 ; //<S2SV> } //<S2SV> if ( ! iwgif_read ( rctx , rctx -> rbuf , 1 ) ) goto done ; //<S2SV> root_codesize = ( unsigned int ) rctx -> rbuf [ 0 ] ; //<S2SV> if ( root_codesize < 2 || root_codesize > 11 ) { //<S2SV> iw_set_error ( rctx -> ctx , "Invalid<S2SV_blank>LZW<S2SV_blank>minimum<S2SV_blank>code<S2SV_blank>size" ) ; //<S2SV> goto done ; //<S2SV> } //<S2SV> if ( ! iwgif_init_screen ( rctx ) ) goto done ; //<S2SV> rctx -> total_npixels = ( size_t ) rctx -> image_width * ( size_t ) rctx -> image_height ; //<S2SV> if ( ! iwgif_make_row_pointers ( rctx ) ) goto done ; //<S2SV> lzw_init ( & d , root_codesize ) ; //<S2SV> lzw_clear ( & d ) ; //<S2SV> while ( 1 ) { //<S2SV> if ( ! iwgif_read ( rctx , rctx -> rbuf , 1 ) ) goto done ; //<S2SV> subblocksize = ( size_t ) rctx -> rbuf [ 0 ] ; //<S2SV> if ( subblocksize == 0 ) break ; //<S2SV> if ( ! iwgif_read ( rctx , rctx -> rbuf , subblocksize ) ) goto done ; //<S2SV> if ( ! lzw_process_bytes ( rctx , & d , rctx -> rbuf , subblocksize ) ) goto done ; //<S2SV> if ( d . eoi_flag ) break ; //<S2SV> if ( rctx -> pixels_set >= rctx -> total_npixels ) break ; //<S2SV> } //<S2SV> retval = 1 ; //<S2SV> done : //<S2SV> return retval ; //<S2SV> } //<S2SV> 