static ltxtquery * //<S2SV> queryin ( char * buf ) //<S2SV> { //<S2SV> QPRS_STATE state ; //<S2SV> int32 i ; //<S2SV> ltxtquery * query ; //<S2SV> int32 commonlen ; //<S2SV> ITEM * ptr ; //<S2SV> NODE * tmp ; //<S2SV> int32 pos = 0 ; //<S2SV> # ifdef BS_DEBUG //<S2SV> char pbuf [ 16384 ] , //<S2SV> * cur ; //<S2SV> # endif //<S2SV> state . buf = buf ; //<S2SV> state . state = WAITOPERAND ; //<S2SV> state . count = 0 ; //<S2SV> state . num = 0 ; //<S2SV> state . str = NULL ; //<S2SV> state . sumlen = 0 ; //<S2SV> state . lenop = 64 ; //<S2SV> state . curop = state . op = ( char * ) palloc ( state . lenop ) ; //<S2SV> * ( state . curop ) = '\\0' ; //<S2SV> makepol ( & state ) ; //<S2SV> if ( ! state . num ) //<S2SV> ereport ( ERROR , //<S2SV> ( errcode ( ERRCODE_SYNTAX_ERROR ) , //<S2SV> errmsg ( "syntax<S2SV_blank>error" ) , //<S2SV> errdetail ( "Empty<S2SV_blank>query." ) ) ) ; //<S2SV> commonlen = COMPUTESIZE ( state . num , state . sumlen ) ; //<S2SV> query = ( ltxtquery * ) palloc ( commonlen ) ; //<S2SV> SET_VARSIZE ( query , commonlen ) ; //<S2SV> query -> size = state . num ; //<S2SV> ptr = GETQUERY ( query ) ; //<S2SV> for ( i = 0 ; i < state . num ; i ++ ) //<S2SV> { //<S2SV> ptr [ i ] . type = state . str -> type ; //<S2SV> ptr [ i ] . val = state . str -> val ; //<S2SV> ptr [ i ] . distance = state . str -> distance ; //<S2SV> ptr [ i ] . length = state . str -> length ; //<S2SV> ptr [ i ] . flag = state . str -> flag ; //<S2SV> tmp = state . str -> next ; //<S2SV> pfree ( state . str ) ; //<S2SV> state . str = tmp ; //<S2SV> } //<S2SV> memcpy ( ( void * ) GETOPERAND ( query ) , ( void * ) state . op , state . sumlen ) ; //<S2SV> pfree ( state . op ) ; //<S2SV> pos = 0 ; //<S2SV> findoprnd ( ptr , & pos ) ; //<S2SV> return query ; //<S2SV> } //<S2SV> 