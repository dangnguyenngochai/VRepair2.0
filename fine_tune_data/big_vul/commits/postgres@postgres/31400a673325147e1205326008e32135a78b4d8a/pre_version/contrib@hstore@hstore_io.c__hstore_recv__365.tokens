Datum //<S2SV> hstore_recv ( PG_FUNCTION_ARGS ) //<S2SV> { //<S2SV> int32 buflen ; //<S2SV> HStore * out ; //<S2SV> Pairs * pairs ; //<S2SV> int32 i ; //<S2SV> int32 pcount ; //<S2SV> StringInfo buf = ( StringInfo ) PG_GETARG_POINTER ( 0 ) ; //<S2SV> pcount = pq_getmsgint ( buf , 4 ) ; //<S2SV> if ( pcount == 0 ) //<S2SV> { //<S2SV> out = hstorePairs ( NULL , 0 , 0 ) ; //<S2SV> PG_RETURN_POINTER ( out ) ; //<S2SV> } //<S2SV> pairs = palloc ( pcount * sizeof ( Pairs ) ) ; //<S2SV> for ( i = 0 ; i < pcount ; ++ i ) //<S2SV> { //<S2SV> int rawlen = pq_getmsgint ( buf , 4 ) ; //<S2SV> int len ; //<S2SV> if ( rawlen < 0 ) //<S2SV> ereport ( ERROR , //<S2SV> ( errcode ( ERRCODE_NULL_VALUE_NOT_ALLOWED ) , //<S2SV> errmsg ( "null<S2SV_blank>value<S2SV_blank>not<S2SV_blank>allowed<S2SV_blank>for<S2SV_blank>hstore<S2SV_blank>key" ) ) ) ; //<S2SV> pairs [ i ] . key = pq_getmsgtext ( buf , rawlen , & len ) ; //<S2SV> pairs [ i ] . keylen = hstoreCheckKeyLen ( len ) ; //<S2SV> pairs [ i ] . needfree = true ; //<S2SV> rawlen = pq_getmsgint ( buf , 4 ) ; //<S2SV> if ( rawlen < 0 ) //<S2SV> { //<S2SV> pairs [ i ] . val = NULL ; //<S2SV> pairs [ i ] . vallen = 0 ; //<S2SV> pairs [ i ] . isnull = true ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> pairs [ i ] . val = pq_getmsgtext ( buf , rawlen , & len ) ; //<S2SV> pairs [ i ] . vallen = hstoreCheckValLen ( len ) ; //<S2SV> pairs [ i ] . isnull = false ; //<S2SV> } //<S2SV> } //<S2SV> pcount = hstoreUniquePairs ( pairs , pcount , & buflen ) ; //<S2SV> out = hstorePairs ( pairs , pcount , buflen ) ; //<S2SV> PG_RETURN_POINTER ( out ) ; //<S2SV> } //<S2SV> 