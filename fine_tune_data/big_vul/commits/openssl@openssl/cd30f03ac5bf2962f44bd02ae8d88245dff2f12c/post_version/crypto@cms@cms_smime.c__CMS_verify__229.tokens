int CMS_verify ( CMS_ContentInfo * cms , STACK_OF ( X509 ) * certs , //<S2SV> X509_STORE * store , BIO * dcont , BIO * out , unsigned int flags ) //<S2SV> { //<S2SV> CMS_SignerInfo * si ; //<S2SV> STACK_OF ( CMS_SignerInfo ) * sinfos ; //<S2SV> STACK_OF ( X509 ) * cms_certs = NULL ; //<S2SV> STACK_OF ( X509_CRL ) * crls = NULL ; //<S2SV> X509 * signer ; //<S2SV> int i , scount = 0 , ret = 0 ; //<S2SV> BIO * cmsbio = NULL , * tmpin = NULL , * tmpout = NULL ; //<S2SV> if ( ! dcont && ! check_content ( cms ) ) //<S2SV> return 0 ; //<S2SV> sinfos = CMS_get0_SignerInfos ( cms ) ; //<S2SV> if ( sk_CMS_SignerInfo_num ( sinfos ) <= 0 ) //<S2SV> { //<S2SV> CMSerr ( CMS_F_CMS_VERIFY , CMS_R_NO_SIGNERS ) ; //<S2SV> goto err ; //<S2SV> } //<S2SV> for ( i = 0 ; i < sk_CMS_SignerInfo_num ( sinfos ) ; i ++ ) //<S2SV> { //<S2SV> si = sk_CMS_SignerInfo_value ( sinfos , i ) ; //<S2SV> CMS_SignerInfo_get0_algs ( si , NULL , & signer , NULL , NULL ) ; //<S2SV> if ( signer ) //<S2SV> scount ++ ; //<S2SV> } //<S2SV> if ( scount != sk_CMS_SignerInfo_num ( sinfos ) ) //<S2SV> scount += CMS_set1_signers_certs ( cms , certs , flags ) ; //<S2SV> if ( scount != sk_CMS_SignerInfo_num ( sinfos ) ) //<S2SV> { //<S2SV> CMSerr ( CMS_F_CMS_VERIFY , CMS_R_SIGNER_CERTIFICATE_NOT_FOUND ) ; //<S2SV> goto err ; //<S2SV> } //<S2SV> if ( ! ( flags & CMS_NO_SIGNER_CERT_VERIFY ) ) //<S2SV> { //<S2SV> cms_certs = CMS_get1_certs ( cms ) ; //<S2SV> if ( ! ( flags & CMS_NOCRL ) ) //<S2SV> crls = CMS_get1_crls ( cms ) ; //<S2SV> for ( i = 0 ; i < sk_CMS_SignerInfo_num ( sinfos ) ; i ++ ) //<S2SV> { //<S2SV> si = sk_CMS_SignerInfo_value ( sinfos , i ) ; //<S2SV> if ( ! cms_signerinfo_verify_cert ( si , store , //<S2SV> cms_certs , crls , flags ) ) //<S2SV> goto err ; //<S2SV> } //<S2SV> } //<S2SV> if ( ! ( flags & CMS_NO_ATTR_VERIFY ) ) //<S2SV> { //<S2SV> for ( i = 0 ; i < sk_CMS_SignerInfo_num ( sinfos ) ; i ++ ) //<S2SV> { //<S2SV> si = sk_CMS_SignerInfo_value ( sinfos , i ) ; //<S2SV> if ( CMS_signed_get_attr_count ( si ) < 0 ) //<S2SV> continue ; //<S2SV> if ( CMS_SignerInfo_verify ( si ) <= 0 ) //<S2SV> goto err ; //<S2SV> } //<S2SV> } //<S2SV> if ( dcont && ( BIO_method_type ( dcont ) == BIO_TYPE_MEM ) ) //<S2SV> { //<S2SV> char * ptr ; //<S2SV> long len ; //<S2SV> len = BIO_get_mem_data ( dcont , & ptr ) ; //<S2SV> tmpin = BIO_new_mem_buf ( ptr , len ) ; //<S2SV> if ( tmpin == NULL ) //<S2SV> { //<S2SV> CMSerr ( CMS_F_CMS_VERIFY , ERR_R_MALLOC_FAILURE ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> } //<S2SV> else //<S2SV> tmpin = dcont ; //<S2SV> if ( ! ( flags & SMIME_BINARY ) && dcont ) //<S2SV> { //<S2SV> tmpout = cms_get_text_bio ( out , flags ) ; //<S2SV> if ( ! tmpout ) //<S2SV> { //<S2SV> CMSerr ( CMS_F_CMS_VERIFY , ERR_R_MALLOC_FAILURE ) ; //<S2SV> goto err ; //<S2SV> } //<S2SV> cmsbio = CMS_dataInit ( cms , tmpout ) ; //<S2SV> if ( ! cmsbio ) //<S2SV> goto err ; //<S2SV> SMIME_crlf_copy ( dcont , cmsbio , flags & ~ SMIME_TEXT ) ; //<S2SV> if ( flags & CMS_TEXT ) //<S2SV> { //<S2SV> if ( ! SMIME_text ( tmpout , out ) ) //<S2SV> { //<S2SV> CMSerr ( CMS_F_CMS_VERIFY , CMS_R_SMIME_TEXT_ERROR ) ; //<S2SV> goto err ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> cmsbio = CMS_dataInit ( cms , tmpin ) ; //<S2SV> if ( ! cmsbio ) //<S2SV> goto err ; //<S2SV> if ( ! cms_copy_content ( out , cmsbio , flags ) ) //<S2SV> goto err ; //<S2SV> } //<S2SV> if ( ! ( flags & CMS_NO_CONTENT_VERIFY ) ) //<S2SV> { //<S2SV> for ( i = 0 ; i < sk_CMS_SignerInfo_num ( sinfos ) ; i ++ ) //<S2SV> { //<S2SV> si = sk_CMS_SignerInfo_value ( sinfos , i ) ; //<S2SV> if ( CMS_SignerInfo_verify_content ( si , cmsbio ) <= 0 ) //<S2SV> { //<S2SV> CMSerr ( CMS_F_CMS_VERIFY , //<S2SV> CMS_R_CONTENT_VERIFY_ERROR ) ; //<S2SV> goto err ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> ret = 1 ; //<S2SV> err : //<S2SV> if ( ! ( flags & SMIME_BINARY ) && dcont ) //<S2SV> { //<S2SV> do_free_upto ( cmsbio , tmpout ) ; //<S2SV> if ( tmpin != dcont ) //<S2SV> BIO_free ( tmpin ) ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> if ( dcont && ( tmpin == dcont ) ) //<S2SV> do_free_upto ( cmsbio , dcont ) ; //<S2SV> else //<S2SV> BIO_free_all ( cmsbio ) ; //<S2SV> } //<S2SV> if ( tmpout && out != tmpout ) //<S2SV> BIO_free_all ( tmpout ) ; //<S2SV> if ( cms_certs ) //<S2SV> sk_X509_pop_free ( cms_certs , X509_free ) ; //<S2SV> if ( crls ) //<S2SV> sk_X509_CRL_pop_free ( crls , X509_CRL_free ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 