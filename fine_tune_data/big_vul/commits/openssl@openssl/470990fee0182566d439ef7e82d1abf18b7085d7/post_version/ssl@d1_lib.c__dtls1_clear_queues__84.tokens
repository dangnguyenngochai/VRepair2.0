static void dtls1_clear_queues ( SSL * s ) //<S2SV> { //<S2SV> pitem * item = NULL ; //<S2SV> hm_fragment * frag = NULL ; //<S2SV> DTLS1_RECORD_DATA * rdata ; //<S2SV> while ( ( item = pqueue_pop ( s -> d1 -> unprocessed_rcds . q ) ) != NULL ) //<S2SV> { //<S2SV> rdata = ( DTLS1_RECORD_DATA * ) item -> data ; //<S2SV> if ( rdata -> rbuf . buf ) //<S2SV> { //<S2SV> OPENSSL_free ( rdata -> rbuf . buf ) ; //<S2SV> } //<S2SV> OPENSSL_free ( item -> data ) ; //<S2SV> pitem_free ( item ) ; //<S2SV> } //<S2SV> while ( ( item = pqueue_pop ( s -> d1 -> processed_rcds . q ) ) != NULL ) //<S2SV> { //<S2SV> rdata = ( DTLS1_RECORD_DATA * ) item -> data ; //<S2SV> if ( rdata -> rbuf . buf ) //<S2SV> { //<S2SV> OPENSSL_free ( rdata -> rbuf . buf ) ; //<S2SV> } //<S2SV> OPENSSL_free ( item -> data ) ; //<S2SV> pitem_free ( item ) ; //<S2SV> } //<S2SV> while ( ( item = pqueue_pop ( s -> d1 -> buffered_messages ) ) != NULL ) //<S2SV> { //<S2SV> frag = ( hm_fragment * ) item -> data ; //<S2SV> OPENSSL_free ( frag -> fragment ) ; //<S2SV> OPENSSL_free ( frag ) ; //<S2SV> pitem_free ( item ) ; //<S2SV> } //<S2SV> while ( ( item = pqueue_pop ( s -> d1 -> sent_messages ) ) != NULL ) //<S2SV> { //<S2SV> frag = ( hm_fragment * ) item -> data ; //<S2SV> OPENSSL_free ( frag -> fragment ) ; //<S2SV> OPENSSL_free ( frag ) ; //<S2SV> pitem_free ( item ) ; //<S2SV> } //<S2SV> while ( ( item = pqueue_pop ( s -> d1 -> buffered_app_data . q ) ) != NULL ) //<S2SV> { //<S2SV> rdata = ( DTLS1_RECORD_DATA * ) item -> data ; //<S2SV> if ( rdata -> rbuf . buf ) //<S2SV> { //<S2SV> OPENSSL_free ( rdata -> rbuf . buf ) ; //<S2SV> } //<S2SV> OPENSSL_free ( item -> data ) ; //<S2SV> pitem_free ( item ) ; //<S2SV> } //<S2SV> } //<S2SV> 