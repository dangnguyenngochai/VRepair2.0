void nw_buf_free ( nw_buf_pool * pool , nw_buf * buf ) //<S2SV> { //<S2SV> if ( pool -> free < pool -> free_total ) { //<S2SV> pool -> free_arr [ pool -> free ++ ] = buf ; //<S2SV> } else if ( pool -> free_total < NW_BUF_POOL_MAX_SIZE ) { //<S2SV> uint32_t new_free_total = pool -> free_total * 2 ; //<S2SV> void * new_arr = realloc ( pool -> free_arr , new_free_total * sizeof ( nw_buf * ) ) ; //<S2SV> if ( new_arr ) { //<S2SV> pool -> free_total = new_free_total ; //<S2SV> pool -> free_arr = new_arr ; //<S2SV> pool -> free_arr [ pool -> free ++ ] = buf ; //<S2SV> } else { //<S2SV> free ( buf ) ; //<S2SV> } //<S2SV> } else { //<S2SV> free ( buf ) ; //<S2SV> } //<S2SV> } //<S2SV> 