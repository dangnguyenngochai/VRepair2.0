G_DEFINE_TYPE ( GsmXsmpServer , gsm_xsmp_server , G_TYPE_OBJECT ) //<S2SV> typedef struct { //<S2SV> GsmXsmpServer * server ; //<S2SV> IceListenObj listener ; //<S2SV> } GsmIceConnectionData ; //<S2SV> static gboolean //<S2SV> accept_ice_connection ( GIOChannel * source , //<S2SV> GIOCondition condition , //<S2SV> GsmIceConnectionData * data ) //<S2SV> { //<S2SV> IceListenObj listener ; //<S2SV> IceConn ice_conn ; //<S2SV> IceAcceptStatus status ; //<S2SV> GsmClient * client ; //<S2SV> GsmXsmpServer * server ; //<S2SV> listener = data -> listener ; //<S2SV> server = data -> server ; //<S2SV> g_debug ( "GsmXsmpServer:<S2SV_blank>accept_ice_connection()" ) ; //<S2SV> ice_conn = IceAcceptConnection ( listener , & status ) ; //<S2SV> if ( status != IceAcceptSuccess ) { //<S2SV> g_debug ( "GsmXsmpServer:<S2SV_blank>IceAcceptConnection<S2SV_blank>returned<S2SV_blank>%d" , status ) ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> client = gsm_xsmp_client_new ( ice_conn ) ; //<S2SV> ice_conn -> context = client ; //<S2SV> gsm_store_add ( server -> priv -> client_store , gsm_client_peek_id ( client ) , G_OBJECT ( client ) ) ; //<S2SV> g_object_unref ( client ) ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> 