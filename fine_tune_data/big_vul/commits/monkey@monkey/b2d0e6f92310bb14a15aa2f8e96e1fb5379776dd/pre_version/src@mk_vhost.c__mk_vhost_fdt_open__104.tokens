static inline int mk_vhost_fdt_open ( int id , unsigned int hash , //<S2SV> struct session_request * sr ) //<S2SV> { //<S2SV> int i ; //<S2SV> int fd ; //<S2SV> struct vhost_fdt_hash_table * ht = NULL ; //<S2SV> struct vhost_fdt_hash_chain * hc ; //<S2SV> if ( config -> fdt == MK_FALSE ) { //<S2SV> return open ( sr -> real_path . data , sr -> file_info . flags_read_only ) ; //<S2SV> } //<S2SV> ht = mk_vhost_fdt_table_lookup ( id , sr -> host_conf ) ; //<S2SV> if ( mk_unlikely ( ! ht ) ) { //<S2SV> return open ( sr -> real_path . data , sr -> file_info . flags_read_only ) ; //<S2SV> } //<S2SV> hc = mk_vhost_fdt_chain_lookup ( hash , ht ) ; //<S2SV> if ( hc ) { //<S2SV> hc -> readers ++ ; //<S2SV> return hc -> fd ; //<S2SV> } //<S2SV> fd = open ( sr -> real_path . data , sr -> file_info . flags_read_only ) ; //<S2SV> if ( fd == - 1 ) { //<S2SV> return - 1 ; //<S2SV> } //<S2SV> if ( ht -> av_slots <= 0 ) { //<S2SV> return fd ; //<S2SV> } //<S2SV> for ( i = 0 ; i < VHOST_FDT_HASHTABLE_CHAINS ; i ++ ) { //<S2SV> hc = & ht -> chain [ i ] ; //<S2SV> if ( hc -> fd == - 1 ) { //<S2SV> hc -> fd = fd ; //<S2SV> hc -> hash = hash ; //<S2SV> hc -> readers ++ ; //<S2SV> ht -> av_slots -- ; //<S2SV> sr -> vhost_fdt_id = id ; //<S2SV> sr -> vhost_fdt_hash = hash ; //<S2SV> return fd ; //<S2SV> } //<S2SV> } //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 