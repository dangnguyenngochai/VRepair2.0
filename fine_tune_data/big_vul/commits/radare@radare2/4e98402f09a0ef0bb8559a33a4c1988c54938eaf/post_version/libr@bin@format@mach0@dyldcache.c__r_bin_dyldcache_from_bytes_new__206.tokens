struct r_bin_dyldcache_obj_t * r_bin_dyldcache_from_bytes_new ( const ut8 * buf , ut64 size ) { //<S2SV> struct r_bin_dyldcache_obj_t * bin = R_NEW0 ( struct r_bin_dyldcache_obj_t ) ; //<S2SV> if ( ! bin ) { //<S2SV> return NULL ; //<S2SV> } //<S2SV> if ( ! buf ) { //<S2SV> return r_bin_dyldcache_free ( bin ) ; //<S2SV> } //<S2SV> bin -> b = r_buf_new ( ) ; //<S2SV> if ( ! bin -> b || ! r_buf_set_bytes ( bin -> b , buf , size ) ) { //<S2SV> return r_bin_dyldcache_free ( bin ) ; //<S2SV> } //<S2SV> if ( ! r_bin_dyldcache_init ( bin ) ) { //<S2SV> return r_bin_dyldcache_free ( bin ) ; //<S2SV> } //<S2SV> bin -> size = size ; //<S2SV> return bin ; //<S2SV> } //<S2SV> 