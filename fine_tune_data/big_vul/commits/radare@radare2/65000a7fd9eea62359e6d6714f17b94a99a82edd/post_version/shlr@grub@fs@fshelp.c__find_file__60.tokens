static grub_err_t //<S2SV> find_file ( const char * currpath , grub_fshelp_node_t currroot , //<S2SV> grub_fshelp_node_t * currfound , //<S2SV> struct grub_fshelp_find_file_closure * c ) //<S2SV> { //<S2SV> char * fpath = grub_malloc ( grub_strlen ( currpath ) + 1 ) ; //<S2SV> char * name = fpath ; //<S2SV> char * next ; //<S2SV> enum grub_fshelp_filetype type = GRUB_FSHELP_DIR ; //<S2SV> grub_fshelp_node_t currnode = currroot ; //<S2SV> grub_fshelp_node_t oldnode = currroot ; //<S2SV> c -> currroot = currroot ; //<S2SV> grub_strncpy ( fpath , currpath , grub_strlen ( currpath ) + 1 ) ; //<S2SV> while ( * name == '/' ) //<S2SV> name ++ ; //<S2SV> if ( ! * name ) //<S2SV> { //<S2SV> * currfound = currnode ; //<S2SV> free ( fpath ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> for ( ; ; ) //<S2SV> { //<S2SV> int found ; //<S2SV> struct find_file_closure cc ; //<S2SV> next = grub_strchr ( name , '/' ) ; //<S2SV> if ( next ) //<S2SV> { //<S2SV> while ( * next == '/' ) //<S2SV> * ( next ++ ) = '\\0' ; //<S2SV> } //<S2SV> if ( type != GRUB_FSHELP_DIR ) //<S2SV> { //<S2SV> free_node ( currnode , c ) ; //<S2SV> free ( fpath ) ; //<S2SV> return grub_error ( GRUB_ERR_BAD_FILE_TYPE , "not<S2SV_blank>a<S2SV_blank>directory" ) ; //<S2SV> } //<S2SV> cc . name = name ; //<S2SV> cc . type = & type ; //<S2SV> cc . oldnode = & oldnode ; //<S2SV> cc . currnode = & currnode ; //<S2SV> found = c -> iterate_dir ( currnode , iterate , & cc ) ; //<S2SV> if ( ! found ) //<S2SV> { //<S2SV> if ( grub_errno ) { //<S2SV> free ( fpath ) ; //<S2SV> return grub_errno ; //<S2SV> } //<S2SV> break ; //<S2SV> } //<S2SV> if ( type == GRUB_FSHELP_SYMLINK ) //<S2SV> { //<S2SV> char * symlink ; //<S2SV> if ( ++ ( c -> symlinknest ) == 8 ) //<S2SV> { //<S2SV> free_node ( currnode , c ) ; //<S2SV> free_node ( oldnode , c ) ; //<S2SV> free ( fpath ) ; //<S2SV> return grub_error ( GRUB_ERR_SYMLINK_LOOP , //<S2SV> "too<S2SV_blank>deep<S2SV_blank>nesting<S2SV_blank>of<S2SV_blank>symlinks" ) ; //<S2SV> } //<S2SV> symlink = c -> read_symlink ( currnode ) ; //<S2SV> free_node ( currnode , c ) ; //<S2SV> if ( ! symlink ) //<S2SV> { //<S2SV> free_node ( oldnode , c ) ; //<S2SV> free ( fpath ) ; //<S2SV> return grub_errno ; //<S2SV> } //<S2SV> if ( symlink [ 0 ] == '/' ) //<S2SV> { //<S2SV> free_node ( oldnode , c ) ; //<S2SV> oldnode = c -> rootnode ; //<S2SV> } //<S2SV> find_file ( symlink , oldnode , & currnode , c ) ; //<S2SV> type = c -> foundtype ; //<S2SV> grub_free ( symlink ) ; //<S2SV> if ( grub_errno ) //<S2SV> { //<S2SV> free_node ( oldnode , c ) ; //<S2SV> free ( fpath ) ; //<S2SV> return grub_errno ; //<S2SV> } //<S2SV> } //<S2SV> free_node ( oldnode , c ) ; //<S2SV> if ( ! next || * next == '\\0' ) //<S2SV> { //<S2SV> * currfound = currnode ; //<S2SV> c -> foundtype = type ; //<S2SV> free ( fpath ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> name = next ; //<S2SV> } //<S2SV> free ( fpath ) ; //<S2SV> return grub_error ( GRUB_ERR_FILE_NOT_FOUND , "file<S2SV_blank>not<S2SV_blank>found" ) ; //<S2SV> } //<S2SV> 