static const ut8 * r_bin_dwarf_parse_comp_unit ( Sdb * s , const ut8 * obuf , //<S2SV> RBinDwarfCompUnit * cu , const RBinDwarfDebugAbbrev * da , //<S2SV> size_t offset , const ut8 * debug_str , size_t debug_str_len ) { //<S2SV> const ut8 * buf = obuf , * buf_end = obuf + ( cu -> hdr . length - 7 ) ; //<S2SV> ut64 abbr_code ; //<S2SV> size_t i ; //<S2SV> if ( cu -> hdr . length > debug_str_len ) { //<S2SV> return NULL ; //<S2SV> } //<S2SV> while ( buf && buf < buf_end && buf >= obuf ) { //<S2SV> if ( cu -> length && cu -> capacity == cu -> length ) { //<S2SV> r_bin_dwarf_expand_cu ( cu ) ; //<S2SV> } //<S2SV> buf = r_uleb128 ( buf , buf_end - buf , & abbr_code ) ; //<S2SV> if ( abbr_code > da -> length || ! buf ) { //<S2SV> return NULL ; //<S2SV> } //<S2SV> r_bin_dwarf_init_die ( & cu -> dies [ cu -> length ] ) ; //<S2SV> if ( ! abbr_code ) { //<S2SV> cu -> dies [ cu -> length ] . abbrev_code = 0 ; //<S2SV> cu -> length ++ ; //<S2SV> buf ++ ; //<S2SV> continue ; //<S2SV> } //<S2SV> cu -> dies [ cu -> length ] . abbrev_code = abbr_code ; //<S2SV> cu -> dies [ cu -> length ] . tag = da -> decls [ abbr_code - 1 ] . tag ; //<S2SV> abbr_code += offset ; //<S2SV> if ( da -> capacity < abbr_code ) { //<S2SV> return NULL ; //<S2SV> } //<S2SV> for ( i = 0 ; i < da -> decls [ abbr_code - 1 ] . length ; i ++ ) { //<S2SV> if ( cu -> dies [ cu -> length ] . length == cu -> dies [ cu -> length ] . capacity ) { //<S2SV> r_bin_dwarf_expand_die ( & cu -> dies [ cu -> length ] ) ; //<S2SV> } //<S2SV> if ( i >= cu -> dies [ cu -> length ] . capacity || i >= da -> decls [ abbr_code - 1 ] . capacity ) { //<S2SV> eprintf ( "Warning:<S2SV_blank>malformed<S2SV_blank>dwarf<S2SV_blank>attribute<S2SV_blank>capacity<S2SV_blank>doesn\'t<S2SV_blank>match<S2SV_blank>length\\n" ) ; //<S2SV> break ; //<S2SV> } //<S2SV> memset ( & cu -> dies [ cu -> length ] . attr_values [ i ] , 0 , sizeof ( cu -> dies [ cu -> length ] . attr_values [ i ] ) ) ; //<S2SV> buf = r_bin_dwarf_parse_attr_value ( buf , buf_end - buf , //<S2SV> & da -> decls [ abbr_code - 1 ] . specs [ i ] , //<S2SV> & cu -> dies [ cu -> length ] . attr_values [ i ] , //<S2SV> & cu -> hdr , debug_str , debug_str_len ) ; //<S2SV> if ( cu -> dies [ cu -> length ] . attr_values [ i ] . name == DW_AT_comp_dir ) { //<S2SV> const char * name = cu -> dies [ cu -> length ] . attr_values [ i ] . encoding . str_struct . string ; //<S2SV> sdb_set ( s , "DW_AT_comp_dir" , name , 0 ) ; //<S2SV> } //<S2SV> cu -> dies [ cu -> length ] . length ++ ; //<S2SV> } //<S2SV> cu -> length ++ ; //<S2SV> } //<S2SV> return buf ; //<S2SV> } //<S2SV> 