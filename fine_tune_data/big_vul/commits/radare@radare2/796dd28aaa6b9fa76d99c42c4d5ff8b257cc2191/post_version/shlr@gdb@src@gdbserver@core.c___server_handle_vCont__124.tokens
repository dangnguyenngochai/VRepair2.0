static int _server_handle_vCont ( libgdbr_t * g , int ( * cmd_cb ) ( void * , const char * , char * , size_t ) , void * core_ptr ) { //<S2SV> char * action = NULL ; //<S2SV> if ( send_ack ( g ) < 0 ) { //<S2SV> return - 1 ; //<S2SV> } //<S2SV> g -> data [ g -> data_len ] = '\\0' ; //<S2SV> if ( g -> data [ 5 ] == '?' ) { //<S2SV> return send_msg ( g , "vCont;c;s" ) ; //<S2SV> } //<S2SV> if ( ! ( action = strtok ( g -> data , ";" ) ) ) { //<S2SV> return send_msg ( g , "E01" ) ; //<S2SV> } //<S2SV> while ( action = strtok ( NULL , ";" ) ) { //<S2SV> eprintf ( "action:<S2SV_blank>%s\\n" , action ) ; //<S2SV> switch ( action [ 0 ] ) { //<S2SV> case 's' : //<S2SV> if ( cmd_cb ( core_ptr , "ds" , NULL , 0 ) < 0 ) { //<S2SV> send_msg ( g , "E01" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> return send_msg ( g , "OK" ) ; //<S2SV> case 'c' : //<S2SV> if ( cmd_cb ( core_ptr , "dc" , NULL , 0 ) < 0 ) { //<S2SV> send_msg ( g , "E01" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> return send_msg ( g , "OK" ) ; //<S2SV> default : //<S2SV> return send_msg ( g , "E01" ) ; //<S2SV> } //<S2SV> } //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 