static RList * r_bin_wasm_get_global_entries ( RBinWasmObj * bin , RBinWasmSection * sec ) { //<S2SV> RList * ret = NULL ; //<S2SV> RBinWasmGlobalEntry * ptr = NULL ; //<S2SV> int buflen = bin -> buf -> length ; //<S2SV> if ( sec -> payload_data + 32 > buflen ) { //<S2SV> return NULL ; //<S2SV> } //<S2SV> if ( ! ( ret = r_list_newf ( ( RListFree ) free ) ) ) { //<S2SV> return NULL ; //<S2SV> } //<S2SV> ut8 * buf = bin -> buf -> buf + ( ut32 ) sec -> payload_data ; //<S2SV> ut32 len = sec -> payload_len ; //<S2SV> ut32 count = sec -> count ; //<S2SV> ut32 i = 0 , r = 0 ; //<S2SV> while ( i < len && len < buflen && r < count ) { //<S2SV> if ( ! ( ptr = R_NEW0 ( RBinWasmGlobalEntry ) ) ) { //<S2SV> return ret ; //<S2SV> } //<S2SV> if ( len + 8 > buflen || ! ( consume_u8 ( buf + i , buf + len , ( ut8 * ) & ptr -> content_type , & i ) ) ) { //<S2SV> goto beach ; //<S2SV> } //<S2SV> if ( len + 8 > buflen || ! ( consume_u8 ( buf + i , buf + len , & ptr -> mutability , & i ) ) ) { //<S2SV> goto beach ; //<S2SV> } //<S2SV> if ( len + 8 > buflen || ! ( consume_init_expr ( buf + i , buf + len , R_BIN_WASM_END_OF_CODE , NULL , & i ) ) ) { //<S2SV> goto beach ; //<S2SV> } //<S2SV> r_list_append ( ret , ptr ) ; //<S2SV> r ++ ; //<S2SV> } //<S2SV> return ret ; //<S2SV> beach : //<S2SV> free ( ptr ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 