INST_HANDLER ( sbrx ) { //<S2SV> int b = buf [ 0 ] & 0x7 ; //<S2SV> int r = ( ( buf [ 0 ] >> 4 ) & 0xf ) | ( ( buf [ 1 ] & 0x01 ) << 4 ) ; //<S2SV> RAnalOp next_op = { 0 } ; //<S2SV> avr_op_analyze ( anal , //<S2SV> & next_op , //<S2SV> op -> addr + op -> size , buf + op -> size , len - op -> size , //<S2SV> cpu ) ; //<S2SV> r_strbuf_fini ( & next_op . esil ) ; //<S2SV> op -> jump = op -> addr + next_op . size + 2 ; //<S2SV> op -> cycles = 1 ; //<S2SV> ESIL_A ( "%d,1,<<,r%d,&," , b , r ) ; //<S2SV> ESIL_A ( ( buf [ 1 ] & 0xe ) == 0xc //<S2SV> ? "!," //<S2SV> : "!,!," ) ; //<S2SV> ESIL_A ( "?{,%" PFMT64d ",pc,=,}," , op -> jump ) ; //<S2SV> } //<S2SV> 