inline int web_client_api_request_v1_data ( RRDHOST * host , struct web_client * w , char * url ) { //<S2SV> debug ( D_WEB_CLIENT , "%llu:<S2SV_blank>API<S2SV_blank>v1<S2SV_blank>data<S2SV_blank>with<S2SV_blank>URL<S2SV_blank>\'%s\'" , w -> id , url ) ; //<S2SV> int ret = 400 ; //<S2SV> BUFFER * dimensions = NULL ; //<S2SV> buffer_flush ( w -> response . data ) ; //<S2SV> char * google_version = "0.6" , //<S2SV> * google_reqId = "0" , //<S2SV> * google_sig = "0" , //<S2SV> * google_out = "json" , //<S2SV> * responseHandler = NULL , //<S2SV> * outFileName = NULL ; //<S2SV> time_t last_timestamp_in_data = 0 , google_timestamp = 0 ; //<S2SV> char * chart = NULL //<S2SV> , * before_str = NULL //<S2SV> , * after_str = NULL //<S2SV> , * group_time_str = NULL //<S2SV> , * points_str = NULL ; //<S2SV> int group = RRDR_GROUPING_AVERAGE ; //<S2SV> uint32_t format = DATASOURCE_JSON ; //<S2SV> uint32_t options = 0x00000000 ; //<S2SV> while ( url ) { //<S2SV> char * value = mystrsep ( & url , "?&" ) ; //<S2SV> if ( ! value || ! * value ) continue ; //<S2SV> char * name = mystrsep ( & value , "=" ) ; //<S2SV> if ( ! name || ! * name ) continue ; //<S2SV> if ( ! value || ! * value ) continue ; //<S2SV> debug ( D_WEB_CLIENT , "%llu:<S2SV_blank>API<S2SV_blank>v1<S2SV_blank>data<S2SV_blank>query<S2SV_blank>param<S2SV_blank>\'%s\'<S2SV_blank>with<S2SV_blank>value<S2SV_blank>\'%s\'" , w -> id , name , value ) ; //<S2SV> if ( ! strcmp ( name , "chart" ) ) chart = value ; //<S2SV> else if ( ! strcmp ( name , "dimension" ) || ! strcmp ( name , "dim" ) || ! strcmp ( name , "dimensions" ) || ! strcmp ( name , "dims" ) ) { //<S2SV> if ( ! dimensions ) dimensions = buffer_create ( 100 ) ; //<S2SV> buffer_strcat ( dimensions , "|" ) ; //<S2SV> buffer_strcat ( dimensions , value ) ; //<S2SV> } //<S2SV> else if ( ! strcmp ( name , "after" ) ) after_str = value ; //<S2SV> else if ( ! strcmp ( name , "before" ) ) before_str = value ; //<S2SV> else if ( ! strcmp ( name , "points" ) ) points_str = value ; //<S2SV> else if ( ! strcmp ( name , "gtime" ) ) group_time_str = value ; //<S2SV> else if ( ! strcmp ( name , "group" ) ) { //<S2SV> group = web_client_api_request_v1_data_group ( value , RRDR_GROUPING_AVERAGE ) ; //<S2SV> } //<S2SV> else if ( ! strcmp ( name , "format" ) ) { //<S2SV> format = web_client_api_request_v1_data_format ( value ) ; //<S2SV> } //<S2SV> else if ( ! strcmp ( name , "options" ) ) { //<S2SV> options |= web_client_api_request_v1_data_options ( value ) ; //<S2SV> } //<S2SV> else if ( ! strcmp ( name , "callback" ) ) { //<S2SV> responseHandler = value ; //<S2SV> } //<S2SV> else if ( ! strcmp ( name , "filename" ) ) { //<S2SV> outFileName = value ; //<S2SV> } //<S2SV> else if ( ! strcmp ( name , "tqx" ) ) { //<S2SV> char * tqx_name , * tqx_value ; //<S2SV> while ( value ) { //<S2SV> tqx_value = mystrsep ( & value , ";" ) ; //<S2SV> if ( ! tqx_value || ! * tqx_value ) continue ; //<S2SV> tqx_name = mystrsep ( & tqx_value , ":" ) ; //<S2SV> if ( ! tqx_name || ! * tqx_name ) continue ; //<S2SV> if ( ! tqx_value || ! * tqx_value ) continue ; //<S2SV> if ( ! strcmp ( tqx_name , "version" ) ) //<S2SV> google_version = tqx_value ; //<S2SV> else if ( ! strcmp ( tqx_name , "reqId" ) ) //<S2SV> google_reqId = tqx_value ; //<S2SV> else if ( ! strcmp ( tqx_name , "sig" ) ) { //<S2SV> google_sig = tqx_value ; //<S2SV> google_timestamp = strtoul ( google_sig , NULL , 0 ) ; //<S2SV> } //<S2SV> else if ( ! strcmp ( tqx_name , "out" ) ) { //<S2SV> google_out = tqx_value ; //<S2SV> format = web_client_api_request_v1_data_google_format ( google_out ) ; //<S2SV> } //<S2SV> else if ( ! strcmp ( tqx_name , "responseHandler" ) ) //<S2SV> responseHandler = tqx_value ; //<S2SV> else if ( ! strcmp ( tqx_name , "outFileName" ) ) //<S2SV> outFileName = tqx_value ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> if ( ! chart || ! * chart ) { //<S2SV> buffer_sprintf ( w -> response . data , "No<S2SV_blank>chart<S2SV_blank>id<S2SV_blank>is<S2SV_blank>given<S2SV_blank>at<S2SV_blank>the<S2SV_blank>request." ) ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> RRDSET * st = rrdset_find ( host , chart ) ; //<S2SV> if ( ! st ) st = rrdset_find_byname ( host , chart ) ; //<S2SV> if ( ! st ) { //<S2SV> buffer_strcat ( w -> response . data , "Chart<S2SV_blank>is<S2SV_blank>not<S2SV_blank>found:<S2SV_blank>" ) ; //<S2SV> buffer_strcat_htmlescape ( w -> response . data , chart ) ; //<S2SV> ret = 404 ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> st -> last_accessed_time = now_realtime_sec ( ) ; //<S2SV> long long before = ( before_str && * before_str ) ? str2l ( before_str ) : 0 ; //<S2SV> long long after = ( after_str && * after_str ) ? str2l ( after_str ) : 0 ; //<S2SV> int points = ( points_str && * points_str ) ? str2i ( points_str ) : 0 ; //<S2SV> long group_time = ( group_time_str && * group_time_str ) ? str2l ( group_time_str ) : 0 ; //<S2SV> debug ( D_WEB_CLIENT , "%llu:<S2SV_blank>API<S2SV_blank>command<S2SV_blank>\'data\'<S2SV_blank>for<S2SV_blank>chart<S2SV_blank>\'%s\',<S2SV_blank>dimensions<S2SV_blank>\'%s\',<S2SV_blank>after<S2SV_blank>\'%lld\',<S2SV_blank>before<S2SV_blank>\'%lld\',<S2SV_blank>points<S2SV_blank>\'%d\',<S2SV_blank>group<S2SV_blank>\'%d\',<S2SV_blank>format<S2SV_blank>\'%u\',<S2SV_blank>options<S2SV_blank>\'0x%08x\'" //<S2SV> , w -> id //<S2SV> , chart //<S2SV> , ( dimensions ) ? buffer_tostring ( dimensions ) : "" //<S2SV> , after //<S2SV> , before //<S2SV> , points //<S2SV> , group //<S2SV> , format //<S2SV> , options //<S2SV> ) ; //<S2SV> if ( outFileName && * outFileName ) { //<S2SV> buffer_sprintf ( w -> response . header , "Content-Disposition:<S2SV_blank>attachment;<S2SV_blank>filename=\\"%s\\"\\r\\n" , outFileName ) ; //<S2SV> debug ( D_WEB_CLIENT , "%llu:<S2SV_blank>generating<S2SV_blank>outfilename<S2SV_blank>header:<S2SV_blank>\'%s\'" , w -> id , outFileName ) ; //<S2SV> } //<S2SV> if ( format == DATASOURCE_DATATABLE_JSONP ) { //<S2SV> if ( responseHandler == NULL ) //<S2SV> responseHandler = "google.visualization.Query.setResponse" ; //<S2SV> debug ( D_WEB_CLIENT_ACCESS , "%llu:<S2SV_blank>GOOGLE<S2SV_blank>JSON/JSONP:<S2SV_blank>version<S2SV_blank>=<S2SV_blank>\'%s\',<S2SV_blank>reqId<S2SV_blank>=<S2SV_blank>\'%s\',<S2SV_blank>sig<S2SV_blank>=<S2SV_blank>\'%s\',<S2SV_blank>out<S2SV_blank>=<S2SV_blank>\'%s\',<S2SV_blank>responseHandler<S2SV_blank>=<S2SV_blank>\'%s\',<S2SV_blank>outFileName<S2SV_blank>=<S2SV_blank>\'%s\'" , //<S2SV> w -> id , google_version , google_reqId , google_sig , google_out , responseHandler , outFileName //<S2SV> ) ; //<S2SV> buffer_sprintf ( w -> response . data , //<S2SV> "%s({version:\'%s\',reqId:\'%s\',status:\'ok\',sig:\'%ld\',table:" , //<S2SV> responseHandler , google_version , google_reqId , st -> last_updated . tv_sec ) ; //<S2SV> } //<S2SV> else if ( format == DATASOURCE_JSONP ) { //<S2SV> if ( responseHandler == NULL ) //<S2SV> responseHandler = "callback" ; //<S2SV> buffer_strcat ( w -> response . data , responseHandler ) ; //<S2SV> buffer_strcat ( w -> response . data , "(" ) ; //<S2SV> } //<S2SV> ret = rrdset2anything_api_v1 ( st , w -> response . data , dimensions , format , points , after , before , group , group_time //<S2SV> , options , & last_timestamp_in_data ) ; //<S2SV> if ( format == DATASOURCE_DATATABLE_JSONP ) { //<S2SV> if ( google_timestamp < last_timestamp_in_data ) //<S2SV> buffer_strcat ( w -> response . data , "});" ) ; //<S2SV> else { //<S2SV> buffer_flush ( w -> response . data ) ; //<S2SV> buffer_sprintf ( w -> response . data , //<S2SV> "%s({version:\'%s\',reqId:\'%s\',status:\'error\',errors:[{reason:\'not_modified\',message:\'Data<S2SV_blank>not<S2SV_blank>modified\'}]});" , //<S2SV> responseHandler , google_version , google_reqId ) ; //<S2SV> } //<S2SV> } //<S2SV> else if ( format == DATASOURCE_JSONP ) //<S2SV> buffer_strcat ( w -> response . data , ");" ) ; //<S2SV> cleanup : //<S2SV> buffer_free ( dimensions ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 