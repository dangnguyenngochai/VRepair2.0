static int vorbis_finish_frame ( stb_vorbis * f , int len , int left , int right ) //<S2SV> { //<S2SV> int prev , i , j ; //<S2SV> if ( f -> previous_length ) { //<S2SV> int i , j , n = f -> previous_length ; //<S2SV> float * w = get_window ( f , n ) ; //<S2SV> for ( i = 0 ; i < f -> channels ; ++ i ) { //<S2SV> for ( j = 0 ; j < n ; ++ j ) //<S2SV> f -> channel_buffers [ i ] [ left + j ] = //<S2SV> f -> channel_buffers [ i ] [ left + j ] * w [ j ] + //<S2SV> f -> previous_window [ i ] [ j ] * w [ n - 1 - j ] ; //<S2SV> } //<S2SV> } //<S2SV> prev = f -> previous_length ; //<S2SV> f -> previous_length = len - right ; //<S2SV> for ( i = 0 ; i < f -> channels ; ++ i ) //<S2SV> for ( j = 0 ; right + j < len ; ++ j ) //<S2SV> f -> previous_window [ i ] [ j ] = f -> channel_buffers [ i ] [ right + j ] ; //<S2SV> if ( ! prev ) //<S2SV> return 0 ; //<S2SV> if ( len < right ) right = len ; //<S2SV> f -> samples_output += right - left ; //<S2SV> return right - left ; //<S2SV> } //<S2SV> 