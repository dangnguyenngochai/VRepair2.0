static gboolean //<S2SV> comics_check_decompress_command ( gchar * mime_type , //<S2SV> ComicsDocument * comics_document , //<S2SV> GError * * error ) //<S2SV> { //<S2SV> gboolean success ; //<S2SV> gchar * std_out , * std_err ; //<S2SV> gint retval ; //<S2SV> GError * err = NULL ; //<S2SV> if ( g_content_type_is_a ( mime_type , "application/x-cbr" ) || //<S2SV> g_content_type_is_a ( mime_type , "application/x-rar" ) ) { //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "unrar" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> success = //<S2SV> g_spawn_command_line_sync ( //<S2SV> comics_document -> selected_command , //<S2SV> & std_out , & std_err , //<S2SV> & retval , & err ) ; //<S2SV> if ( ! success ) { //<S2SV> g_propagate_error ( error , err ) ; //<S2SV> g_error_free ( err ) ; //<S2SV> return FALSE ; //<S2SV> } else if ( WIFEXITED ( retval ) ) { //<S2SV> if ( g_strrstr ( std_out , "freeware" ) != NULL ) //<S2SV> comics_document -> command_usage = RARLABS ; //<S2SV> else //<S2SV> comics_document -> command_usage = GNAUNRAR ; //<S2SV> g_free ( std_out ) ; //<S2SV> g_free ( std_err ) ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> } //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "unrar-free" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = GNAUNRAR ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "bsdtar" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = TAR ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> } else if ( g_content_type_is_a ( mime_type , "application/x-cbz" ) || //<S2SV> g_content_type_is_a ( mime_type , "application/zip" ) ) { //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "unzip" ) ; //<S2SV> comics_document -> alternative_command = //<S2SV> g_find_program_in_path ( "zipnote" ) ; //<S2SV> if ( comics_document -> selected_command && //<S2SV> comics_document -> alternative_command ) { //<S2SV> comics_document -> command_usage = UNZIP ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "7za" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = P7ZIP ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "7z" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = P7ZIP ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "bsdtar" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = TAR ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> } else if ( g_content_type_is_a ( mime_type , "application/x-cb7" ) || //<S2SV> g_content_type_is_a ( mime_type , "application/x-7z-compressed" ) ) { //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "7zr" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = P7ZIP ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "7za" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = P7ZIP ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "7z" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = P7ZIP ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "bsdtar" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = TAR ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> } else if ( g_content_type_is_a ( mime_type , "application/x-cbt" ) || //<S2SV> g_content_type_is_a ( mime_type , "application/x-tar" ) ) { //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "tar" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = TAR ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> comics_document -> selected_command = //<S2SV> g_find_program_in_path ( "bsdtar" ) ; //<S2SV> if ( comics_document -> selected_command ) { //<S2SV> comics_document -> command_usage = TAR ; //<S2SV> return TRUE ; //<S2SV> } //<S2SV> } else { //<S2SV> g_set_error ( error , //<S2SV> EV_DOCUMENT_ERROR , //<S2SV> EV_DOCUMENT_ERROR_INVALID , //<S2SV> _ ( "Not<S2SV_blank>a<S2SV_blank>comic<S2SV_blank>book<S2SV_blank>MIME<S2SV_blank>type:<S2SV_blank>%s" ) , //<S2SV> mime_type ) ; //<S2SV> return FALSE ; //<S2SV> } //<S2SV> g_set_error_literal ( error , //<S2SV> EV_DOCUMENT_ERROR , //<S2SV> EV_DOCUMENT_ERROR_INVALID , //<S2SV> _ ( "Canâ€™t<S2SV_blank>find<S2SV_blank>an<S2SV_blank>appropriate<S2SV_blank>command<S2SV_blank>to<S2SV_blank>" //<S2SV> "decompress<S2SV_blank>this<S2SV_blank>type<S2SV_blank>of<S2SV_blank>comic<S2SV_blank>book" ) ) ; //<S2SV> return FALSE ; //<S2SV> } //<S2SV> 