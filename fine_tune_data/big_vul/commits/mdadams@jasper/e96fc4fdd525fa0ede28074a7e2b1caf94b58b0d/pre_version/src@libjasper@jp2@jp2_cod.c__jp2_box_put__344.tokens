int jp2_box_put ( jp2_box_t * box , jas_stream_t * out ) //<S2SV> { //<S2SV> jas_stream_t * tmpstream ; //<S2SV> bool extlen ; //<S2SV> bool dataflag ; //<S2SV> tmpstream = 0 ; //<S2SV> dataflag = ! ( box -> info -> flags & ( JP2_BOX_SUPER | JP2_BOX_NODATA ) ) ; //<S2SV> if ( dataflag ) { //<S2SV> if ( ! ( tmpstream = jas_stream_memopen ( 0 , 0 ) ) ) { //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( box -> ops -> putdata ) { //<S2SV> if ( ( * box -> ops -> putdata ) ( box , tmpstream ) ) { //<S2SV> goto error ; //<S2SV> } //<S2SV> } //<S2SV> box -> len = jas_stream_tell ( tmpstream ) + JP2_BOX_HDRLEN ( false ) ; //<S2SV> jas_stream_rewind ( tmpstream ) ; //<S2SV> } //<S2SV> extlen = ( box -> len >= ( ( ( uint_fast64_t ) 1 ) << 32 ) ) != 0 ; //<S2SV> if ( jp2_putuint32 ( out , extlen ? 1 : box -> len ) ) { //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( jp2_putuint32 ( out , box -> type ) ) { //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( extlen ) { //<S2SV> if ( jp2_putuint64 ( out , box -> len ) ) { //<S2SV> goto error ; //<S2SV> } //<S2SV> } //<S2SV> if ( dataflag ) { //<S2SV> if ( jas_stream_copy ( out , tmpstream , box -> len - JP2_BOX_HDRLEN ( false ) ) ) { //<S2SV> goto error ; //<S2SV> } //<S2SV> jas_stream_close ( tmpstream ) ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> error : //<S2SV> if ( tmpstream ) { //<S2SV> jas_stream_close ( tmpstream ) ; //<S2SV> } //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 