static int jpc_siz_getparms ( jpc_ms_t * ms , jpc_cstate_t * cstate , //<S2SV> jas_stream_t * in ) //<S2SV> { //<S2SV> jpc_siz_t * siz = & ms -> parms . siz ; //<S2SV> unsigned int i ; //<S2SV> uint_fast8_t tmp ; //<S2SV> siz -> comps = 0 ; //<S2SV> cstate = 0 ; //<S2SV> if ( jpc_getuint16 ( in , & siz -> caps ) || //<S2SV> jpc_getuint32 ( in , & siz -> width ) || //<S2SV> jpc_getuint32 ( in , & siz -> height ) || //<S2SV> jpc_getuint32 ( in , & siz -> xoff ) || //<S2SV> jpc_getuint32 ( in , & siz -> yoff ) || //<S2SV> jpc_getuint32 ( in , & siz -> tilewidth ) || //<S2SV> jpc_getuint32 ( in , & siz -> tileheight ) || //<S2SV> jpc_getuint32 ( in , & siz -> tilexoff ) || //<S2SV> jpc_getuint32 ( in , & siz -> tileyoff ) || //<S2SV> jpc_getuint16 ( in , & siz -> numcomps ) ) { //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( ! siz -> width || ! siz -> height ) { //<S2SV> jas_eprintf ( "reference<S2SV_blank>grid<S2SV_blank>cannot<S2SV_blank>have<S2SV_blank>zero<S2SV_blank>area\\n" ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( ! siz -> tilewidth || ! siz -> tileheight ) { //<S2SV> jas_eprintf ( "tile<S2SV_blank>cannot<S2SV_blank>have<S2SV_blank>zero<S2SV_blank>area\\n" ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( ! siz -> numcomps || siz -> numcomps > 16384 ) { //<S2SV> jas_eprintf ( "number<S2SV_blank>of<S2SV_blank>components<S2SV_blank>not<S2SV_blank>in<S2SV_blank>permissible<S2SV_blank>range\\n" ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( siz -> xoff >= siz -> width ) { //<S2SV> jas_eprintf ( "XOsiz<S2SV_blank>not<S2SV_blank>in<S2SV_blank>permissible<S2SV_blank>range\\n" ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( siz -> yoff >= siz -> height ) { //<S2SV> jas_eprintf ( "YOsiz<S2SV_blank>not<S2SV_blank>in<S2SV_blank>permissible<S2SV_blank>range\\n" ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( siz -> tilexoff > siz -> xoff || siz -> tilexoff + siz -> tilewidth <= siz -> xoff ) { //<S2SV> jas_eprintf ( "XTOsiz<S2SV_blank>not<S2SV_blank>in<S2SV_blank>permissible<S2SV_blank>range\\n" ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( siz -> tileyoff > siz -> yoff || siz -> tileyoff + siz -> tileheight <= siz -> yoff ) { //<S2SV> jas_eprintf ( "YTOsiz<S2SV_blank>not<S2SV_blank>in<S2SV_blank>permissible<S2SV_blank>range\\n" ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( ! ( siz -> comps = jas_alloc2 ( siz -> numcomps , sizeof ( jpc_sizcomp_t ) ) ) ) { //<S2SV> goto error ; //<S2SV> } //<S2SV> for ( i = 0 ; i < siz -> numcomps ; ++ i ) { //<S2SV> if ( jpc_getuint8 ( in , & tmp ) || //<S2SV> jpc_getuint8 ( in , & siz -> comps [ i ] . hsamp ) || //<S2SV> jpc_getuint8 ( in , & siz -> comps [ i ] . vsamp ) ) { //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( siz -> comps [ i ] . hsamp == 0 || siz -> comps [ i ] . hsamp > 255 ) { //<S2SV> jas_eprintf ( "invalid<S2SV_blank>XRsiz<S2SV_blank>value<S2SV_blank>%d\\n" , siz -> comps [ i ] . hsamp ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( siz -> comps [ i ] . vsamp == 0 || siz -> comps [ i ] . vsamp > 255 ) { //<S2SV> jas_eprintf ( "invalid<S2SV_blank>YRsiz<S2SV_blank>value<S2SV_blank>%d\\n" , siz -> comps [ i ] . vsamp ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> siz -> comps [ i ] . sgnd = ( tmp >> 7 ) & 1 ; //<S2SV> siz -> comps [ i ] . prec = ( tmp & 0x7f ) + 1 ; //<S2SV> } //<S2SV> if ( jas_stream_eof ( in ) ) { //<S2SV> goto error ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> error : //<S2SV> if ( siz -> comps ) { //<S2SV> jas_free ( siz -> comps ) ; //<S2SV> } //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 