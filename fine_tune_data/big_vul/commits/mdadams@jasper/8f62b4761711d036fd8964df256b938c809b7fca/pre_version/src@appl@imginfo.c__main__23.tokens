int main ( int argc , char * * argv ) //<S2SV> { //<S2SV> int fmtid ; //<S2SV> int id ; //<S2SV> char * infile ; //<S2SV> jas_stream_t * instream ; //<S2SV> jas_image_t * image ; //<S2SV> int width ; //<S2SV> int height ; //<S2SV> int depth ; //<S2SV> int numcmpts ; //<S2SV> int verbose ; //<S2SV> char * fmtname ; //<S2SV> if ( jas_init ( ) ) { //<S2SV> abort ( ) ; //<S2SV> } //<S2SV> cmdname = argv [ 0 ] ; //<S2SV> infile = 0 ; //<S2SV> verbose = 0 ; //<S2SV> while ( ( id = jas_getopt ( argc , argv , opts ) ) >= 0 ) { //<S2SV> switch ( id ) { //<S2SV> case OPT_VERBOSE : //<S2SV> verbose = 1 ; //<S2SV> break ; //<S2SV> case OPT_VERSION : //<S2SV> printf ( "%s\\n" , JAS_VERSION ) ; //<S2SV> exit ( EXIT_SUCCESS ) ; //<S2SV> break ; //<S2SV> case OPT_INFILE : //<S2SV> infile = jas_optarg ; //<S2SV> break ; //<S2SV> case OPT_HELP : //<S2SV> default : //<S2SV> usage ( ) ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> if ( infile ) { //<S2SV> if ( ! ( instream = jas_stream_fopen ( infile , "rb" ) ) ) { //<S2SV> fprintf ( stderr , "cannot<S2SV_blank>open<S2SV_blank>input<S2SV_blank>image<S2SV_blank>file<S2SV_blank>%s\\n" , infile ) ; //<S2SV> exit ( EXIT_FAILURE ) ; //<S2SV> } //<S2SV> } else { //<S2SV> if ( ! ( instream = jas_stream_fdopen ( 0 , "rb" ) ) ) { //<S2SV> fprintf ( stderr , "cannot<S2SV_blank>open<S2SV_blank>standard<S2SV_blank>input\\n" ) ; //<S2SV> exit ( EXIT_FAILURE ) ; //<S2SV> } //<S2SV> } //<S2SV> if ( ( fmtid = jas_image_getfmt ( instream ) ) < 0 ) { //<S2SV> fprintf ( stderr , "unknown<S2SV_blank>image<S2SV_blank>format\\n" ) ; //<S2SV> } //<S2SV> if ( ! ( image = jas_image_decode ( instream , fmtid , 0 ) ) ) { //<S2SV> fprintf ( stderr , "cannot<S2SV_blank>load<S2SV_blank>image\\n" ) ; //<S2SV> return EXIT_FAILURE ; //<S2SV> } //<S2SV> jas_stream_close ( instream ) ; //<S2SV> numcmpts = jas_image_numcmpts ( image ) ; //<S2SV> width = jas_image_cmptwidth ( image , 0 ) ; //<S2SV> height = jas_image_cmptheight ( image , 0 ) ; //<S2SV> depth = jas_image_cmptprec ( image , 0 ) ; //<S2SV> if ( ! ( fmtname = jas_image_fmttostr ( fmtid ) ) ) { //<S2SV> abort ( ) ; //<S2SV> } //<S2SV> printf ( "%s<S2SV_blank>%d<S2SV_blank>%d<S2SV_blank>%d<S2SV_blank>%d<S2SV_blank>%ld\\n" , fmtname , numcmpts , width , height , depth , ( long ) jas_image_rawsize ( image ) ) ; //<S2SV> jas_image_destroy ( image ) ; //<S2SV> jas_image_clearfmts ( ) ; //<S2SV> return EXIT_SUCCESS ; //<S2SV> } //<S2SV> 