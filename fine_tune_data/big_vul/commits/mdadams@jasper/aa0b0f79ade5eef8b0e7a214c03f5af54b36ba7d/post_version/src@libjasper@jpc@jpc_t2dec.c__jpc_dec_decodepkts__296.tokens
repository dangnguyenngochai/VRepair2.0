int jpc_dec_decodepkts ( jpc_dec_t * dec , jas_stream_t * pkthdrstream , jas_stream_t * in ) //<S2SV> { //<S2SV> jpc_dec_tile_t * tile ; //<S2SV> jpc_pi_t * pi ; //<S2SV> int ret ; //<S2SV> tile = dec -> curtile ; //<S2SV> pi = tile -> pi ; //<S2SV> for ( ; ; ) { //<S2SV> if ( ! tile -> pkthdrstream || jas_stream_peekc ( tile -> pkthdrstream ) == EOF ) { //<S2SV> switch ( jpc_dec_lookahead ( in ) ) { //<S2SV> case JPC_MS_EOC : //<S2SV> case JPC_MS_SOT : //<S2SV> return 0 ; //<S2SV> break ; //<S2SV> case JPC_MS_SOP : //<S2SV> case JPC_MS_EPH : //<S2SV> case 0 : //<S2SV> break ; //<S2SV> default : //<S2SV> return - 1 ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> if ( ( ret = jpc_pi_next ( pi ) ) ) { //<S2SV> return ret ; //<S2SV> } //<S2SV> if ( dec -> maxpkts >= 0 && dec -> numpkts >= dec -> maxpkts ) { //<S2SV> jas_eprintf ( "warning:<S2SV_blank>stopping<S2SV_blank>decode<S2SV_blank>prematurely<S2SV_blank>as<S2SV_blank>requested\\n" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( jas_getdbglevel ( ) >= 1 ) { //<S2SV> jas_eprintf ( "packet<S2SV_blank>offset=%08ld<S2SV_blank>prg=%d<S2SV_blank>cmptno=%02d<S2SV_blank>" //<S2SV> "rlvlno=%02d<S2SV_blank>prcno=%03d<S2SV_blank>lyrno=%02d\\n" , ( long ) //<S2SV> jas_stream_getrwcount ( in ) , jpc_pi_prg ( pi ) , jpc_pi_cmptno ( pi ) , //<S2SV> jpc_pi_rlvlno ( pi ) , jpc_pi_prcno ( pi ) , jpc_pi_lyrno ( pi ) ) ; //<S2SV> } //<S2SV> if ( jpc_dec_decodepkt ( dec , pkthdrstream , in , jpc_pi_cmptno ( pi ) , //<S2SV> jpc_pi_rlvlno ( pi ) , jpc_pi_prcno ( pi ) , jpc_pi_lyrno ( pi ) ) ) { //<S2SV> return - 1 ; //<S2SV> } //<S2SV> ++ dec -> numpkts ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 