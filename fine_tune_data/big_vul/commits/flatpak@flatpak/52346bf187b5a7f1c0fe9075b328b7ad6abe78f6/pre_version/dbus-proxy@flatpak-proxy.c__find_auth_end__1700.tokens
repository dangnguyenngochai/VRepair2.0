static gssize //<S2SV> find_auth_end ( FlatpakProxyClient * client , Buffer * buffer ) //<S2SV> { //<S2SV> guchar * match ; //<S2SV> int i ; //<S2SV> if ( client -> auth_end_offset > 0 ) //<S2SV> { //<S2SV> gsize left = strlen ( AUTH_END_STRING ) - client -> auth_end_offset ; //<S2SV> gsize to_match = MIN ( left , buffer -> pos ) ; //<S2SV> if ( memcmp ( buffer -> data , & AUTH_END_STRING [ client -> auth_end_offset ] , to_match ) == 0 ) //<S2SV> { //<S2SV> client -> auth_end_offset += to_match ; //<S2SV> if ( client -> auth_end_offset == strlen ( AUTH_END_STRING ) ) //<S2SV> return to_match ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> client -> auth_end_offset = - 1 ; //<S2SV> } //<S2SV> match = memmem ( buffer , buffer -> pos , //<S2SV> AUTH_END_STRING , strlen ( AUTH_END_STRING ) ) ; //<S2SV> if ( match != NULL ) //<S2SV> return match - buffer -> data + strlen ( AUTH_END_STRING ) ; //<S2SV> for ( i = MIN ( strlen ( AUTH_END_STRING ) - 1 , buffer -> pos ) ; i > 0 ; i -- ) //<S2SV> { //<S2SV> if ( memcmp ( buffer -> data + buffer -> pos - i , AUTH_END_STRING , i ) == 0 ) //<S2SV> { //<S2SV> client -> auth_end_offset = i ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 