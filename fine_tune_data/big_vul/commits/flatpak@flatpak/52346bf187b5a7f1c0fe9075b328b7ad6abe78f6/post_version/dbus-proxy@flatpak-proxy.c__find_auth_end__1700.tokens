static gssize //<S2SV> find_auth_end ( FlatpakProxyClient * client , Buffer * buffer ) //<S2SV> { //<S2SV> goffset offset = 0 ; //<S2SV> gsize original_size = client -> auth_buffer -> len ; //<S2SV> g_byte_array_append ( client -> auth_buffer , buffer -> data , buffer -> pos ) ; //<S2SV> while ( TRUE ) //<S2SV> { //<S2SV> guint8 * line_start = client -> auth_buffer -> data + offset ; //<S2SV> gsize remaining_data = client -> auth_buffer -> len - offset ; //<S2SV> guint8 * line_end ; //<S2SV> line_end = memmem ( line_start , remaining_data , //<S2SV> AUTH_LINE_SENTINEL , strlen ( AUTH_LINE_SENTINEL ) ) ; //<S2SV> if ( line_end ) //<S2SV> { //<S2SV> offset = ( line_end + strlen ( AUTH_LINE_SENTINEL ) - line_start ) ; //<S2SV> if ( ! auth_line_is_valid ( line_start , line_end ) ) //<S2SV> return FIND_AUTH_END_ABORT ; //<S2SV> * line_end = 0 ; //<S2SV> if ( auth_line_is_begin ( line_start ) ) //<S2SV> return offset - original_size ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> g_byte_array_remove_range ( client -> auth_buffer , 0 , offset ) ; //<S2SV> if ( client -> auth_buffer -> len >= 16 * 1024 ) //<S2SV> return FIND_AUTH_END_ABORT ; //<S2SV> return FIND_AUTH_END_CONTINUE ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> 