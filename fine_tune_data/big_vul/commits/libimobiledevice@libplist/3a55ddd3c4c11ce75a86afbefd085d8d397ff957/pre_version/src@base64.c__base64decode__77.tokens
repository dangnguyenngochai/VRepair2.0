unsigned char * base64decode ( const char * buf , size_t * size ) //<S2SV> { //<S2SV> if ( ! buf || ! size ) return NULL ; //<S2SV> size_t len = ( * size > 0 ) ? * size : strlen ( buf ) ; //<S2SV> if ( len <= 0 ) return NULL ; //<S2SV> unsigned char * outbuf = ( unsigned char * ) malloc ( ( len / 4 ) * 3 + 3 ) ; //<S2SV> const char * ptr = buf ; //<S2SV> int p = 0 ; //<S2SV> size_t l = 0 ; //<S2SV> do { //<S2SV> ptr += strspn ( ptr , "\\r\\n\\t<S2SV_blank>" ) ; //<S2SV> if ( * ptr == '\\0' || ptr >= buf + len ) { //<S2SV> break ; //<S2SV> } //<S2SV> l = strcspn ( ptr , "\\r\\n\\t<S2SV_blank>" ) ; //<S2SV> if ( l > 3 && ptr + l <= buf + len ) { //<S2SV> p += base64decode_block ( outbuf + p , ptr , l ) ; //<S2SV> ptr += l ; //<S2SV> } else { //<S2SV> break ; //<S2SV> } //<S2SV> } while ( 1 ) ; //<S2SV> outbuf [ p ] = 0 ; //<S2SV> * size = p ; //<S2SV> return outbuf ; //<S2SV> } //<S2SV> 