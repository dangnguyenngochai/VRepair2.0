void //<S2SV> rs_filter_graph ( RSFilter * filter ) //<S2SV> { //<S2SV> g_return_if_fail ( RS_IS_FILTER ( filter ) ) ; //<S2SV> gchar * dot_filename ; //<S2SV> gchar * png_filename ; //<S2SV> gchar * command_line ; //<S2SV> GString * str = g_string_new ( "digraph<S2SV_blank>G<S2SV_blank>{\\n" ) ; //<S2SV> rs_filter_graph_helper ( str , filter ) ; //<S2SV> g_string_append_printf ( str , "}\\n" ) ; //<S2SV> dot_filename = g_strdup_printf ( "/tmp/rs-filter-graph.%u" , g_random_int ( ) ) ; //<S2SV> png_filename = g_strdup_printf ( "%s.%u.png" , dot_filename , g_random_int ( ) ) ; //<S2SV> g_file_set_contents ( dot_filename , str -> str , str -> len , NULL ) ; //<S2SV> command_line = g_strdup_printf ( "dot<S2SV_blank>-Tpng<S2SV_blank>>%s<S2SV_blank><%s" , png_filename , dot_filename ) ; //<S2SV> if ( 0 != system ( command_line ) ) //<S2SV> g_warning ( "Calling<S2SV_blank>dot<S2SV_blank>failed" ) ; //<S2SV> g_free ( command_line ) ; //<S2SV> command_line = g_strdup_printf ( "gnome-open<S2SV_blank>%s" , png_filename ) ; //<S2SV> if ( 0 != system ( command_line ) ) //<S2SV> g_warning ( "Calling<S2SV_blank>gnome-open<S2SV_blank>failed." ) ; //<S2SV> g_free ( command_line ) ; //<S2SV> g_free ( dot_filename ) ; //<S2SV> g_free ( png_filename ) ; //<S2SV> g_string_free ( str , TRUE ) ; //<S2SV> } //<S2SV> 