static int sysMapFD ( int fd , MemMapping * pMap ) //<S2SV> { //<S2SV> off_t start ; //<S2SV> size_t length ; //<S2SV> void * memPtr ; //<S2SV> assert ( pMap != NULL ) ; //<S2SV> if ( getFileStartAndLength ( fd , & start , & length ) < 0 ) //<S2SV> return - 1 ; //<S2SV> memPtr = mmap ( NULL , length , PROT_READ , MAP_PRIVATE , fd , start ) ; //<S2SV> if ( memPtr == MAP_FAILED ) { //<S2SV> LOGW ( "mmap(%d,<S2SV_blank>R,<S2SV_blank>PRIVATE,<S2SV_blank>%d,<S2SV_blank>%d)<S2SV_blank>failed:<S2SV_blank>%s\\n" , ( int ) length , //<S2SV> fd , ( int ) start , strerror ( errno ) ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> pMap -> addr = memPtr ; //<S2SV> pMap -> length = length ; //<S2SV> pMap -> range_count = 1 ; //<S2SV> pMap -> ranges = malloc ( sizeof ( MappedRange ) ) ; //<S2SV> pMap -> ranges [ 0 ] . addr = memPtr ; //<S2SV> pMap -> ranges [ 0 ] . length = length ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 