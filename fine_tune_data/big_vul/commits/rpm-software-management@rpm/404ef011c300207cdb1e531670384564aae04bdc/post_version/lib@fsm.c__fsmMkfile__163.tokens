static int fsmMkfile ( rpmfi fi , const char * dest , rpmfiles files , //<S2SV> rpmpsm psm , int nodigest , int * setmeta , //<S2SV> int * firsthardlink ) //<S2SV> { //<S2SV> int rc = 0 ; //<S2SV> int numHardlinks = rpmfiFNlink ( fi ) ; //<S2SV> if ( numHardlinks > 1 ) { //<S2SV> if ( * firsthardlink < 0 ) { //<S2SV> * firsthardlink = rpmfiFX ( fi ) ; //<S2SV> rc = expandRegular ( fi , dest , psm , 1 , nodigest , 1 ) ; //<S2SV> } else { //<S2SV> char * fn = rpmfilesFN ( files , * firsthardlink ) ; //<S2SV> rc = link ( fn , dest ) ; //<S2SV> if ( rc < 0 ) { //<S2SV> rc = RPMERR_LINK_FAILED ; //<S2SV> } //<S2SV> free ( fn ) ; //<S2SV> } //<S2SV> } //<S2SV> if ( numHardlinks <= 1 ) { //<S2SV> if ( ! rc ) //<S2SV> rc = expandRegular ( fi , dest , psm , 1 , nodigest , 0 ) ; //<S2SV> } else if ( rpmfiArchiveHasContent ( fi ) ) { //<S2SV> if ( ! rc ) //<S2SV> rc = expandRegular ( fi , dest , psm , 0 , nodigest , 0 ) ; //<S2SV> * firsthardlink = - 1 ; //<S2SV> } else { //<S2SV> * setmeta = 0 ; //<S2SV> } //<S2SV> return rc ; //<S2SV> } //<S2SV> 