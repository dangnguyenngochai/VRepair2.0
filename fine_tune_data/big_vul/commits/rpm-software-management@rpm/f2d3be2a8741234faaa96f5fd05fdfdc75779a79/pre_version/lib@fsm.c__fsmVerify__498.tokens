static int fsmVerify ( const char * path , rpmfi fi ) //<S2SV> { //<S2SV> int rc ; //<S2SV> int saveerrno = errno ; //<S2SV> struct stat dsb ; //<S2SV> mode_t mode = rpmfiFMode ( fi ) ; //<S2SV> rc = fsmStat ( path , 1 , & dsb ) ; //<S2SV> if ( rc ) //<S2SV> return rc ; //<S2SV> if ( S_ISREG ( mode ) ) { //<S2SV> char * rmpath = rstrscat ( NULL , path , "-RPMDELETE" , NULL ) ; //<S2SV> rc = fsmRename ( path , rmpath ) ; //<S2SV> if ( ! rc ) //<S2SV> ( void ) fsmUnlink ( rmpath ) ; //<S2SV> else //<S2SV> rc = RPMERR_UNLINK_FAILED ; //<S2SV> free ( rmpath ) ; //<S2SV> return ( rc ? rc : RPMERR_ENOENT ) ; //<S2SV> } else if ( S_ISDIR ( mode ) ) { //<S2SV> if ( S_ISDIR ( dsb . st_mode ) ) return 0 ; //<S2SV> if ( S_ISLNK ( dsb . st_mode ) ) { //<S2SV> rc = fsmStat ( path , 0 , & dsb ) ; //<S2SV> if ( rc == RPMERR_ENOENT ) rc = 0 ; //<S2SV> if ( rc ) return rc ; //<S2SV> errno = saveerrno ; //<S2SV> if ( S_ISDIR ( dsb . st_mode ) ) return 0 ; //<S2SV> } //<S2SV> } else if ( S_ISLNK ( mode ) ) { //<S2SV> if ( S_ISLNK ( dsb . st_mode ) ) { //<S2SV> char buf [ 8 * BUFSIZ ] ; //<S2SV> size_t len ; //<S2SV> rc = fsmReadLink ( path , buf , 8 * BUFSIZ , & len ) ; //<S2SV> errno = saveerrno ; //<S2SV> if ( rc ) return rc ; //<S2SV> if ( rstreq ( rpmfiFLink ( fi ) , buf ) ) return 0 ; //<S2SV> } //<S2SV> } else if ( S_ISFIFO ( mode ) ) { //<S2SV> if ( S_ISFIFO ( dsb . st_mode ) ) return 0 ; //<S2SV> } else if ( S_ISCHR ( mode ) || S_ISBLK ( mode ) ) { //<S2SV> if ( ( S_ISCHR ( dsb . st_mode ) || S_ISBLK ( dsb . st_mode ) ) && //<S2SV> ( dsb . st_rdev == rpmfiFRdev ( fi ) ) ) return 0 ; //<S2SV> } else if ( S_ISSOCK ( mode ) ) { //<S2SV> if ( S_ISSOCK ( dsb . st_mode ) ) return 0 ; //<S2SV> } //<S2SV> rc = fsmUnlink ( path ) ; //<S2SV> if ( rc == 0 ) rc = RPMERR_ENOENT ; //<S2SV> return ( rc ? rc : RPMERR_ENOENT ) ; //<S2SV> } //<S2SV> 