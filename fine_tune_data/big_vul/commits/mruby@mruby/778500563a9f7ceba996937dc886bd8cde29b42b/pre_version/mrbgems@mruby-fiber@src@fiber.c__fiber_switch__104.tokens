static mrb_value //<S2SV> fiber_switch ( mrb_state * mrb , mrb_value self , mrb_int len , const mrb_value * a , mrb_bool resume , mrb_bool vmexec ) //<S2SV> { //<S2SV> struct mrb_context * c = fiber_check ( mrb , self ) ; //<S2SV> struct mrb_context * old_c = mrb -> c ; //<S2SV> mrb_value value ; //<S2SV> fiber_check_cfunc ( mrb , c ) ; //<S2SV> if ( resume && c -> status == MRB_FIBER_TRANSFERRED ) { //<S2SV> mrb_raise ( mrb , E_FIBER_ERROR , "resuming<S2SV_blank>transferred<S2SV_blank>fiber" ) ; //<S2SV> } //<S2SV> if ( c -> status == MRB_FIBER_RUNNING || c -> status == MRB_FIBER_RESUMED ) { //<S2SV> mrb_raise ( mrb , E_FIBER_ERROR , "double<S2SV_blank>resume<S2SV_blank>(fib)" ) ; //<S2SV> } //<S2SV> if ( c -> status == MRB_FIBER_TERMINATED ) { //<S2SV> mrb_raise ( mrb , E_FIBER_ERROR , "resuming<S2SV_blank>dead<S2SV_blank>fiber" ) ; //<S2SV> } //<S2SV> mrb -> c -> status = resume ? MRB_FIBER_RESUMED : MRB_FIBER_TRANSFERRED ; //<S2SV> c -> prev = resume ? mrb -> c : ( c -> prev ? c -> prev : mrb -> root_c ) ; //<S2SV> if ( c -> status == MRB_FIBER_CREATED ) { //<S2SV> mrb_value * b , * e ; //<S2SV> if ( len >= c -> stend - c -> stack ) { //<S2SV> mrb_raise ( mrb , E_FIBER_ERROR , "too<S2SV_blank>many<S2SV_blank>arguments<S2SV_blank>to<S2SV_blank>fiber" ) ; //<S2SV> } //<S2SV> b = c -> stack + 1 ; //<S2SV> e = b + len ; //<S2SV> while ( b < e ) { //<S2SV> * b ++ = * a ++ ; //<S2SV> } //<S2SV> c -> cibase -> argc = ( int ) len ; //<S2SV> value = c -> stack [ 0 ] = MRB_PROC_ENV ( c -> ci -> proc ) -> stack [ 0 ] ; //<S2SV> } //<S2SV> else { //<S2SV> value = fiber_result ( mrb , a , len ) ; //<S2SV> } //<S2SV> fiber_switch_context ( mrb , c ) ; //<S2SV> if ( vmexec ) { //<S2SV> c -> vmexec = TRUE ; //<S2SV> value = mrb_vm_exec ( mrb , c -> ci [ - 1 ] . proc , c -> ci -> pc ) ; //<S2SV> mrb -> c = old_c ; //<S2SV> } //<S2SV> else { //<S2SV> MARK_CONTEXT_MODIFY ( c ) ; //<S2SV> } //<S2SV> return value ; //<S2SV> } //<S2SV> 