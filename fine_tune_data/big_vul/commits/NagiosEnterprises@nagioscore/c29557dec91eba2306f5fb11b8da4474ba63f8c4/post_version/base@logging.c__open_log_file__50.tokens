static FILE * open_log_file ( void ) //<S2SV> { //<S2SV> int fh ; //<S2SV> struct stat st ; //<S2SV> if ( log_fp ) //<S2SV> return log_fp ; //<S2SV> if ( ( fh = open ( log_file , O_RDWR | O_APPEND | O_CREAT | O_NOFOLLOW , S_IRUSR | S_IWUSR ) ) == - 1 ) { //<S2SV> if ( daemon_mode == FALSE ) //<S2SV> printf ( "Warning:<S2SV_blank>Cannot<S2SV_blank>open<S2SV_blank>log<S2SV_blank>file<S2SV_blank>\'%s\'<S2SV_blank>for<S2SV_blank>writing\\n" , log_file ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> log_fp = fdopen ( fh , "a+" ) ; //<S2SV> if ( log_fp == NULL ) { //<S2SV> if ( daemon_mode == FALSE ) //<S2SV> printf ( "Warning:<S2SV_blank>Cannot<S2SV_blank>open<S2SV_blank>log<S2SV_blank>file<S2SV_blank>\'%s\'<S2SV_blank>for<S2SV_blank>writing\\n" , log_file ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> if ( ( fstat ( fh , & st ) ) == - 1 ) { //<S2SV> log_fp = NULL ; //<S2SV> close ( fh ) ; //<S2SV> if ( daemon_mode == FALSE ) //<S2SV> printf ( "Warning:<S2SV_blank>Cannot<S2SV_blank>fstat<S2SV_blank>log<S2SV_blank>file<S2SV_blank>\'%s\'\\n" , log_file ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> if ( st . st_nlink != 1 || ( st . st_mode & S_IFMT ) != S_IFREG ) { //<S2SV> log_fp = NULL ; //<S2SV> close ( fh ) ; //<S2SV> if ( daemon_mode == FALSE ) //<S2SV> printf ( "Warning:<S2SV_blank>log<S2SV_blank>file<S2SV_blank>\'%s\'<S2SV_blank>has<S2SV_blank>an<S2SV_blank>invalid<S2SV_blank>mode\\n" , log_file ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> ( void ) fcntl ( fileno ( log_fp ) , F_SETFD , FD_CLOEXEC ) ; //<S2SV> return log_fp ; //<S2SV> } //<S2SV> 