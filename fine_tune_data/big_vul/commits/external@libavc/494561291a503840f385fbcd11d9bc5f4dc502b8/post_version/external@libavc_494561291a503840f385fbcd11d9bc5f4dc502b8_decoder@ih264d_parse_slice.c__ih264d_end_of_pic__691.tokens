WORD32 ih264d_end_of_pic ( dec_struct_t * ps_dec ) //<S2SV> { //<S2SV> dec_slice_params_t * ps_cur_slice = ps_dec -> ps_cur_slice ; //<S2SV> WORD32 ret ; //<S2SV> { //<S2SV> dec_err_status_t * ps_err = ps_dec -> ps_dec_err_status ; //<S2SV> if ( ps_err -> u1_err_flag & REJECT_CUR_PIC ) //<S2SV> { //<S2SV> ih264d_err_pic_dispbuf_mgr ( ps_dec ) ; //<S2SV> return ERROR_NEW_FRAME_EXPECTED ; //<S2SV> } //<S2SV> } //<S2SV> H264_MUTEX_LOCK ( & ps_dec -> process_disp_mutex ) ; //<S2SV> ret = ih264d_end_of_pic_processing ( ps_dec ) ; //<S2SV> if ( ret != OK ) //<S2SV> return ret ; //<S2SV> H264_MUTEX_UNLOCK ( & ps_dec -> process_disp_mutex ) ; //<S2SV> return OK ; //<S2SV> } //<S2SV> 