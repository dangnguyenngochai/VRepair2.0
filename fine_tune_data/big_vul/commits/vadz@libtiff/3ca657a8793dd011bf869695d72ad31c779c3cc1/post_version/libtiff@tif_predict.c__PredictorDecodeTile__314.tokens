static int //<S2SV> PredictorDecodeTile ( TIFF * tif , uint8 * op0 , tmsize_t occ0 , uint16 s ) //<S2SV> { //<S2SV> TIFFPredictorState * sp = PredictorState ( tif ) ; //<S2SV> assert ( sp != NULL ) ; //<S2SV> assert ( sp -> decodetile != NULL ) ; //<S2SV> if ( ( * sp -> decodetile ) ( tif , op0 , occ0 , s ) ) { //<S2SV> tmsize_t rowsize = sp -> rowsize ; //<S2SV> assert ( rowsize > 0 ) ; //<S2SV> if ( ( occ0 % rowsize ) != 0 ) //<S2SV> { //<S2SV> TIFFErrorExt ( tif -> tif_clientdata , "PredictorDecodeTile" , //<S2SV> "%s" , "occ0%rowsize<S2SV_blank>!=<S2SV_blank>0" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> assert ( sp -> decodepfunc != NULL ) ; //<S2SV> while ( occ0 > 0 ) { //<S2SV> if ( ! ( * sp -> decodepfunc ) ( tif , op0 , rowsize ) ) //<S2SV> return 0 ; //<S2SV> occ0 -= rowsize ; //<S2SV> op0 += rowsize ; //<S2SV> } //<S2SV> return 1 ; //<S2SV> } else //<S2SV> return 0 ; //<S2SV> } //<S2SV> 