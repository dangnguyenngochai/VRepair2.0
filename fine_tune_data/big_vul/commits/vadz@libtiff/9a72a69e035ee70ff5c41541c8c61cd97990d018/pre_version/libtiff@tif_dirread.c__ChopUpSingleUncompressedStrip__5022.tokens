static void //<S2SV> ChopUpSingleUncompressedStrip ( TIFF * tif ) //<S2SV> { //<S2SV> register TIFFDirectory * td = & tif -> tif_dir ; //<S2SV> uint64 bytecount ; //<S2SV> uint64 offset ; //<S2SV> uint32 rowblock ; //<S2SV> uint64 rowblockbytes ; //<S2SV> uint64 stripbytes ; //<S2SV> uint32 strip ; //<S2SV> uint64 nstrips64 ; //<S2SV> uint32 nstrips32 ; //<S2SV> uint32 rowsperstrip ; //<S2SV> uint64 * newcounts ; //<S2SV> uint64 * newoffsets ; //<S2SV> bytecount = td -> td_stripbytecount [ 0 ] ; //<S2SV> offset = td -> td_stripoffset [ 0 ] ; //<S2SV> assert ( td -> td_planarconfig == PLANARCONFIG_CONTIG ) ; //<S2SV> if ( ( td -> td_photometric == PHOTOMETRIC_YCBCR ) && //<S2SV> ( ! isUpSampled ( tif ) ) ) //<S2SV> rowblock = td -> td_ycbcrsubsampling [ 1 ] ; //<S2SV> else //<S2SV> rowblock = 1 ; //<S2SV> rowblockbytes = TIFFVTileSize64 ( tif , rowblock ) ; //<S2SV> if ( rowblockbytes > STRIP_SIZE_DEFAULT ) { //<S2SV> stripbytes = rowblockbytes ; //<S2SV> rowsperstrip = rowblock ; //<S2SV> } else if ( rowblockbytes > 0 ) { //<S2SV> uint32 rowblocksperstrip ; //<S2SV> rowblocksperstrip = ( uint32 ) ( STRIP_SIZE_DEFAULT / rowblockbytes ) ; //<S2SV> rowsperstrip = rowblocksperstrip * rowblock ; //<S2SV> stripbytes = rowblocksperstrip * rowblockbytes ; //<S2SV> } //<S2SV> else //<S2SV> return ; //<S2SV> if ( rowsperstrip >= td -> td_rowsperstrip ) //<S2SV> return ; //<S2SV> nstrips64 = TIFFhowmany_64 ( bytecount , stripbytes ) ; //<S2SV> if ( ( nstrips64 == 0 ) || ( nstrips64 > 0xFFFFFFFF ) ) //<S2SV> return ; //<S2SV> nstrips32 = ( uint32 ) nstrips64 ; //<S2SV> newcounts = ( uint64 * ) _TIFFCheckMalloc ( tif , nstrips32 , sizeof ( uint64 ) , //<S2SV> "for<S2SV_blank>chopped<S2SV_blank>\\"StripByteCounts\\"<S2SV_blank>array" ) ; //<S2SV> newoffsets = ( uint64 * ) _TIFFCheckMalloc ( tif , nstrips32 , sizeof ( uint64 ) , //<S2SV> "for<S2SV_blank>chopped<S2SV_blank>\\"StripOffsets\\"<S2SV_blank>array" ) ; //<S2SV> if ( newcounts == NULL || newoffsets == NULL ) { //<S2SV> if ( newcounts != NULL ) //<S2SV> _TIFFfree ( newcounts ) ; //<S2SV> if ( newoffsets != NULL ) //<S2SV> _TIFFfree ( newoffsets ) ; //<S2SV> return ; //<S2SV> } //<S2SV> for ( strip = 0 ; strip < nstrips32 ; strip ++ ) { //<S2SV> if ( stripbytes > bytecount ) //<S2SV> stripbytes = bytecount ; //<S2SV> newcounts [ strip ] = stripbytes ; //<S2SV> newoffsets [ strip ] = offset ; //<S2SV> offset += stripbytes ; //<S2SV> bytecount -= stripbytes ; //<S2SV> } //<S2SV> td -> td_stripsperimage = td -> td_nstrips = nstrips32 ; //<S2SV> TIFFSetField ( tif , TIFFTAG_ROWSPERSTRIP , rowsperstrip ) ; //<S2SV> _TIFFfree ( td -> td_stripbytecount ) ; //<S2SV> _TIFFfree ( td -> td_stripoffset ) ; //<S2SV> td -> td_stripbytecount = newcounts ; //<S2SV> td -> td_stripoffset = newoffsets ; //<S2SV> td -> td_stripbytecountsorted = 1 ; //<S2SV> } //<S2SV> 