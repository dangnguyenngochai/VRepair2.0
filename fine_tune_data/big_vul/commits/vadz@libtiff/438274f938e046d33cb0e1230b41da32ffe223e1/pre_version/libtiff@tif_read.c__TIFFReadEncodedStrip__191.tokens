tmsize_t //<S2SV> TIFFReadEncodedStrip ( TIFF * tif , uint32 strip , void * buf , tmsize_t size ) //<S2SV> { //<S2SV> static const char module [ ] = "TIFFReadEncodedStrip" ; //<S2SV> TIFFDirectory * td = & tif -> tif_dir ; //<S2SV> uint32 rowsperstrip ; //<S2SV> uint32 stripsperplane ; //<S2SV> uint32 stripinplane ; //<S2SV> uint16 plane ; //<S2SV> uint32 rows ; //<S2SV> tmsize_t stripsize ; //<S2SV> if ( ! TIFFCheckRead ( tif , 0 ) ) //<S2SV> return ( ( tmsize_t ) ( - 1 ) ) ; //<S2SV> if ( strip >= td -> td_nstrips ) //<S2SV> { //<S2SV> TIFFErrorExt ( tif -> tif_clientdata , module , //<S2SV> "%lu:<S2SV_blank>Strip<S2SV_blank>out<S2SV_blank>of<S2SV_blank>range,<S2SV_blank>max<S2SV_blank>%lu" , ( unsigned long ) strip , //<S2SV> ( unsigned long ) td -> td_nstrips ) ; //<S2SV> return ( ( tmsize_t ) ( - 1 ) ) ; //<S2SV> } //<S2SV> rowsperstrip = td -> td_rowsperstrip ; //<S2SV> if ( rowsperstrip > td -> td_imagelength ) //<S2SV> rowsperstrip = td -> td_imagelength ; //<S2SV> stripsperplane = ( ( td -> td_imagelength + rowsperstrip - 1 ) / rowsperstrip ) ; //<S2SV> stripinplane = ( strip % stripsperplane ) ; //<S2SV> plane = ( uint16 ) ( strip / stripsperplane ) ; //<S2SV> rows = td -> td_imagelength - stripinplane * rowsperstrip ; //<S2SV> if ( rows > rowsperstrip ) //<S2SV> rows = rowsperstrip ; //<S2SV> stripsize = TIFFVStripSize ( tif , rows ) ; //<S2SV> if ( stripsize == 0 ) //<S2SV> return ( ( tmsize_t ) ( - 1 ) ) ; //<S2SV> if ( td -> td_compression == COMPRESSION_NONE && //<S2SV> size != ( tmsize_t ) ( - 1 ) && size >= stripsize && //<S2SV> ! isMapped ( tif ) && //<S2SV> ( ( tif -> tif_flags & TIFF_NOREADRAW ) == 0 ) ) //<S2SV> { //<S2SV> if ( TIFFReadRawStrip1 ( tif , strip , buf , stripsize , module ) != stripsize ) //<S2SV> return ( ( tmsize_t ) ( - 1 ) ) ; //<S2SV> if ( ! isFillOrder ( tif , td -> td_fillorder ) && //<S2SV> ( tif -> tif_flags & TIFF_NOBITREV ) == 0 ) //<S2SV> TIFFReverseBits ( buf , stripsize ) ; //<S2SV> ( * tif -> tif_postdecode ) ( tif , buf , stripsize ) ; //<S2SV> return ( stripsize ) ; //<S2SV> } //<S2SV> if ( ( size != ( tmsize_t ) ( - 1 ) ) && ( size < stripsize ) ) //<S2SV> stripsize = size ; //<S2SV> if ( ! TIFFFillStrip ( tif , strip ) ) //<S2SV> return ( ( tmsize_t ) ( - 1 ) ) ; //<S2SV> if ( ( * tif -> tif_decodestrip ) ( tif , buf , stripsize , plane ) <= 0 ) //<S2SV> return ( ( tmsize_t ) ( - 1 ) ) ; //<S2SV> ( * tif -> tif_postdecode ) ( tif , buf , stripsize ) ; //<S2SV> return ( stripsize ) ; //<S2SV> } //<S2SV> 