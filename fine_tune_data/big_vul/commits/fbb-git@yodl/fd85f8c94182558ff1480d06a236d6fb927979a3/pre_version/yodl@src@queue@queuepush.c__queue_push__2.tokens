void queue_push ( register Queue * qp , size_t extra_length , char const * info ) //<S2SV> { //<S2SV> register char * cp ; //<S2SV> size_t memory_length ; //<S2SV> size_t available_length ; //<S2SV> size_t begin_length ; //<S2SV> size_t n_begin ; //<S2SV> size_t q_length ; //<S2SV> if ( ! extra_length ) //<S2SV> return ; //<S2SV> memory_length = qp -> d_memory_end - qp -> d_memory ; //<S2SV> q_length = //<S2SV> qp -> d_read <= qp -> d_write ? //<S2SV> ( size_t ) ( qp -> d_write - qp -> d_read ) //<S2SV> : //<S2SV> memory_length - ( qp -> d_read - qp -> d_write ) ; //<S2SV> available_length = memory_length - q_length - 1 ; //<S2SV> if ( message_show ( MSG_INFO ) ) //<S2SV> message ( "push_front<S2SV_blank>%u<S2SV_blank>bytes<S2SV_blank>in<S2SV_blank>`%s\'" , ( unsigned ) extra_length , info ) ; //<S2SV> if ( extra_length > available_length ) //<S2SV> { //<S2SV> memory_length += extra_length - available_length + BLOCK_QUEUE ; //<S2SV> cp = new_memory ( memory_length , sizeof ( char ) ) ; //<S2SV> if ( message_show ( MSG_INFO ) ) //<S2SV> message ( "Reallocating<S2SV_blank>queue<S2SV_blank>at<S2SV_blank>%p<S2SV_blank>to<S2SV_blank>%p" , qp -> d_memory , cp ) ; //<S2SV> if ( qp -> d_read > qp -> d_write ) //<S2SV> { //<S2SV> size_t tail_len = qp -> d_memory_end - qp -> d_read ; //<S2SV> memcpy ( cp , qp -> d_read , tail_len ) ; //<S2SV> memcpy ( cp + tail_len , qp -> d_memory , //<S2SV> ( size_t ) ( qp -> d_write - qp -> d_memory ) ) ; //<S2SV> qp -> d_write = cp + q_length ; //<S2SV> qp -> d_read = cp ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> memcpy ( cp , qp -> d_memory , memory_length ) ; //<S2SV> qp -> d_read = cp + ( qp -> d_read - qp -> d_memory ) ; //<S2SV> qp -> d_write = cp + ( qp -> d_write - qp -> d_memory ) ; //<S2SV> } //<S2SV> free ( qp -> d_memory ) ; //<S2SV> qp -> d_memory_end = cp + memory_length ; //<S2SV> qp -> d_memory = cp ; //<S2SV> } //<S2SV> begin_length = qp -> d_read - qp -> d_memory ; //<S2SV> n_begin = extra_length <= begin_length ? //<S2SV> extra_length //<S2SV> : //<S2SV> begin_length ; //<S2SV> memcpy //<S2SV> ( //<S2SV> qp -> d_read -= n_begin , //<S2SV> info + extra_length - n_begin , //<S2SV> n_begin //<S2SV> ) ; //<S2SV> if ( extra_length > begin_length ) //<S2SV> { //<S2SV> extra_length -= begin_length ; //<S2SV> memcpy //<S2SV> ( //<S2SV> qp -> d_read = qp -> d_memory_end - extra_length , //<S2SV> info , //<S2SV> extra_length //<S2SV> ) ; //<S2SV> } //<S2SV> } //<S2SV> 