int //<S2SV> check_user_token ( const char * authfile , //<S2SV> const char * username , //<S2SV> const char * otp_id , //<S2SV> int verbose , //<S2SV> FILE * debug_file ) //<S2SV> { //<S2SV> char buf [ 1024 ] ; //<S2SV> char * s_user , * s_token ; //<S2SV> int retval = AUTH_ERROR ; //<S2SV> int fd ; //<S2SV> struct stat st ; //<S2SV> FILE * opwfile ; //<S2SV> fd = open ( authfile , O_RDONLY , 0 ) ; //<S2SV> if ( fd < 0 ) { //<S2SV> if ( verbose ) //<S2SV> D ( debug_file , "Cannot<S2SV_blank>open<S2SV_blank>file:<S2SV_blank>%s<S2SV_blank>(%s)" , authfile , strerror ( errno ) ) ; //<S2SV> return retval ; //<S2SV> } //<S2SV> if ( fstat ( fd , & st ) < 0 ) { //<S2SV> if ( verbose ) //<S2SV> D ( debug_file , "Cannot<S2SV_blank>stat<S2SV_blank>file:<S2SV_blank>%s<S2SV_blank>(%s)" , authfile , strerror ( errno ) ) ; //<S2SV> close ( fd ) ; //<S2SV> return retval ; //<S2SV> } //<S2SV> if ( ! S_ISREG ( st . st_mode ) ) { //<S2SV> if ( verbose ) //<S2SV> D ( debug_file , "%s<S2SV_blank>is<S2SV_blank>not<S2SV_blank>a<S2SV_blank>regular<S2SV_blank>file" , authfile ) ; //<S2SV> close ( fd ) ; //<S2SV> return retval ; //<S2SV> } //<S2SV> opwfile = fdopen ( fd , "r" ) ; //<S2SV> if ( opwfile == NULL ) { //<S2SV> if ( verbose ) //<S2SV> D ( debug_file , "fdopen:<S2SV_blank>%s" , strerror ( errno ) ) ; //<S2SV> close ( fd ) ; //<S2SV> return retval ; //<S2SV> } //<S2SV> retval = AUTH_NO_TOKENS ; //<S2SV> while ( fgets ( buf , 1024 , opwfile ) ) //<S2SV> { //<S2SV> char * saveptr = NULL ; //<S2SV> if ( buf [ strlen ( buf ) - 1 ] == '\\n' ) //<S2SV> buf [ strlen ( buf ) - 1 ] = '\\0' ; //<S2SV> if ( buf [ 0 ] == '#' ) { //<S2SV> if ( verbose ) //<S2SV> D ( debug_file , "Skipping<S2SV_blank>comment<S2SV_blank>line:<S2SV_blank>%s" , buf ) ; //<S2SV> continue ; //<S2SV> } //<S2SV> if ( verbose ) //<S2SV> D ( debug_file , "Authorization<S2SV_blank>line:<S2SV_blank>%s" , buf ) ; //<S2SV> s_user = strtok_r ( buf , ":" , & saveptr ) ; //<S2SV> if ( s_user && strcmp ( username , s_user ) == 0 ) //<S2SV> { //<S2SV> if ( verbose ) //<S2SV> D ( debug_file , "Matched<S2SV_blank>user:<S2SV_blank>%s" , s_user ) ; //<S2SV> retval = AUTH_NOT_FOUND ; //<S2SV> do //<S2SV> { //<S2SV> s_token = strtok_r ( NULL , ":" , & saveptr ) ; //<S2SV> if ( verbose ) //<S2SV> D ( debug_file , "Authorization<S2SV_blank>token:<S2SV_blank>%s" , s_token ) ; //<S2SV> if ( s_token && otp_id && strcmp ( otp_id , s_token ) == 0 ) //<S2SV> { //<S2SV> if ( verbose ) //<S2SV> D ( debug_file , "Match<S2SV_blank>user/token<S2SV_blank>as<S2SV_blank>%s/%s" , username , otp_id ) ; //<S2SV> fclose ( opwfile ) ; //<S2SV> return AUTH_FOUND ; //<S2SV> } //<S2SV> } //<S2SV> while ( s_token != NULL ) ; //<S2SV> } //<S2SV> } //<S2SV> fclose ( opwfile ) ; //<S2SV> return retval ; //<S2SV> } //<S2SV> 