static void GTextFieldSave ( GTextField * gt , int utf8 ) { //<S2SV> unichar_t * ret ; //<S2SV> char * cret ; //<S2SV> FILE * file ; //<S2SV> unichar_t * pt ; //<S2SV> if ( _ggadget_use_gettext ) { //<S2SV> char * temp = GWidgetOpenFile8 ( _ ( "Save" ) , NULL , "*.{txt,py}" , NULL , NULL ) ; //<S2SV> ret = utf82u_copy ( temp ) ; //<S2SV> free ( temp ) ; //<S2SV> } else //<S2SV> ret = GWidgetSaveAsFile ( GStringGetResource ( _STR_Save , NULL ) , NULL , //<S2SV> txt , NULL , NULL ) ; //<S2SV> if ( ret == NULL ) //<S2SV> return ; //<S2SV> cret = u2def_copy ( ret ) ; //<S2SV> free ( ret ) ; //<S2SV> file = fopen ( cret , "w" ) ; //<S2SV> if ( file == NULL ) { //<S2SV> if ( _ggadget_use_gettext ) //<S2SV> GWidgetError8 ( _ ( "Could<S2SV_blank>not<S2SV_blank>open<S2SV_blank>file" ) , _ ( "Could<S2SV_blank>not<S2SV_blank>open<S2SV_blank>%.100s" ) , cret ) ; //<S2SV> else //<S2SV> GWidgetError ( errort , error , cret ) ; //<S2SV> free ( cret ) ; //<S2SV> return ; //<S2SV> } //<S2SV> free ( cret ) ; //<S2SV> if ( utf8 ) { //<S2SV> putc ( 0xef , file ) ; //<S2SV> putc ( 0xbb , file ) ; //<S2SV> putc ( 0xbf , file ) ; //<S2SV> for ( pt = gt -> text ; * pt ; ++ pt ) { //<S2SV> if ( * pt < 0x80 ) //<S2SV> putc ( * pt , file ) ; //<S2SV> else if ( * pt < 0x800 ) { //<S2SV> putc ( 0xc0 | ( * pt >> 6 ) , file ) ; //<S2SV> putc ( 0x80 | ( * pt & 0x3f ) , file ) ; //<S2SV> } else if ( * pt >= 0xd800 && * pt < 0xdc00 && pt [ 1 ] >= 0xdc00 && pt [ 1 ] < 0xe000 ) { //<S2SV> int u = ( ( * pt >> 6 ) & 0xf ) + 1 , y = ( ( * pt & 3 ) << 4 ) | ( ( pt [ 1 ] >> 6 ) & 0xf ) ; //<S2SV> putc ( 0xf0 | ( u >> 2 ) , file ) ; //<S2SV> putc ( 0x80 | ( ( u & 3 ) << 4 ) | ( ( * pt >> 2 ) & 0xf ) , file ) ; //<S2SV> putc ( 0x80 | y , file ) ; //<S2SV> putc ( 0x80 | ( pt [ 1 ] & 0x3f ) , file ) ; //<S2SV> } else { //<S2SV> putc ( 0xe0 | ( * pt >> 12 ) , file ) ; //<S2SV> putc ( 0x80 | ( ( * pt >> 6 ) & 0x3f ) , file ) ; //<S2SV> putc ( 0x80 | ( * pt & 0x3f ) , file ) ; //<S2SV> } //<S2SV> } //<S2SV> } else { //<S2SV> putc ( 0xfeff >> 8 , file ) ; //<S2SV> putc ( 0xfeff & 0xff , file ) ; //<S2SV> for ( pt = gt -> text ; * pt ; ++ pt ) { //<S2SV> putc ( * pt >> 8 , file ) ; //<S2SV> putc ( * pt & 0xff , file ) ; //<S2SV> } //<S2SV> } //<S2SV> fclose ( file ) ; //<S2SV> GTextFieldSaved ( gt ) ; //<S2SV> } //<S2SV> 