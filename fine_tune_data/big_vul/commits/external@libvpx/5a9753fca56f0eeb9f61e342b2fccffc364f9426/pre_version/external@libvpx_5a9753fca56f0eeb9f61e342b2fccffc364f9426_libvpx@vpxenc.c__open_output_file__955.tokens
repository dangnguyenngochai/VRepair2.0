static void open_output_file ( struct stream_state * stream , //<S2SV> struct VpxEncoderConfig * global ) { //<S2SV> const char * fn = stream -> config . out_fn ; //<S2SV> const struct vpx_codec_enc_cfg * const cfg = & stream -> config . cfg ; //<S2SV> if ( cfg -> g_pass == VPX_RC_FIRST_PASS ) //<S2SV> return ; //<S2SV> stream -> file = strcmp ( fn , "-" ) ? fopen ( fn , "wb" ) : set_binary_mode ( stdout ) ; //<S2SV> if ( ! stream -> file ) //<S2SV> fatal ( "Failed<S2SV_blank>to<S2SV_blank>open<S2SV_blank>output<S2SV_blank>file" ) ; //<S2SV> if ( stream -> config . write_webm && fseek ( stream -> file , 0 , SEEK_CUR ) ) //<S2SV> fatal ( "WebM<S2SV_blank>output<S2SV_blank>to<S2SV_blank>pipes<S2SV_blank>not<S2SV_blank>supported." ) ; //<S2SV> # if CONFIG_WEBM_IO //<S2SV> if ( stream -> config . write_webm ) { //<S2SV> stream -> ebml . stream = stream -> file ; //<S2SV> write_webm_file_header ( & stream -> ebml , cfg , //<S2SV> & global -> framerate , //<S2SV> stream -> config . stereo_fmt , //<S2SV> global -> codec -> fourcc ) ; //<S2SV> } //<S2SV> # endif //<S2SV> if ( ! stream -> config . write_webm ) { //<S2SV> ivf_write_file_header ( stream -> file , cfg , global -> codec -> fourcc , 0 ) ; //<S2SV> } //<S2SV> } //<S2SV> 