static void txfm_rd_in_plane ( MACROBLOCK * x , //<S2SV> int * rate , int64_t * distortion , //<S2SV> int * skippable , int64_t * sse , //<S2SV> int64_t ref_best_rd , int plane , //<S2SV> BLOCK_SIZE bsize , TX_SIZE tx_size , //<S2SV> int use_fast_coef_casting ) { //<S2SV> MACROBLOCKD * const xd = & x -> e_mbd ; //<S2SV> const struct macroblockd_plane * const pd = & xd -> plane [ plane ] ; //<S2SV> struct rdcost_block_args args = { 0 } ; //<S2SV> args . x = x ; //<S2SV> args . best_rd = ref_best_rd ; //<S2SV> args . use_fast_coef_costing = use_fast_coef_casting ; //<S2SV> if ( plane == 0 ) //<S2SV> xd -> mi [ 0 ] -> mbmi . tx_size = tx_size ; //<S2SV> vp9_get_entropy_contexts ( bsize , tx_size , pd , args . t_above , args . t_left ) ; //<S2SV> args . so = get_scan ( xd , tx_size , pd -> plane_type , 0 ) ; //<S2SV> vp9_foreach_transformed_block_in_plane ( xd , bsize , plane , //<S2SV> block_rd_txfm , & args ) ; //<S2SV> if ( args . skip ) { //<S2SV> * rate = INT_MAX ; //<S2SV> * distortion = INT64_MAX ; //<S2SV> * sse = INT64_MAX ; //<S2SV> * skippable = 0 ; //<S2SV> } else { //<S2SV> * distortion = args . this_dist ; //<S2SV> * rate = args . this_rate ; //<S2SV> * sse = args . this_sse ; //<S2SV> * skippable = vp9_is_skippable_in_plane ( x , bsize , plane ) ; //<S2SV> } //<S2SV> } //<S2SV> 