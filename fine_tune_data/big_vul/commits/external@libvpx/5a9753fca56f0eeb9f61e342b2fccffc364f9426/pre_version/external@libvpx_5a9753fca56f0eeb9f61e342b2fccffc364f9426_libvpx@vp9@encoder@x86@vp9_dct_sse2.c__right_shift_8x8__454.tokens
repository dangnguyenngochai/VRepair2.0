static INLINE void right_shift_8x8 ( __m128i * res , int const bit ) { //<S2SV> const __m128i kOne = _mm_set1_epi16 ( 1 ) ; //<S2SV> const int bit_m02 = bit - 2 ; //<S2SV> __m128i sign0 = _mm_srai_epi16 ( res [ 0 ] , 15 ) ; //<S2SV> __m128i sign1 = _mm_srai_epi16 ( res [ 1 ] , 15 ) ; //<S2SV> __m128i sign2 = _mm_srai_epi16 ( res [ 2 ] , 15 ) ; //<S2SV> __m128i sign3 = _mm_srai_epi16 ( res [ 3 ] , 15 ) ; //<S2SV> __m128i sign4 = _mm_srai_epi16 ( res [ 4 ] , 15 ) ; //<S2SV> __m128i sign5 = _mm_srai_epi16 ( res [ 5 ] , 15 ) ; //<S2SV> __m128i sign6 = _mm_srai_epi16 ( res [ 6 ] , 15 ) ; //<S2SV> __m128i sign7 = _mm_srai_epi16 ( res [ 7 ] , 15 ) ; //<S2SV> if ( bit_m02 >= 0 ) { //<S2SV> __m128i k_const_rounding = _mm_slli_epi16 ( kOne , bit_m02 ) ; //<S2SV> res [ 0 ] = _mm_add_epi16 ( res [ 0 ] , k_const_rounding ) ; //<S2SV> res [ 1 ] = _mm_add_epi16 ( res [ 1 ] , k_const_rounding ) ; //<S2SV> res [ 2 ] = _mm_add_epi16 ( res [ 2 ] , k_const_rounding ) ; //<S2SV> res [ 3 ] = _mm_add_epi16 ( res [ 3 ] , k_const_rounding ) ; //<S2SV> res [ 4 ] = _mm_add_epi16 ( res [ 4 ] , k_const_rounding ) ; //<S2SV> res [ 5 ] = _mm_add_epi16 ( res [ 5 ] , k_const_rounding ) ; //<S2SV> res [ 6 ] = _mm_add_epi16 ( res [ 6 ] , k_const_rounding ) ; //<S2SV> res [ 7 ] = _mm_add_epi16 ( res [ 7 ] , k_const_rounding ) ; //<S2SV> } //<S2SV> res [ 0 ] = _mm_sub_epi16 ( res [ 0 ] , sign0 ) ; //<S2SV> res [ 1 ] = _mm_sub_epi16 ( res [ 1 ] , sign1 ) ; //<S2SV> res [ 2 ] = _mm_sub_epi16 ( res [ 2 ] , sign2 ) ; //<S2SV> res [ 3 ] = _mm_sub_epi16 ( res [ 3 ] , sign3 ) ; //<S2SV> res [ 4 ] = _mm_sub_epi16 ( res [ 4 ] , sign4 ) ; //<S2SV> res [ 5 ] = _mm_sub_epi16 ( res [ 5 ] , sign5 ) ; //<S2SV> res [ 6 ] = _mm_sub_epi16 ( res [ 6 ] , sign6 ) ; //<S2SV> res [ 7 ] = _mm_sub_epi16 ( res [ 7 ] , sign7 ) ; //<S2SV> res [ 0 ] = _mm_srai_epi16 ( res [ 0 ] , bit ) ; //<S2SV> res [ 1 ] = _mm_srai_epi16 ( res [ 1 ] , bit ) ; //<S2SV> res [ 2 ] = _mm_srai_epi16 ( res [ 2 ] , bit ) ; //<S2SV> res [ 3 ] = _mm_srai_epi16 ( res [ 3 ] , bit ) ; //<S2SV> res [ 4 ] = _mm_srai_epi16 ( res [ 4 ] , bit ) ; //<S2SV> res [ 5 ] = _mm_srai_epi16 ( res [ 5 ] , bit ) ; //<S2SV> res [ 6 ] = _mm_srai_epi16 ( res [ 6 ] , bit ) ; //<S2SV> res [ 7 ] = _mm_srai_epi16 ( res [ 7 ] , bit ) ; //<S2SV> } //<S2SV> 