void vp9_update_temporal_layer_framerate ( VP9_COMP * const cpi ) { //<S2SV> SVC * const svc = & cpi -> svc ; //<S2SV> const VP9_CONFIG * const oxcf = & cpi -> oxcf ; //<S2SV> LAYER_CONTEXT * const lc = get_layer_context ( svc ) ; //<S2SV> RATE_CONTROL * const lrc = & lc -> rc ; //<S2SV> const int layer = svc -> temporal_layer_id ; //<S2SV> lc -> framerate = oxcf -> framerate / oxcf -> ts_rate_decimator [ layer ] ; //<S2SV> lrc -> av_per_frame_bandwidth = ( int ) ( lc -> target_bandwidth / lc -> framerate ) ; //<S2SV> lrc -> max_frame_bandwidth = cpi -> rc . max_frame_bandwidth ; //<S2SV> if ( layer == 0 ) { //<S2SV> lc -> avg_frame_size = lrc -> av_per_frame_bandwidth ; //<S2SV> } else { //<S2SV> const double prev_layer_framerate = //<S2SV> oxcf -> framerate / oxcf -> ts_rate_decimator [ layer - 1 ] ; //<S2SV> const int prev_layer_target_bandwidth = //<S2SV> oxcf -> ts_target_bitrate [ layer - 1 ] * 1000 ; //<S2SV> lc -> avg_frame_size = //<S2SV> ( int ) ( ( lc -> target_bandwidth - prev_layer_target_bandwidth ) / //<S2SV> ( lc -> framerate - prev_layer_framerate ) ) ; //<S2SV> } //<S2SV> } //<S2SV> 