static void pick_quickcompress_mode ( vpx_codec_alg_priv_t * ctx , //<S2SV> unsigned long duration , //<S2SV> unsigned long deadline ) { //<S2SV> MODE new_qc = MODE_BESTQUALITY ; //<S2SV> if ( deadline ) { //<S2SV> const uint64_t duration_us = ( uint64_t ) duration * 1000000 * //<S2SV> ( uint64_t ) ctx -> cfg . g_timebase . num / //<S2SV> ( uint64_t ) ctx -> cfg . g_timebase . den ; //<S2SV> new_qc = ( deadline > duration_us ) ? MODE_GOODQUALITY : MODE_REALTIME ; //<S2SV> } //<S2SV> if ( ctx -> cfg . g_pass == VPX_RC_FIRST_PASS ) //<S2SV> new_qc = MODE_FIRSTPASS ; //<S2SV> else if ( ctx -> cfg . g_pass == VPX_RC_LAST_PASS ) //<S2SV> new_qc = ( new_qc == MODE_BESTQUALITY ) ? MODE_SECONDPASS_BEST //<S2SV> : MODE_SECONDPASS ; //<S2SV> if ( ctx -> oxcf . mode != new_qc ) { //<S2SV> ctx -> oxcf . mode = new_qc ; //<S2SV> vp9_change_config ( ctx -> cpi , & ctx -> oxcf ) ; //<S2SV> } //<S2SV> } //<S2SV> 