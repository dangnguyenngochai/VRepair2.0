static uint64_t calc_plane_error ( unsigned char * orig , int orig_stride , //<S2SV> unsigned char * recon , int recon_stride , //<S2SV> unsigned int cols , unsigned int rows ) //<S2SV> { //<S2SV> unsigned int row , col ; //<S2SV> uint64_t total_sse = 0 ; //<S2SV> int diff ; //<S2SV> for ( row = 0 ; row + 16 <= rows ; row += 16 ) //<S2SV> { //<S2SV> for ( col = 0 ; col + 16 <= cols ; col += 16 ) //<S2SV> { //<S2SV> unsigned int sse ; //<S2SV> vp8_mse16x16 ( orig + col , orig_stride , //<S2SV> recon + col , recon_stride , //<S2SV> & sse ) ; //<S2SV> total_sse += sse ; //<S2SV> } //<S2SV> if ( col < cols ) //<S2SV> { //<S2SV> unsigned int border_row , border_col ; //<S2SV> unsigned char * border_orig = orig ; //<S2SV> unsigned char * border_recon = recon ; //<S2SV> for ( border_row = 0 ; border_row < 16 ; border_row ++ ) //<S2SV> { //<S2SV> for ( border_col = col ; border_col < cols ; border_col ++ ) //<S2SV> { //<S2SV> diff = border_orig [ border_col ] - border_recon [ border_col ] ; //<S2SV> total_sse += diff * diff ; //<S2SV> } //<S2SV> border_orig += orig_stride ; //<S2SV> border_recon += recon_stride ; //<S2SV> } //<S2SV> } //<S2SV> orig += orig_stride * 16 ; //<S2SV> recon += recon_stride * 16 ; //<S2SV> } //<S2SV> for ( ; row < rows ; row ++ ) //<S2SV> { //<S2SV> for ( col = 0 ; col < cols ; col ++ ) //<S2SV> { //<S2SV> diff = orig [ col ] - recon [ col ] ; //<S2SV> total_sse += diff * diff ; //<S2SV> } //<S2SV> orig += orig_stride ; //<S2SV> recon += recon_stride ; //<S2SV> } //<S2SV> vp8_clear_system_state ( ) ; //<S2SV> return total_sse ; //<S2SV> } //<S2SV> 