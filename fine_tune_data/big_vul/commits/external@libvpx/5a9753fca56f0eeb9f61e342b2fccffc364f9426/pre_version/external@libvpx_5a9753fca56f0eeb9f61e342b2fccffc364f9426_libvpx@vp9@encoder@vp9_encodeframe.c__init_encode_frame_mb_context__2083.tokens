static void init_encode_frame_mb_context ( VP9_COMP * cpi ) { //<S2SV> MACROBLOCK * const x = & cpi -> mb ; //<S2SV> VP9_COMMON * const cm = & cpi -> common ; //<S2SV> MACROBLOCKD * const xd = & x -> e_mbd ; //<S2SV> const int aligned_mi_cols = mi_cols_aligned_to_sb ( cm -> mi_cols ) ; //<S2SV> x -> act_zbin_adj = 0 ; //<S2SV> vp9_setup_src_planes ( x , cpi -> Source , 0 , 0 ) ; //<S2SV> vp9_setup_pre_planes ( xd , 0 , get_ref_frame_buffer ( cpi , LAST_FRAME ) , 0 , 0 , //<S2SV> NULL ) ; //<S2SV> vp9_setup_dst_planes ( xd , get_frame_new_buffer ( cm ) , 0 , 0 ) ; //<S2SV> vp9_setup_block_planes ( & x -> e_mbd , cm -> subsampling_x , cm -> subsampling_y ) ; //<S2SV> xd -> mi [ 0 ] -> mbmi . mode = DC_PRED ; //<S2SV> xd -> mi [ 0 ] -> mbmi . uv_mode = DC_PRED ; //<S2SV> vpx_memset ( xd -> above_context [ 0 ] , 0 , //<S2SV> sizeof ( * xd -> above_context [ 0 ] ) * //<S2SV> 2 * aligned_mi_cols * MAX_MB_PLANE ) ; //<S2SV> vpx_memset ( xd -> above_seg_context , 0 , //<S2SV> sizeof ( * xd -> above_seg_context ) * aligned_mi_cols ) ; //<S2SV> } //<S2SV> 