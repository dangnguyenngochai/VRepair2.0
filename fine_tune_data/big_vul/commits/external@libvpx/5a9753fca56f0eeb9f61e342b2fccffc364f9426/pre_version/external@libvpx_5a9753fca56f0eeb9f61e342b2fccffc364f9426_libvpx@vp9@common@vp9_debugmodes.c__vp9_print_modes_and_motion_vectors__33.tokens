void vp9_print_modes_and_motion_vectors ( VP9_COMMON * cm , const char * file ) { //<S2SV> int mi_row ; //<S2SV> int mi_col ; //<S2SV> int mi_index = 0 ; //<S2SV> FILE * mvs = fopen ( file , "a" ) ; //<S2SV> MODE_INFO * * mi_8x8 = cm -> mi_grid_visible ; //<S2SV> int rows = cm -> mi_rows ; //<S2SV> int cols = cm -> mi_cols ; //<S2SV> print_mi_data ( cm , mvs , "Partitions:" , offsetof ( MB_MODE_INFO , sb_type ) ) ; //<S2SV> print_mi_data ( cm , mvs , "Modes:" , offsetof ( MB_MODE_INFO , mode ) ) ; //<S2SV> print_mi_data ( cm , mvs , "Skips:" , offsetof ( MB_MODE_INFO , skip ) ) ; //<S2SV> print_mi_data ( cm , mvs , "Ref<S2SV_blank>frame:" , offsetof ( MB_MODE_INFO , ref_frame [ 0 ] ) ) ; //<S2SV> print_mi_data ( cm , mvs , "Transform:" , offsetof ( MB_MODE_INFO , tx_size ) ) ; //<S2SV> print_mi_data ( cm , mvs , "UV<S2SV_blank>Modes:" , offsetof ( MB_MODE_INFO , uv_mode ) ) ; //<S2SV> log_frame_info ( cm , "Vectors<S2SV_blank>" , mvs ) ; //<S2SV> for ( mi_row = 0 ; mi_row < rows ; mi_row ++ ) { //<S2SV> fprintf ( mvs , "V<S2SV_blank>" ) ; //<S2SV> for ( mi_col = 0 ; mi_col < cols ; mi_col ++ ) { //<S2SV> fprintf ( mvs , "%4d:%4d<S2SV_blank>" , mi_8x8 [ mi_index ] -> mbmi . mv [ 0 ] . as_mv . row , //<S2SV> mi_8x8 [ mi_index ] -> mbmi . mv [ 0 ] . as_mv . col ) ; //<S2SV> mi_index ++ ; //<S2SV> } //<S2SV> fprintf ( mvs , "\\n" ) ; //<S2SV> mi_index += 8 ; //<S2SV> } //<S2SV> fprintf ( mvs , "\\n" ) ; //<S2SV> fclose ( mvs ) ; //<S2SV> } //<S2SV> 