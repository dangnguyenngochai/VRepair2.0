void vp9_rc_init ( const VP9_CONFIG * oxcf , int pass , RATE_CONTROL * rc ) { //<S2SV> if ( pass == 0 && oxcf -> end_usage == USAGE_STREAM_FROM_SERVER ) { //<S2SV> rc -> avg_frame_qindex [ 0 ] = oxcf -> worst_allowed_q ; //<S2SV> rc -> avg_frame_qindex [ 1 ] = oxcf -> worst_allowed_q ; //<S2SV> rc -> avg_frame_qindex [ 2 ] = oxcf -> worst_allowed_q ; //<S2SV> } else { //<S2SV> rc -> avg_frame_qindex [ 0 ] = ( oxcf -> worst_allowed_q + //<S2SV> oxcf -> best_allowed_q ) / 2 ; //<S2SV> rc -> avg_frame_qindex [ 1 ] = ( oxcf -> worst_allowed_q + //<S2SV> oxcf -> best_allowed_q ) / 2 ; //<S2SV> rc -> avg_frame_qindex [ 2 ] = ( oxcf -> worst_allowed_q + //<S2SV> oxcf -> best_allowed_q ) / 2 ; //<S2SV> } //<S2SV> rc -> last_q [ 0 ] = oxcf -> best_allowed_q ; //<S2SV> rc -> last_q [ 1 ] = oxcf -> best_allowed_q ; //<S2SV> rc -> last_q [ 2 ] = oxcf -> best_allowed_q ; //<S2SV> rc -> buffer_level = oxcf -> starting_buffer_level ; //<S2SV> rc -> bits_off_target = oxcf -> starting_buffer_level ; //<S2SV> rc -> rolling_target_bits = rc -> av_per_frame_bandwidth ; //<S2SV> rc -> rolling_actual_bits = rc -> av_per_frame_bandwidth ; //<S2SV> rc -> long_rolling_target_bits = rc -> av_per_frame_bandwidth ; //<S2SV> rc -> long_rolling_actual_bits = rc -> av_per_frame_bandwidth ; //<S2SV> rc -> total_actual_bits = 0 ; //<S2SV> rc -> total_target_vs_actual = 0 ; //<S2SV> rc -> baseline_gf_interval = DEFAULT_GF_INTERVAL ; //<S2SV> rc -> frames_since_key = 8 ; //<S2SV> rc -> this_key_frame_forced = 0 ; //<S2SV> rc -> next_key_frame_forced = 0 ; //<S2SV> rc -> source_alt_ref_pending = 0 ; //<S2SV> rc -> source_alt_ref_active = 0 ; //<S2SV> rc -> frames_till_gf_update_due = 0 ; //<S2SV> rc -> ni_av_qi = oxcf -> worst_allowed_q ; //<S2SV> rc -> ni_tot_qi = 0 ; //<S2SV> rc -> ni_frames = 0 ; //<S2SV> rc -> tot_q = 0.0 ; //<S2SV> rc -> avg_q = vp9_convert_qindex_to_q ( oxcf -> worst_allowed_q ) ; //<S2SV> rc -> rate_correction_factor = 1.0 ; //<S2SV> rc -> key_frame_rate_correction_factor = 1.0 ; //<S2SV> rc -> gf_rate_correction_factor = 1.0 ; //<S2SV> } //<S2SV> 