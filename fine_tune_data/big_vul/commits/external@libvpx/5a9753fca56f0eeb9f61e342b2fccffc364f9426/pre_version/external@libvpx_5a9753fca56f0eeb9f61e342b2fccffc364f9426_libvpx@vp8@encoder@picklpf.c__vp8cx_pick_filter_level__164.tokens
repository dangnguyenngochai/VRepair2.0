void vp8cx_pick_filter_level ( YV12_BUFFER_CONFIG * sd , VP8_COMP * cpi ) //<S2SV> { //<S2SV> VP8_COMMON * cm = & cpi -> common ; //<S2SV> int best_err = 0 ; //<S2SV> int filt_err = 0 ; //<S2SV> int min_filter_level = get_min_filter_level ( cpi , cm -> base_qindex ) ; //<S2SV> int max_filter_level = get_max_filter_level ( cpi , cm -> base_qindex ) ; //<S2SV> int filter_step ; //<S2SV> int filt_high = 0 ; //<S2SV> int filt_mid = cm -> filter_level ; //<S2SV> int filt_low = 0 ; //<S2SV> int filt_best ; //<S2SV> int filt_direction = 0 ; //<S2SV> int Bias = 0 ; //<S2SV> int ss_err [ MAX_LOOP_FILTER + 1 ] ; //<S2SV> YV12_BUFFER_CONFIG * saved_frame = cm -> frame_to_show ; //<S2SV> vpx_memset ( ss_err , 0 , sizeof ( ss_err ) ) ; //<S2SV> cm -> frame_to_show = & cpi -> pick_lf_lvl_frame ; //<S2SV> if ( cm -> frame_type == KEY_FRAME ) //<S2SV> cm -> sharpness_level = 0 ; //<S2SV> else //<S2SV> cm -> sharpness_level = cpi -> oxcf . Sharpness ; //<S2SV> filt_mid = cm -> filter_level ; //<S2SV> if ( filt_mid < min_filter_level ) //<S2SV> filt_mid = min_filter_level ; //<S2SV> else if ( filt_mid > max_filter_level ) //<S2SV> filt_mid = max_filter_level ; //<S2SV> filter_step = ( filt_mid < 16 ) ? 4 : filt_mid / 4 ; //<S2SV> vpx_yv12_copy_y ( saved_frame , cm -> frame_to_show ) ; //<S2SV> vp8cx_set_alt_lf_level ( cpi , filt_mid ) ; //<S2SV> vp8_loop_filter_frame_yonly ( cm , & cpi -> mb . e_mbd , filt_mid ) ; //<S2SV> best_err = vp8_calc_ss_err ( sd , cm -> frame_to_show ) ; //<S2SV> ss_err [ filt_mid ] = best_err ; //<S2SV> filt_best = filt_mid ; //<S2SV> while ( filter_step > 0 ) //<S2SV> { //<S2SV> Bias = ( best_err >> ( 15 - ( filt_mid / 8 ) ) ) * filter_step ; //<S2SV> if ( cpi -> twopass . section_intra_rating < 20 ) //<S2SV> Bias = Bias * cpi -> twopass . section_intra_rating / 20 ; //<S2SV> filt_high = ( ( filt_mid + filter_step ) > max_filter_level ) ? max_filter_level : ( filt_mid + filter_step ) ; //<S2SV> filt_low = ( ( filt_mid - filter_step ) < min_filter_level ) ? min_filter_level : ( filt_mid - filter_step ) ; //<S2SV> if ( ( filt_direction <= 0 ) && ( filt_low != filt_mid ) ) //<S2SV> { //<S2SV> if ( ss_err [ filt_low ] == 0 ) //<S2SV> { //<S2SV> vpx_yv12_copy_y ( saved_frame , cm -> frame_to_show ) ; //<S2SV> vp8cx_set_alt_lf_level ( cpi , filt_low ) ; //<S2SV> vp8_loop_filter_frame_yonly ( cm , & cpi -> mb . e_mbd , filt_low ) ; //<S2SV> filt_err = vp8_calc_ss_err ( sd , cm -> frame_to_show ) ; //<S2SV> ss_err [ filt_low ] = filt_err ; //<S2SV> } //<S2SV> else //<S2SV> filt_err = ss_err [ filt_low ] ; //<S2SV> if ( ( filt_err - Bias ) < best_err ) //<S2SV> { //<S2SV> if ( filt_err < best_err ) //<S2SV> best_err = filt_err ; //<S2SV> filt_best = filt_low ; //<S2SV> } //<S2SV> } //<S2SV> if ( ( filt_direction >= 0 ) && ( filt_high != filt_mid ) ) //<S2SV> { //<S2SV> if ( ss_err [ filt_high ] == 0 ) //<S2SV> { //<S2SV> vpx_yv12_copy_y ( saved_frame , cm -> frame_to_show ) ; //<S2SV> vp8cx_set_alt_lf_level ( cpi , filt_high ) ; //<S2SV> vp8_loop_filter_frame_yonly ( cm , & cpi -> mb . e_mbd , filt_high ) ; //<S2SV> filt_err = vp8_calc_ss_err ( sd , cm -> frame_to_show ) ; //<S2SV> ss_err [ filt_high ] = filt_err ; //<S2SV> } //<S2SV> else //<S2SV> filt_err = ss_err [ filt_high ] ; //<S2SV> if ( filt_err < ( best_err - Bias ) ) //<S2SV> { //<S2SV> best_err = filt_err ; //<S2SV> filt_best = filt_high ; //<S2SV> } //<S2SV> } //<S2SV> if ( filt_best == filt_mid ) //<S2SV> { //<S2SV> filter_step = filter_step / 2 ; //<S2SV> filt_direction = 0 ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> filt_direction = ( filt_best < filt_mid ) ? - 1 : 1 ; //<S2SV> filt_mid = filt_best ; //<S2SV> } //<S2SV> } //<S2SV> cm -> filter_level = filt_best ; //<S2SV> cm -> frame_to_show = saved_frame ; //<S2SV> } //<S2SV> 