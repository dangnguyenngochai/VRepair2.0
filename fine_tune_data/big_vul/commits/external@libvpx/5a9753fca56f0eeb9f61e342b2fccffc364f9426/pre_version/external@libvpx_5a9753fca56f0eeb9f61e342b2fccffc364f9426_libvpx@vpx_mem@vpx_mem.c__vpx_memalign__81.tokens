void * vpx_memalign ( size_t align , size_t size ) { //<S2SV> void * addr , //<S2SV> * x = NULL ; //<S2SV> # if CONFIG_MEM_MANAGER //<S2SV> int number_aau ; //<S2SV> if ( vpx_mm_create_heap_memory ( ) < 0 ) { //<S2SV> _P ( printf ( "[vpx][mm]<S2SV_blank>ERROR<S2SV_blank>vpx_memalign()<S2SV_blank>Couldn\'t<S2SV_blank>create<S2SV_blank>memory<S2SV_blank>for<S2SV_blank>Heap.\\n" ) ; ) //<S2SV> } //<S2SV> number_aau = ( ( size + align - 1 + ADDRESS_STORAGE_SIZE ) >> //<S2SV> SHIFT_HMM_ADDR_ALIGN_UNIT ) + 1 ; //<S2SV> addr = hmm_alloc ( & hmm_d , number_aau ) ; //<S2SV> # else //<S2SV> addr = VPX_MALLOC_L ( size + align - 1 + ADDRESS_STORAGE_SIZE ) ; //<S2SV> # endif //<S2SV> if ( addr ) { //<S2SV> x = align_addr ( ( unsigned char * ) addr + ADDRESS_STORAGE_SIZE , ( int ) align ) ; //<S2SV> ( ( size_t * ) x ) [ - 1 ] = ( size_t ) addr ; //<S2SV> } //<S2SV> return x ; //<S2SV> } //<S2SV> 