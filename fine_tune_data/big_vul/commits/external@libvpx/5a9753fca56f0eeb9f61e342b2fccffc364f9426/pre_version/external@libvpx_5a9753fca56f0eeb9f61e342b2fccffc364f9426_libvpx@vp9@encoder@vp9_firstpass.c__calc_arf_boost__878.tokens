static int calc_arf_boost ( VP9_COMP * cpi , int offset , //<S2SV> int f_frames , int b_frames , //<S2SV> int * f_boost , int * b_boost ) { //<S2SV> FIRSTPASS_STATS this_frame ; //<S2SV> struct twopass_rc * const twopass = & cpi -> twopass ; //<S2SV> int i ; //<S2SV> double boost_score = 0.0 ; //<S2SV> double mv_ratio_accumulator = 0.0 ; //<S2SV> double decay_accumulator = 1.0 ; //<S2SV> double this_frame_mv_in_out = 0.0 ; //<S2SV> double mv_in_out_accumulator = 0.0 ; //<S2SV> double abs_mv_in_out_accumulator = 0.0 ; //<S2SV> int arf_boost ; //<S2SV> int flash_detected = 0 ; //<S2SV> for ( i = 0 ; i < f_frames ; ++ i ) { //<S2SV> if ( read_frame_stats ( twopass , & this_frame , ( i + offset ) ) == EOF ) //<S2SV> break ; //<S2SV> accumulate_frame_motion_stats ( & this_frame , //<S2SV> & this_frame_mv_in_out , & mv_in_out_accumulator , //<S2SV> & abs_mv_in_out_accumulator , //<S2SV> & mv_ratio_accumulator ) ; //<S2SV> flash_detected = detect_flash ( twopass , i + offset ) || //<S2SV> detect_flash ( twopass , i + offset + 1 ) ; //<S2SV> if ( ! flash_detected ) { //<S2SV> decay_accumulator *= get_prediction_decay_rate ( & cpi -> common , & this_frame ) ; //<S2SV> decay_accumulator = decay_accumulator < MIN_DECAY_FACTOR //<S2SV> ? MIN_DECAY_FACTOR : decay_accumulator ; //<S2SV> } //<S2SV> boost_score += ( decay_accumulator * //<S2SV> calc_frame_boost ( cpi , & this_frame , this_frame_mv_in_out ) ) ; //<S2SV> } //<S2SV> * f_boost = ( int ) boost_score ; //<S2SV> boost_score = 0.0 ; //<S2SV> mv_ratio_accumulator = 0.0 ; //<S2SV> decay_accumulator = 1.0 ; //<S2SV> this_frame_mv_in_out = 0.0 ; //<S2SV> mv_in_out_accumulator = 0.0 ; //<S2SV> abs_mv_in_out_accumulator = 0.0 ; //<S2SV> for ( i = - 1 ; i >= - b_frames ; -- i ) { //<S2SV> if ( read_frame_stats ( twopass , & this_frame , ( i + offset ) ) == EOF ) //<S2SV> break ; //<S2SV> accumulate_frame_motion_stats ( & this_frame , //<S2SV> & this_frame_mv_in_out , & mv_in_out_accumulator , //<S2SV> & abs_mv_in_out_accumulator , //<S2SV> & mv_ratio_accumulator ) ; //<S2SV> flash_detected = detect_flash ( twopass , i + offset ) || //<S2SV> detect_flash ( twopass , i + offset + 1 ) ; //<S2SV> if ( ! flash_detected ) { //<S2SV> decay_accumulator *= get_prediction_decay_rate ( & cpi -> common , & this_frame ) ; //<S2SV> decay_accumulator = decay_accumulator < MIN_DECAY_FACTOR //<S2SV> ? MIN_DECAY_FACTOR : decay_accumulator ; //<S2SV> } //<S2SV> boost_score += ( decay_accumulator * //<S2SV> calc_frame_boost ( cpi , & this_frame , this_frame_mv_in_out ) ) ; //<S2SV> } //<S2SV> * b_boost = ( int ) boost_score ; //<S2SV> arf_boost = ( * f_boost + * b_boost ) ; //<S2SV> if ( arf_boost < ( ( b_frames + f_frames ) * 20 ) ) //<S2SV> arf_boost = ( ( b_frames + f_frames ) * 20 ) ; //<S2SV> return arf_boost ; //<S2SV> } //<S2SV> 