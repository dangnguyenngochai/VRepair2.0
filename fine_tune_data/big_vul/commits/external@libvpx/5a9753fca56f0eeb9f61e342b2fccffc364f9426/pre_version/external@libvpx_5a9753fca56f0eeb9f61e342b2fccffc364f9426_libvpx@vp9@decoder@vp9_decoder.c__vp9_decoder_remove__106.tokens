void vp9_decoder_remove ( VP9Decoder * pbi ) { //<S2SV> VP9_COMMON * const cm = & pbi -> common ; //<S2SV> int i ; //<S2SV> vp9_remove_common ( cm ) ; //<S2SV> vp9_worker_end ( & pbi -> lf_worker ) ; //<S2SV> vpx_free ( pbi -> lf_worker . data1 ) ; //<S2SV> for ( i = 0 ; i < pbi -> num_tile_workers ; ++ i ) { //<S2SV> VP9Worker * const worker = & pbi -> tile_workers [ i ] ; //<S2SV> vp9_worker_end ( worker ) ; //<S2SV> vpx_free ( worker -> data1 ) ; //<S2SV> vpx_free ( worker -> data2 ) ; //<S2SV> } //<S2SV> vpx_free ( pbi -> tile_workers ) ; //<S2SV> if ( pbi -> num_tile_workers ) { //<S2SV> const int sb_rows = //<S2SV> mi_cols_aligned_to_sb ( cm -> mi_rows ) >> MI_BLOCK_SIZE_LOG2 ; //<S2SV> vp9_loop_filter_dealloc ( & pbi -> lf_row_sync , sb_rows ) ; //<S2SV> } //<S2SV> vpx_free ( pbi ) ; //<S2SV> } //<S2SV> 