static void copy_and_extend_plane ( const uint8_t * src , int src_pitch , //<S2SV> uint8_t * dst , int dst_pitch , //<S2SV> int w , int h , //<S2SV> int extend_top , int extend_left , //<S2SV> int extend_bottom , int extend_right ) { //<S2SV> int i , linesize ; //<S2SV> const uint8_t * src_ptr1 = src ; //<S2SV> const uint8_t * src_ptr2 = src + w - 1 ; //<S2SV> uint8_t * dst_ptr1 = dst - extend_left ; //<S2SV> uint8_t * dst_ptr2 = dst + w ; //<S2SV> for ( i = 0 ; i < h ; i ++ ) { //<S2SV> vpx_memset ( dst_ptr1 , src_ptr1 [ 0 ] , extend_left ) ; //<S2SV> vpx_memcpy ( dst_ptr1 + extend_left , src_ptr1 , w ) ; //<S2SV> vpx_memset ( dst_ptr2 , src_ptr2 [ 0 ] , extend_right ) ; //<S2SV> src_ptr1 += src_pitch ; //<S2SV> src_ptr2 += src_pitch ; //<S2SV> dst_ptr1 += dst_pitch ; //<S2SV> dst_ptr2 += dst_pitch ; //<S2SV> } //<S2SV> src_ptr1 = dst - extend_left ; //<S2SV> src_ptr2 = dst + dst_pitch * ( h - 1 ) - extend_left ; //<S2SV> dst_ptr1 = dst + dst_pitch * ( - extend_top ) - extend_left ; //<S2SV> dst_ptr2 = dst + dst_pitch * ( h ) - extend_left ; //<S2SV> linesize = extend_left + extend_right + w ; //<S2SV> for ( i = 0 ; i < extend_top ; i ++ ) { //<S2SV> vpx_memcpy ( dst_ptr1 , src_ptr1 , linesize ) ; //<S2SV> dst_ptr1 += dst_pitch ; //<S2SV> } //<S2SV> for ( i = 0 ; i < extend_bottom ; i ++ ) { //<S2SV> vpx_memcpy ( dst_ptr2 , src_ptr2 , linesize ) ; //<S2SV> dst_ptr2 += dst_pitch ; //<S2SV> } //<S2SV> } //<S2SV> 