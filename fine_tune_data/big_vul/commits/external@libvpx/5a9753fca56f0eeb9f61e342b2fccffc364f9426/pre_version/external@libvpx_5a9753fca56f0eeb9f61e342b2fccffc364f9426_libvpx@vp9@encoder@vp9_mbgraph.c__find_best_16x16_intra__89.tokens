static int find_best_16x16_intra ( VP9_COMP * cpi , //<S2SV> MB_PREDICTION_MODE * pbest_mode ) { //<S2SV> MACROBLOCK * const x = & cpi -> mb ; //<S2SV> MACROBLOCKD * const xd = & x -> e_mbd ; //<S2SV> MB_PREDICTION_MODE best_mode = - 1 , mode ; //<S2SV> unsigned int best_err = INT_MAX ; //<S2SV> for ( mode = DC_PRED ; mode <= TM_PRED ; mode ++ ) { //<S2SV> unsigned int err ; //<S2SV> xd -> mi [ 0 ] -> mbmi . mode = mode ; //<S2SV> vp9_predict_intra_block ( xd , 0 , 2 , TX_16X16 , mode , //<S2SV> x -> plane [ 0 ] . src . buf , x -> plane [ 0 ] . src . stride , //<S2SV> xd -> plane [ 0 ] . dst . buf , xd -> plane [ 0 ] . dst . stride , //<S2SV> 0 , 0 , 0 ) ; //<S2SV> err = vp9_sad16x16 ( x -> plane [ 0 ] . src . buf , x -> plane [ 0 ] . src . stride , //<S2SV> xd -> plane [ 0 ] . dst . buf , xd -> plane [ 0 ] . dst . stride , best_err ) ; //<S2SV> if ( err < best_err ) { //<S2SV> best_err = err ; //<S2SV> best_mode = mode ; //<S2SV> } //<S2SV> } //<S2SV> if ( pbest_mode ) //<S2SV> * pbest_mode = best_mode ; //<S2SV> return best_err ; //<S2SV> } //<S2SV> 