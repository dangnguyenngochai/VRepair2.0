static vpx_codec_err_t ctrl_set_svc_parameters ( vpx_codec_alg_priv_t * ctx , //<S2SV> int ctr_id , va_list args ) { //<S2SV> VP9_COMP * const cpi = ctx -> cpi ; //<S2SV> vpx_svc_parameters_t * const params = va_arg ( args , vpx_svc_parameters_t * ) ; //<S2SV> if ( params == NULL ) //<S2SV> return VPX_CODEC_INVALID_PARAM ; //<S2SV> cpi -> svc . spatial_layer_id = params -> spatial_layer ; //<S2SV> cpi -> svc . temporal_layer_id = params -> temporal_layer ; //<S2SV> cpi -> lst_fb_idx = params -> lst_fb_idx ; //<S2SV> cpi -> gld_fb_idx = params -> gld_fb_idx ; //<S2SV> cpi -> alt_fb_idx = params -> alt_fb_idx ; //<S2SV> if ( vp9_set_size_literal ( ctx -> cpi , params -> width , params -> height ) != 0 ) //<S2SV> return VPX_CODEC_INVALID_PARAM ; //<S2SV> ctx -> cfg . rc_max_quantizer = params -> max_quantizer ; //<S2SV> ctx -> cfg . rc_min_quantizer = params -> min_quantizer ; //<S2SV> set_encoder_config ( & ctx -> oxcf , & ctx -> cfg , & ctx -> extra_cfg ) ; //<S2SV> vp9_change_config ( ctx -> cpi , & ctx -> oxcf ) ; //<S2SV> return VPX_CODEC_OK ; //<S2SV> } //<S2SV> 