static unsigned int do_16x16_motion_iteration ( VP9_COMP * cpi , //<S2SV> const MV * ref_mv , //<S2SV> MV * dst_mv , //<S2SV> int mb_row , //<S2SV> int mb_col ) { //<S2SV> MACROBLOCK * const x = & cpi -> mb ; //<S2SV> MACROBLOCKD * const xd = & x -> e_mbd ; //<S2SV> vp9_variance_fn_ptr_t v_fn_ptr = cpi -> fn_ptr [ BLOCK_16X16 ] ; //<S2SV> const int tmp_col_min = x -> mv_col_min ; //<S2SV> const int tmp_col_max = x -> mv_col_max ; //<S2SV> const int tmp_row_min = x -> mv_row_min ; //<S2SV> const int tmp_row_max = x -> mv_row_max ; //<S2SV> MV ref_full ; //<S2SV> int step_param = cpi -> sf . reduce_first_step_size + //<S2SV> ( cpi -> speed < 8 ? ( cpi -> speed > 5 ? 1 : 0 ) : 2 ) ; //<S2SV> step_param = MIN ( step_param , ( cpi -> sf . max_step_search_steps - 2 ) ) ; //<S2SV> vp9_set_mv_search_range ( x , ref_mv ) ; //<S2SV> ref_full . col = ref_mv -> col >> 3 ; //<S2SV> ref_full . row = ref_mv -> row >> 3 ; //<S2SV> vp9_hex_search ( x , & ref_full , step_param , x -> errorperbit , 0 , & v_fn_ptr , 0 , //<S2SV> ref_mv , dst_mv ) ; //<S2SV> { //<S2SV> int distortion ; //<S2SV> unsigned int sse ; //<S2SV> cpi -> find_fractional_mv_step ( //<S2SV> x , dst_mv , ref_mv , cpi -> common . allow_high_precision_mv , x -> errorperbit , //<S2SV> & v_fn_ptr , 0 , cpi -> sf . subpel_iters_per_step , NULL , NULL , & distortion , //<S2SV> & sse ) ; //<S2SV> } //<S2SV> xd -> mi [ 0 ] -> mbmi . mode = NEWMV ; //<S2SV> xd -> mi [ 0 ] -> mbmi . mv [ 0 ] . as_mv = * dst_mv ; //<S2SV> vp9_build_inter_predictors_sby ( xd , mb_row , mb_col , BLOCK_16X16 ) ; //<S2SV> x -> mv_col_min = tmp_col_min ; //<S2SV> x -> mv_col_max = tmp_col_max ; //<S2SV> x -> mv_row_min = tmp_row_min ; //<S2SV> x -> mv_row_max = tmp_row_max ; //<S2SV> return vp9_sad16x16 ( x -> plane [ 0 ] . src . buf , x -> plane [ 0 ] . src . stride , //<S2SV> xd -> plane [ 0 ] . dst . buf , xd -> plane [ 0 ] . dst . stride , //<S2SV> INT_MAX ) ; //<S2SV> } //<S2SV> 