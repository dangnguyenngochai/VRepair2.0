vpx_codec_err_t vpx_codec_dec_init_ver ( vpx_codec_ctx_t * ctx , //<S2SV> vpx_codec_iface_t * iface , //<S2SV> vpx_codec_dec_cfg_t * cfg , //<S2SV> vpx_codec_flags_t flags , //<S2SV> int ver ) { //<S2SV> vpx_codec_err_t res ; //<S2SV> if ( ver != VPX_DECODER_ABI_VERSION ) //<S2SV> res = VPX_CODEC_ABI_MISMATCH ; //<S2SV> else if ( ! ctx || ! iface ) //<S2SV> res = VPX_CODEC_INVALID_PARAM ; //<S2SV> else if ( iface -> abi_version != VPX_CODEC_INTERNAL_ABI_VERSION ) //<S2SV> res = VPX_CODEC_ABI_MISMATCH ; //<S2SV> else if ( ( flags & VPX_CODEC_USE_XMA ) && ! ( iface -> caps & VPX_CODEC_CAP_XMA ) ) //<S2SV> res = VPX_CODEC_INCAPABLE ; //<S2SV> else if ( ( flags & VPX_CODEC_USE_POSTPROC ) && ! ( iface -> caps & VPX_CODEC_CAP_POSTPROC ) ) //<S2SV> res = VPX_CODEC_INCAPABLE ; //<S2SV> else if ( ( flags & VPX_CODEC_USE_ERROR_CONCEALMENT ) && //<S2SV> ! ( iface -> caps & VPX_CODEC_CAP_ERROR_CONCEALMENT ) ) //<S2SV> res = VPX_CODEC_INCAPABLE ; //<S2SV> else if ( ( flags & VPX_CODEC_USE_INPUT_FRAGMENTS ) && //<S2SV> ! ( iface -> caps & VPX_CODEC_CAP_INPUT_FRAGMENTS ) ) //<S2SV> res = VPX_CODEC_INCAPABLE ; //<S2SV> else if ( ! ( iface -> caps & VPX_CODEC_CAP_DECODER ) ) //<S2SV> res = VPX_CODEC_INCAPABLE ; //<S2SV> else { //<S2SV> memset ( ctx , 0 , sizeof ( * ctx ) ) ; //<S2SV> ctx -> iface = iface ; //<S2SV> ctx -> name = iface -> name ; //<S2SV> ctx -> priv = NULL ; //<S2SV> ctx -> init_flags = flags ; //<S2SV> ctx -> config . dec = cfg ; //<S2SV> res = VPX_CODEC_OK ; //<S2SV> if ( ! ( flags & VPX_CODEC_USE_XMA ) ) { //<S2SV> res = ctx -> iface -> init ( ctx , NULL ) ; //<S2SV> if ( res ) { //<S2SV> ctx -> err_detail = ctx -> priv ? ctx -> priv -> err_detail : NULL ; //<S2SV> vpx_codec_destroy ( ctx ) ; //<S2SV> } //<S2SV> if ( ctx -> priv ) //<S2SV> ctx -> priv -> iface = ctx -> iface ; //<S2SV> } //<S2SV> } //<S2SV> return SAVE_STATUS ( ctx , res ) ; //<S2SV> } //<S2SV> 