static void init_config ( VP8_COMP * cpi , VP8_CONFIG * oxcf ) //<S2SV> { //<S2SV> VP8_COMMON * cm = & cpi -> common ; //<S2SV> cpi -> oxcf = * oxcf ; //<S2SV> cpi -> auto_gold = 1 ; //<S2SV> cpi -> auto_adjust_gold_quantizer = 1 ; //<S2SV> cm -> version = oxcf -> Version ; //<S2SV> vp8_setup_version ( cm ) ; //<S2SV> cpi -> framerate = ( double ) ( oxcf -> timebase . den ) / //<S2SV> ( double ) ( oxcf -> timebase . num ) ; //<S2SV> if ( cpi -> framerate > 180 ) //<S2SV> cpi -> framerate = 30 ; //<S2SV> cpi -> ref_framerate = cpi -> framerate ; //<S2SV> vp8_change_config ( cpi , oxcf ) ; //<S2SV> cpi -> active_worst_quality = cpi -> oxcf . worst_allowed_q ; //<S2SV> cpi -> active_best_quality = cpi -> oxcf . best_allowed_q ; //<S2SV> cpi -> avg_frame_qindex = cpi -> oxcf . worst_allowed_q ; //<S2SV> cpi -> buffer_level = cpi -> oxcf . starting_buffer_level ; //<S2SV> cpi -> bits_off_target = cpi -> oxcf . starting_buffer_level ; //<S2SV> cpi -> rolling_target_bits = cpi -> av_per_frame_bandwidth ; //<S2SV> cpi -> rolling_actual_bits = cpi -> av_per_frame_bandwidth ; //<S2SV> cpi -> long_rolling_target_bits = cpi -> av_per_frame_bandwidth ; //<S2SV> cpi -> long_rolling_actual_bits = cpi -> av_per_frame_bandwidth ; //<S2SV> cpi -> total_actual_bits = 0 ; //<S2SV> cpi -> total_target_vs_actual = 0 ; //<S2SV> if ( cpi -> oxcf . number_of_layers > 1 ) //<S2SV> { //<S2SV> unsigned int i ; //<S2SV> double prev_layer_framerate = 0 ; //<S2SV> for ( i = 0 ; i < cpi -> oxcf . number_of_layers ; i ++ ) //<S2SV> { //<S2SV> init_temporal_layer_context ( cpi , oxcf , i , prev_layer_framerate ) ; //<S2SV> prev_layer_framerate = cpi -> output_framerate / //<S2SV> cpi -> oxcf . rate_decimator [ i ] ; //<S2SV> } //<S2SV> } //<S2SV> # if VP8_TEMPORAL_ALT_REF //<S2SV> { //<S2SV> int i ; //<S2SV> cpi -> fixed_divide [ 0 ] = 0 ; //<S2SV> for ( i = 1 ; i < 512 ; i ++ ) //<S2SV> cpi -> fixed_divide [ i ] = 0x80000 / i ; //<S2SV> } //<S2SV> # endif //<S2SV> } //<S2SV> 