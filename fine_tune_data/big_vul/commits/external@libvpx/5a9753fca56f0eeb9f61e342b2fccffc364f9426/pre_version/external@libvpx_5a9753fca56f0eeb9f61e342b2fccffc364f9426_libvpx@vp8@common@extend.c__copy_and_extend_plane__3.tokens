static void copy_and_extend_plane //<S2SV> ( //<S2SV> unsigned char * s , //<S2SV> int sp , //<S2SV> unsigned char * d , //<S2SV> int dp , //<S2SV> int h , //<S2SV> int w , //<S2SV> int et , //<S2SV> int el , //<S2SV> int eb , //<S2SV> int er //<S2SV> ) //<S2SV> { //<S2SV> int i ; //<S2SV> unsigned char * src_ptr1 , * src_ptr2 ; //<S2SV> unsigned char * dest_ptr1 , * dest_ptr2 ; //<S2SV> int linesize ; //<S2SV> src_ptr1 = s ; //<S2SV> src_ptr2 = s + w - 1 ; //<S2SV> dest_ptr1 = d - el ; //<S2SV> dest_ptr2 = d + w ; //<S2SV> for ( i = 0 ; i < h ; i ++ ) //<S2SV> { //<S2SV> vpx_memset ( dest_ptr1 , src_ptr1 [ 0 ] , el ) ; //<S2SV> vpx_memcpy ( dest_ptr1 + el , src_ptr1 , w ) ; //<S2SV> vpx_memset ( dest_ptr2 , src_ptr2 [ 0 ] , er ) ; //<S2SV> src_ptr1 += sp ; //<S2SV> src_ptr2 += sp ; //<S2SV> dest_ptr1 += dp ; //<S2SV> dest_ptr2 += dp ; //<S2SV> } //<S2SV> src_ptr1 = d - el ; //<S2SV> src_ptr2 = d + dp * ( h - 1 ) - el ; //<S2SV> dest_ptr1 = d + dp * ( - et ) - el ; //<S2SV> dest_ptr2 = d + dp * ( h ) - el ; //<S2SV> linesize = el + er + w ; //<S2SV> for ( i = 0 ; i < et ; i ++ ) //<S2SV> { //<S2SV> vpx_memcpy ( dest_ptr1 , src_ptr1 , linesize ) ; //<S2SV> dest_ptr1 += dp ; //<S2SV> } //<S2SV> for ( i = 0 ; i < eb ; i ++ ) //<S2SV> { //<S2SV> vpx_memcpy ( dest_ptr2 , src_ptr2 , linesize ) ; //<S2SV> dest_ptr2 += dp ; //<S2SV> } //<S2SV> } //<S2SV> 