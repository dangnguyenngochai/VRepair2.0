int vp8_regulate_q ( VP8_COMP * cpi , int target_bits_per_frame ) //<S2SV> { //<S2SV> int Q = cpi -> active_worst_quality ; //<S2SV> cpi -> mb . zbin_over_quant = 0 ; //<S2SV> if ( cpi -> oxcf . fixed_q >= 0 ) //<S2SV> { //<S2SV> Q = cpi -> oxcf . fixed_q ; //<S2SV> if ( cpi -> common . frame_type == KEY_FRAME ) //<S2SV> { //<S2SV> Q = cpi -> oxcf . key_q ; //<S2SV> } //<S2SV> else if ( cpi -> oxcf . number_of_layers == 1 && //<S2SV> cpi -> common . refresh_alt_ref_frame ) //<S2SV> { //<S2SV> Q = cpi -> oxcf . alt_q ; //<S2SV> } //<S2SV> else if ( cpi -> oxcf . number_of_layers == 1 && //<S2SV> cpi -> common . refresh_golden_frame ) //<S2SV> { //<S2SV> Q = cpi -> oxcf . gold_q ; //<S2SV> } //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> int i ; //<S2SV> int last_error = INT_MAX ; //<S2SV> int target_bits_per_mb ; //<S2SV> int bits_per_mb_at_this_q ; //<S2SV> double correction_factor ; //<S2SV> if ( cpi -> common . frame_type == KEY_FRAME ) //<S2SV> correction_factor = cpi -> key_frame_rate_correction_factor ; //<S2SV> else //<S2SV> { //<S2SV> if ( cpi -> oxcf . number_of_layers == 1 && //<S2SV> ( cpi -> common . refresh_alt_ref_frame || //<S2SV> cpi -> common . refresh_golden_frame ) ) //<S2SV> correction_factor = cpi -> gf_rate_correction_factor ; //<S2SV> else //<S2SV> correction_factor = cpi -> rate_correction_factor ; //<S2SV> } //<S2SV> if ( target_bits_per_frame >= ( INT_MAX >> BPER_MB_NORMBITS ) ) //<S2SV> target_bits_per_mb = ( target_bits_per_frame / cpi -> common . MBs ) << BPER_MB_NORMBITS ; //<S2SV> else //<S2SV> target_bits_per_mb = ( target_bits_per_frame << BPER_MB_NORMBITS ) / cpi -> common . MBs ; //<S2SV> i = cpi -> active_best_quality ; //<S2SV> do //<S2SV> { //<S2SV> bits_per_mb_at_this_q = ( int ) ( .5 + correction_factor * vp8_bits_per_mb [ cpi -> common . frame_type ] [ i ] ) ; //<S2SV> if ( bits_per_mb_at_this_q <= target_bits_per_mb ) //<S2SV> { //<S2SV> if ( ( target_bits_per_mb - bits_per_mb_at_this_q ) <= last_error ) //<S2SV> Q = i ; //<S2SV> else //<S2SV> Q = i - 1 ; //<S2SV> break ; //<S2SV> } //<S2SV> else //<S2SV> last_error = bits_per_mb_at_this_q - target_bits_per_mb ; //<S2SV> } //<S2SV> while ( ++ i <= cpi -> active_worst_quality ) ; //<S2SV> if ( Q >= MAXQ ) //<S2SV> { //<S2SV> int zbin_oqmax ; //<S2SV> double Factor = 0.99 ; //<S2SV> double factor_adjustment = 0.01 / 256.0 ; //<S2SV> if ( cpi -> common . frame_type == KEY_FRAME ) //<S2SV> zbin_oqmax = 0 ; //<S2SV> else if ( cpi -> oxcf . number_of_layers == 1 && //<S2SV> ( cpi -> common . refresh_alt_ref_frame || //<S2SV> ( cpi -> common . refresh_golden_frame && //<S2SV> ! cpi -> source_alt_ref_active ) ) ) //<S2SV> zbin_oqmax = 16 ; //<S2SV> else //<S2SV> zbin_oqmax = ZBIN_OQ_MAX ; //<S2SV> while ( cpi -> mb . zbin_over_quant < zbin_oqmax ) //<S2SV> { //<S2SV> cpi -> mb . zbin_over_quant ++ ; //<S2SV> if ( cpi -> mb . zbin_over_quant > zbin_oqmax ) //<S2SV> cpi -> mb . zbin_over_quant = zbin_oqmax ; //<S2SV> bits_per_mb_at_this_q = ( int ) ( Factor * bits_per_mb_at_this_q ) ; //<S2SV> Factor += factor_adjustment ; //<S2SV> if ( Factor >= 0.999 ) //<S2SV> Factor = 0.999 ; //<S2SV> if ( bits_per_mb_at_this_q <= target_bits_per_mb ) //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> return Q ; //<S2SV> } //<S2SV> 