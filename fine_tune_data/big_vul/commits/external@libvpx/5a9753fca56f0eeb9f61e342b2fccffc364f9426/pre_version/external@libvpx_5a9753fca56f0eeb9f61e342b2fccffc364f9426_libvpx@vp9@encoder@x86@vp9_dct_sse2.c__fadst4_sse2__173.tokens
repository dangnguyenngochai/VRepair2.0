void fadst4_sse2 ( __m128i * in ) { //<S2SV> const __m128i k__sinpi_p01_p02 = pair_set_epi16 ( sinpi_1_9 , sinpi_2_9 ) ; //<S2SV> const __m128i k__sinpi_p04_m01 = pair_set_epi16 ( sinpi_4_9 , - sinpi_1_9 ) ; //<S2SV> const __m128i k__sinpi_p03_p04 = pair_set_epi16 ( sinpi_3_9 , sinpi_4_9 ) ; //<S2SV> const __m128i k__sinpi_m03_p02 = pair_set_epi16 ( - sinpi_3_9 , sinpi_2_9 ) ; //<S2SV> const __m128i k__sinpi_p03_p03 = _mm_set1_epi16 ( sinpi_3_9 ) ; //<S2SV> const __m128i kZero = _mm_set1_epi16 ( 0 ) ; //<S2SV> const __m128i k__DCT_CONST_ROUNDING = _mm_set1_epi32 ( DCT_CONST_ROUNDING ) ; //<S2SV> __m128i u [ 8 ] , v [ 8 ] ; //<S2SV> __m128i in7 = _mm_add_epi16 ( in [ 0 ] , in [ 1 ] ) ; //<S2SV> u [ 0 ] = _mm_unpacklo_epi16 ( in [ 0 ] , in [ 1 ] ) ; //<S2SV> u [ 1 ] = _mm_unpacklo_epi16 ( in [ 2 ] , in [ 3 ] ) ; //<S2SV> u [ 2 ] = _mm_unpacklo_epi16 ( in7 , kZero ) ; //<S2SV> u [ 3 ] = _mm_unpacklo_epi16 ( in [ 2 ] , kZero ) ; //<S2SV> u [ 4 ] = _mm_unpacklo_epi16 ( in [ 3 ] , kZero ) ; //<S2SV> v [ 0 ] = _mm_madd_epi16 ( u [ 0 ] , k__sinpi_p01_p02 ) ; //<S2SV> v [ 1 ] = _mm_madd_epi16 ( u [ 1 ] , k__sinpi_p03_p04 ) ; //<S2SV> v [ 2 ] = _mm_madd_epi16 ( u [ 2 ] , k__sinpi_p03_p03 ) ; //<S2SV> v [ 3 ] = _mm_madd_epi16 ( u [ 0 ] , k__sinpi_p04_m01 ) ; //<S2SV> v [ 4 ] = _mm_madd_epi16 ( u [ 1 ] , k__sinpi_m03_p02 ) ; //<S2SV> v [ 5 ] = _mm_madd_epi16 ( u [ 3 ] , k__sinpi_p03_p03 ) ; //<S2SV> v [ 6 ] = _mm_madd_epi16 ( u [ 4 ] , k__sinpi_p03_p03 ) ; //<S2SV> u [ 0 ] = _mm_add_epi32 ( v [ 0 ] , v [ 1 ] ) ; //<S2SV> u [ 1 ] = _mm_sub_epi32 ( v [ 2 ] , v [ 6 ] ) ; //<S2SV> u [ 2 ] = _mm_add_epi32 ( v [ 3 ] , v [ 4 ] ) ; //<S2SV> u [ 3 ] = _mm_sub_epi32 ( u [ 2 ] , u [ 0 ] ) ; //<S2SV> u [ 4 ] = _mm_slli_epi32 ( v [ 5 ] , 2 ) ; //<S2SV> u [ 5 ] = _mm_sub_epi32 ( u [ 4 ] , v [ 5 ] ) ; //<S2SV> u [ 6 ] = _mm_add_epi32 ( u [ 3 ] , u [ 5 ] ) ; //<S2SV> v [ 0 ] = _mm_add_epi32 ( u [ 0 ] , k__DCT_CONST_ROUNDING ) ; //<S2SV> v [ 1 ] = _mm_add_epi32 ( u [ 1 ] , k__DCT_CONST_ROUNDING ) ; //<S2SV> v [ 2 ] = _mm_add_epi32 ( u [ 2 ] , k__DCT_CONST_ROUNDING ) ; //<S2SV> v [ 3 ] = _mm_add_epi32 ( u [ 6 ] , k__DCT_CONST_ROUNDING ) ; //<S2SV> u [ 0 ] = _mm_srai_epi32 ( v [ 0 ] , DCT_CONST_BITS ) ; //<S2SV> u [ 1 ] = _mm_srai_epi32 ( v [ 1 ] , DCT_CONST_BITS ) ; //<S2SV> u [ 2 ] = _mm_srai_epi32 ( v [ 2 ] , DCT_CONST_BITS ) ; //<S2SV> u [ 3 ] = _mm_srai_epi32 ( v [ 3 ] , DCT_CONST_BITS ) ; //<S2SV> in [ 0 ] = _mm_packs_epi32 ( u [ 0 ] , u [ 2 ] ) ; //<S2SV> in [ 1 ] = _mm_packs_epi32 ( u [ 1 ] , u [ 3 ] ) ; //<S2SV> transpose_4x4 ( in ) ; //<S2SV> } //<S2SV> 