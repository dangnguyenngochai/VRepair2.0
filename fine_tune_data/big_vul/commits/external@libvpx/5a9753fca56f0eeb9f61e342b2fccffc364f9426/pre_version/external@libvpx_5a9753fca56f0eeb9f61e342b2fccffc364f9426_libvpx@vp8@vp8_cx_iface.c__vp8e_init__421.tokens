static vpx_codec_err_t vp8e_init ( vpx_codec_ctx_t * ctx , //<S2SV> vpx_codec_priv_enc_mr_cfg_t * mr_cfg ) //<S2SV> { //<S2SV> vpx_codec_err_t res = VPX_CODEC_OK ; //<S2SV> struct vpx_codec_alg_priv * priv ; //<S2SV> vpx_codec_enc_cfg_t * cfg ; //<S2SV> unsigned int i ; //<S2SV> struct VP8_COMP * optr ; //<S2SV> vp8_rtcd ( ) ; //<S2SV> if ( ! ctx -> priv ) //<S2SV> { //<S2SV> priv = calloc ( 1 , sizeof ( struct vpx_codec_alg_priv ) ) ; //<S2SV> if ( ! priv ) //<S2SV> { //<S2SV> return VPX_CODEC_MEM_ERROR ; //<S2SV> } //<S2SV> ctx -> priv = & priv -> base ; //<S2SV> ctx -> priv -> sz = sizeof ( * ctx -> priv ) ; //<S2SV> ctx -> priv -> iface = ctx -> iface ; //<S2SV> ctx -> priv -> alg_priv = priv ; //<S2SV> ctx -> priv -> init_flags = ctx -> init_flags ; //<S2SV> if ( ctx -> config . enc ) //<S2SV> { //<S2SV> ctx -> priv -> alg_priv -> cfg = * ctx -> config . enc ; //<S2SV> ctx -> config . enc = & ctx -> priv -> alg_priv -> cfg ; //<S2SV> } //<S2SV> cfg = & ctx -> priv -> alg_priv -> cfg ; //<S2SV> for ( i = 0 ; //<S2SV> extracfg_map [ i ] . usage && extracfg_map [ i ] . usage != cfg -> g_usage ; //<S2SV> i ++ ) ; //<S2SV> priv -> vp8_cfg = extracfg_map [ i ] . cfg ; //<S2SV> priv -> vp8_cfg . pkt_list = & priv -> pkt_list . head ; //<S2SV> priv -> cx_data_sz = priv -> cfg . g_w * priv -> cfg . g_h * 3 / 2 * 2 ; //<S2SV> if ( priv -> cx_data_sz < 32768 ) priv -> cx_data_sz = 32768 ; //<S2SV> priv -> cx_data = malloc ( priv -> cx_data_sz ) ; //<S2SV> if ( ! priv -> cx_data ) //<S2SV> { //<S2SV> return VPX_CODEC_MEM_ERROR ; //<S2SV> } //<S2SV> if ( mr_cfg ) //<S2SV> ctx -> priv -> enc . total_encoders = mr_cfg -> mr_total_resolutions ; //<S2SV> else //<S2SV> ctx -> priv -> enc . total_encoders = 1 ; //<S2SV> res = validate_config ( priv , & priv -> cfg , & priv -> vp8_cfg , 0 ) ; //<S2SV> if ( ! res ) //<S2SV> { //<S2SV> set_vp8e_config ( & ctx -> priv -> alg_priv -> oxcf , //<S2SV> ctx -> priv -> alg_priv -> cfg , //<S2SV> ctx -> priv -> alg_priv -> vp8_cfg , //<S2SV> mr_cfg ) ; //<S2SV> optr = vp8_create_compressor ( & ctx -> priv -> alg_priv -> oxcf ) ; //<S2SV> if ( ! optr ) //<S2SV> res = VPX_CODEC_MEM_ERROR ; //<S2SV> else //<S2SV> ctx -> priv -> alg_priv -> cpi = optr ; //<S2SV> } //<S2SV> } //<S2SV> return res ; //<S2SV> } //<S2SV> 