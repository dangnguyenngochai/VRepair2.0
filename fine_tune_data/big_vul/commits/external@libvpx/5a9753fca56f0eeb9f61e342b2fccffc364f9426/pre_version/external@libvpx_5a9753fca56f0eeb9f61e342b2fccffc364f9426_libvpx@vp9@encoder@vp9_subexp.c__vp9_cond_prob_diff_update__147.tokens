void vp9_cond_prob_diff_update ( vp9_writer * w , vp9_prob * oldp , //<S2SV> const unsigned int ct [ 2 ] ) { //<S2SV> const vp9_prob upd = DIFF_UPDATE_PROB ; //<S2SV> vp9_prob newp = get_binary_prob ( ct [ 0 ] , ct [ 1 ] ) ; //<S2SV> const int savings = vp9_prob_diff_update_savings_search ( ct , * oldp , & newp , //<S2SV> upd ) ; //<S2SV> assert ( newp >= 1 ) ; //<S2SV> if ( savings > 0 ) { //<S2SV> vp9_write ( w , 1 , upd ) ; //<S2SV> vp9_write_prob_diff_update ( w , newp , * oldp ) ; //<S2SV> * oldp = newp ; //<S2SV> } else { //<S2SV> vp9_write ( w , 0 , upd ) ; //<S2SV> } //<S2SV> } //<S2SV> 