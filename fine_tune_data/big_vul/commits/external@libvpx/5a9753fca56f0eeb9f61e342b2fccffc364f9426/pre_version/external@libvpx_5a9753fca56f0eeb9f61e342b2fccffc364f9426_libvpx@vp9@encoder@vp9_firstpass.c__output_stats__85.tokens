static void output_stats ( FIRSTPASS_STATS * stats , //<S2SV> struct vpx_codec_pkt_list * pktlist ) { //<S2SV> struct vpx_codec_cx_pkt pkt ; //<S2SV> pkt . kind = VPX_CODEC_STATS_PKT ; //<S2SV> pkt . data . twopass_stats . buf = stats ; //<S2SV> pkt . data . twopass_stats . sz = sizeof ( FIRSTPASS_STATS ) ; //<S2SV> vpx_codec_pkt_list_add ( pktlist , & pkt ) ; //<S2SV> # if OUTPUT_FPF //<S2SV> { //<S2SV> FILE * fpfile ; //<S2SV> fpfile = fopen ( "firstpass.stt" , "a" ) ; //<S2SV> fprintf ( fpfile , "%12.0f<S2SV_blank>%12.0f<S2SV_blank>%12.0f<S2SV_blank>%12.0f<S2SV_blank>%12.0f<S2SV_blank>%12.4f<S2SV_blank>%12.4f" //<S2SV> "%12.4f<S2SV_blank>%12.4f<S2SV_blank>%12.4f<S2SV_blank>%12.4f<S2SV_blank>%12.4f<S2SV_blank>%12.4f<S2SV_blank>%12.4f" //<S2SV> "%12.0f<S2SV_blank>%12.0f<S2SV_blank>%12.4f<S2SV_blank>%12.0f<S2SV_blank>%12.0f<S2SV_blank>%12.4f\\n" , //<S2SV> stats -> frame , //<S2SV> stats -> intra_error , //<S2SV> stats -> coded_error , //<S2SV> stats -> sr_coded_error , //<S2SV> stats -> ssim_weighted_pred_err , //<S2SV> stats -> pcnt_inter , //<S2SV> stats -> pcnt_motion , //<S2SV> stats -> pcnt_second_ref , //<S2SV> stats -> pcnt_neutral , //<S2SV> stats -> MVr , //<S2SV> stats -> mvr_abs , //<S2SV> stats -> MVc , //<S2SV> stats -> mvc_abs , //<S2SV> stats -> MVrv , //<S2SV> stats -> MVcv , //<S2SV> stats -> mv_in_out_count , //<S2SV> stats -> new_mv_count , //<S2SV> stats -> count , //<S2SV> stats -> duration ) ; //<S2SV> fclose ( fpfile ) ; //<S2SV> } //<S2SV> # endif //<S2SV> } //<S2SV> 