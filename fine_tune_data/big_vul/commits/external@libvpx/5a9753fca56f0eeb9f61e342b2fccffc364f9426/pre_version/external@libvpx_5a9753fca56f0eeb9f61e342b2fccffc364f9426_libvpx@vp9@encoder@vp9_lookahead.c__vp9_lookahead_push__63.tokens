int vp9_lookahead_push ( struct lookahead_ctx * ctx , YV12_BUFFER_CONFIG * src , //<S2SV> int64_t ts_start , int64_t ts_end , unsigned int flags ) { //<S2SV> struct lookahead_entry * buf ; //<S2SV> # if USE_PARTIAL_COPY //<S2SV> int row , col , active_end ; //<S2SV> int mb_rows = ( src -> y_height + 15 ) >> 4 ; //<S2SV> int mb_cols = ( src -> y_width + 15 ) >> 4 ; //<S2SV> # endif //<S2SV> if ( ctx -> sz + 1 + MAX_PRE_FRAMES > ctx -> max_sz ) //<S2SV> return 1 ; //<S2SV> ctx -> sz ++ ; //<S2SV> buf = pop ( ctx , & ctx -> write_idx ) ; //<S2SV> # if USE_PARTIAL_COPY //<S2SV> if ( ctx -> max_sz == 1 && active_map && ! flags ) { //<S2SV> for ( row = 0 ; row < mb_rows ; ++ row ) { //<S2SV> col = 0 ; //<S2SV> while ( 1 ) { //<S2SV> for ( ; col < mb_cols ; ++ col ) { //<S2SV> if ( active_map [ col ] ) //<S2SV> break ; //<S2SV> } //<S2SV> if ( col == mb_cols ) //<S2SV> break ; //<S2SV> active_end = col ; //<S2SV> for ( ; active_end < mb_cols ; ++ active_end ) { //<S2SV> if ( ! active_map [ active_end ] ) //<S2SV> break ; //<S2SV> } //<S2SV> vp9_copy_and_extend_frame_with_rect ( src , & buf -> img , //<S2SV> row << 4 , //<S2SV> col << 4 , 16 , //<S2SV> ( active_end - col ) << 4 ) ; //<S2SV> col = active_end ; //<S2SV> } //<S2SV> active_map += mb_cols ; //<S2SV> } //<S2SV> } else { //<S2SV> vp9_copy_and_extend_frame ( src , & buf -> img ) ; //<S2SV> } //<S2SV> # else //<S2SV> vp9_copy_and_extend_frame ( src , & buf -> img ) ; //<S2SV> # endif //<S2SV> buf -> ts_start = ts_start ; //<S2SV> buf -> ts_end = ts_end ; //<S2SV> buf -> flags = flags ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 