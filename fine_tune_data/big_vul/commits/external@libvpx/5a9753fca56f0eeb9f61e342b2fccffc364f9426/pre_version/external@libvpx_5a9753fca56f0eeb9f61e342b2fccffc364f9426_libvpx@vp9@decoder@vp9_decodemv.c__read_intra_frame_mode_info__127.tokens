static void read_intra_frame_mode_info ( VP9_COMMON * const cm , //<S2SV> MACROBLOCKD * const xd , //<S2SV> int mi_row , int mi_col , vp9_reader * r ) { //<S2SV> MODE_INFO * const mi = xd -> mi [ 0 ] ; //<S2SV> MB_MODE_INFO * const mbmi = & mi -> mbmi ; //<S2SV> const MODE_INFO * above_mi = xd -> mi [ - cm -> mi_stride ] ; //<S2SV> const MODE_INFO * left_mi = xd -> left_available ? xd -> mi [ - 1 ] : NULL ; //<S2SV> const BLOCK_SIZE bsize = mbmi -> sb_type ; //<S2SV> int i ; //<S2SV> mbmi -> segment_id = read_intra_segment_id ( cm , xd , mi_row , mi_col , r ) ; //<S2SV> mbmi -> skip = read_skip ( cm , xd , mbmi -> segment_id , r ) ; //<S2SV> mbmi -> tx_size = read_tx_size ( cm , xd , cm -> tx_mode , bsize , 1 , r ) ; //<S2SV> mbmi -> ref_frame [ 0 ] = INTRA_FRAME ; //<S2SV> mbmi -> ref_frame [ 1 ] = NONE ; //<S2SV> switch ( bsize ) { //<S2SV> case BLOCK_4X4 : //<S2SV> for ( i = 0 ; i < 4 ; ++ i ) //<S2SV> mi -> bmi [ i ] . as_mode = //<S2SV> read_intra_mode ( r , get_y_mode_probs ( mi , above_mi , left_mi , i ) ) ; //<S2SV> mbmi -> mode = mi -> bmi [ 3 ] . as_mode ; //<S2SV> break ; //<S2SV> case BLOCK_4X8 : //<S2SV> mi -> bmi [ 0 ] . as_mode = mi -> bmi [ 2 ] . as_mode = //<S2SV> read_intra_mode ( r , get_y_mode_probs ( mi , above_mi , left_mi , 0 ) ) ; //<S2SV> mi -> bmi [ 1 ] . as_mode = mi -> bmi [ 3 ] . as_mode = mbmi -> mode = //<S2SV> read_intra_mode ( r , get_y_mode_probs ( mi , above_mi , left_mi , 1 ) ) ; //<S2SV> break ; //<S2SV> case BLOCK_8X4 : //<S2SV> mi -> bmi [ 0 ] . as_mode = mi -> bmi [ 1 ] . as_mode = //<S2SV> read_intra_mode ( r , get_y_mode_probs ( mi , above_mi , left_mi , 0 ) ) ; //<S2SV> mi -> bmi [ 2 ] . as_mode = mi -> bmi [ 3 ] . as_mode = mbmi -> mode = //<S2SV> read_intra_mode ( r , get_y_mode_probs ( mi , above_mi , left_mi , 2 ) ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> mbmi -> mode = read_intra_mode ( r , //<S2SV> get_y_mode_probs ( mi , above_mi , left_mi , 0 ) ) ; //<S2SV> } //<S2SV> mbmi -> uv_mode = read_intra_mode ( r , vp9_kf_uv_mode_prob [ mbmi -> mode ] ) ; //<S2SV> } //<S2SV> 