static int rc_pick_q_and_bounds_one_pass_vbr ( const VP9_COMP * cpi , //<S2SV> int * bottom_index , //<S2SV> int * top_index ) { //<S2SV> const VP9_COMMON * const cm = & cpi -> common ; //<S2SV> const RATE_CONTROL * const rc = & cpi -> rc ; //<S2SV> const VP9_CONFIG * const oxcf = & cpi -> oxcf ; //<S2SV> int active_best_quality ; //<S2SV> int active_worst_quality = calc_active_worst_quality_one_pass_vbr ( cpi ) ; //<S2SV> int q ; //<S2SV> if ( frame_is_intra_only ( cm ) ) { //<S2SV> active_best_quality = rc -> best_quality ; //<S2SV> # if ! CONFIG_MULTIPLE_ARF //<S2SV> if ( rc -> this_key_frame_forced ) { //<S2SV> int qindex = rc -> last_boosted_qindex ; //<S2SV> double last_boosted_q = vp9_convert_qindex_to_q ( qindex ) ; //<S2SV> int delta_qindex = vp9_compute_qdelta ( rc , last_boosted_q , //<S2SV> last_boosted_q * 0.75 ) ; //<S2SV> active_best_quality = MAX ( qindex + delta_qindex , rc -> best_quality ) ; //<S2SV> } else if ( cm -> current_video_frame > 0 ) { //<S2SV> double q_adj_factor = 1.0 ; //<S2SV> double q_val ; //<S2SV> active_best_quality = get_active_quality ( rc -> avg_frame_qindex [ KEY_FRAME ] , //<S2SV> rc -> kf_boost , //<S2SV> kf_low , kf_high , //<S2SV> kf_low_motion_minq , //<S2SV> kf_high_motion_minq ) ; //<S2SV> if ( ( cm -> width * cm -> height ) <= ( 352 * 288 ) ) { //<S2SV> q_adj_factor -= 0.25 ; //<S2SV> } //<S2SV> q_val = vp9_convert_qindex_to_q ( active_best_quality ) ; //<S2SV> active_best_quality += vp9_compute_qdelta ( rc , q_val , //<S2SV> q_val * q_adj_factor ) ; //<S2SV> } //<S2SV> # else //<S2SV> double current_q ; //<S2SV> current_q = vp9_convert_qindex_to_q ( active_worst_quality ) ; //<S2SV> active_best_quality = active_worst_quality //<S2SV> + vp9_compute_qdelta ( rc , current_q , current_q * 0.3 ) ; //<S2SV> # endif //<S2SV> } else if ( ! rc -> is_src_frame_alt_ref && //<S2SV> ( cpi -> refresh_golden_frame || cpi -> refresh_alt_ref_frame ) ) { //<S2SV> if ( rc -> frames_since_key > 1 && //<S2SV> rc -> avg_frame_qindex [ INTER_FRAME ] < active_worst_quality ) { //<S2SV> q = rc -> avg_frame_qindex [ INTER_FRAME ] ; //<S2SV> } else { //<S2SV> q = rc -> avg_frame_qindex [ KEY_FRAME ] ; //<S2SV> } //<S2SV> if ( oxcf -> end_usage == USAGE_CONSTRAINED_QUALITY ) { //<S2SV> if ( q < cpi -> cq_target_quality ) //<S2SV> q = cpi -> cq_target_quality ; //<S2SV> if ( rc -> frames_since_key > 1 ) { //<S2SV> active_best_quality = get_active_quality ( q , rc -> gfu_boost , //<S2SV> gf_low , gf_high , //<S2SV> afq_low_motion_minq , //<S2SV> afq_high_motion_minq ) ; //<S2SV> } else { //<S2SV> active_best_quality = get_active_quality ( q , rc -> gfu_boost , //<S2SV> gf_low , gf_high , //<S2SV> gf_low_motion_minq , //<S2SV> gf_high_motion_minq ) ; //<S2SV> } //<S2SV> active_best_quality = active_best_quality * 15 / 16 ; //<S2SV> } else if ( oxcf -> end_usage == USAGE_CONSTANT_QUALITY ) { //<S2SV> if ( ! cpi -> refresh_alt_ref_frame ) { //<S2SV> active_best_quality = cpi -> cq_target_quality ; //<S2SV> } else { //<S2SV> if ( rc -> frames_since_key > 1 ) { //<S2SV> active_best_quality = get_active_quality ( //<S2SV> q , rc -> gfu_boost , gf_low , gf_high , //<S2SV> afq_low_motion_minq , afq_high_motion_minq ) ; //<S2SV> } else { //<S2SV> active_best_quality = get_active_quality ( //<S2SV> q , rc -> gfu_boost , gf_low , gf_high , //<S2SV> gf_low_motion_minq , gf_high_motion_minq ) ; //<S2SV> } //<S2SV> } //<S2SV> } else { //<S2SV> active_best_quality = get_active_quality ( //<S2SV> q , rc -> gfu_boost , gf_low , gf_high , //<S2SV> gf_low_motion_minq , gf_high_motion_minq ) ; //<S2SV> } //<S2SV> } else { //<S2SV> if ( oxcf -> end_usage == USAGE_CONSTANT_QUALITY ) { //<S2SV> active_best_quality = cpi -> cq_target_quality ; //<S2SV> } else { //<S2SV> if ( cm -> current_video_frame > 1 ) //<S2SV> active_best_quality = inter_minq [ rc -> avg_frame_qindex [ INTER_FRAME ] ] ; //<S2SV> else //<S2SV> active_best_quality = inter_minq [ rc -> avg_frame_qindex [ KEY_FRAME ] ] ; //<S2SV> if ( ( oxcf -> end_usage == USAGE_CONSTRAINED_QUALITY ) && //<S2SV> ( active_best_quality < cpi -> cq_target_quality ) ) { //<S2SV> if ( rc -> rolling_actual_bits < rc -> min_frame_bandwidth ) //<S2SV> active_best_quality = oxcf -> cq_level ; //<S2SV> else //<S2SV> active_best_quality = cpi -> cq_target_quality ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> active_best_quality = clamp ( active_best_quality , //<S2SV> rc -> best_quality , rc -> worst_quality ) ; //<S2SV> active_worst_quality = clamp ( active_worst_quality , //<S2SV> active_best_quality , rc -> worst_quality ) ; //<S2SV> * top_index = active_worst_quality ; //<S2SV> * bottom_index = active_best_quality ; //<S2SV> # if LIMIT_QRANGE_FOR_ALTREF_AND_KEY //<S2SV> if ( cm -> frame_type == KEY_FRAME && ! rc -> this_key_frame_forced ) { //<S2SV> if ( ! ( cm -> current_video_frame == 0 ) ) //<S2SV> * top_index = ( active_worst_quality + active_best_quality * 3 ) / 4 ; //<S2SV> } else if ( ! rc -> is_src_frame_alt_ref && //<S2SV> ( cpi -> refresh_golden_frame || cpi -> refresh_alt_ref_frame ) ) { //<S2SV> * top_index = ( active_worst_quality + active_best_quality ) / 2 ; //<S2SV> } //<S2SV> # endif //<S2SV> if ( oxcf -> end_usage == USAGE_CONSTANT_QUALITY ) { //<S2SV> q = active_best_quality ; //<S2SV> } else if ( ( cm -> frame_type == KEY_FRAME ) && rc -> this_key_frame_forced ) { //<S2SV> q = rc -> last_boosted_qindex ; //<S2SV> } else { //<S2SV> q = vp9_rc_regulate_q ( cpi , rc -> this_frame_target , //<S2SV> active_best_quality , active_worst_quality ) ; //<S2SV> if ( q > * top_index ) { //<S2SV> if ( rc -> this_frame_target >= rc -> max_frame_bandwidth ) //<S2SV> * top_index = q ; //<S2SV> else //<S2SV> q = * top_index ; //<S2SV> } //<S2SV> } //<S2SV> # if CONFIG_MULTIPLE_ARF //<S2SV> if ( cpi -> multi_arf_enabled && ( cm -> frame_type != KEY_FRAME ) && //<S2SV> cpi -> oxcf . end_usage != USAGE_CONSTANT_QUALITY ) { //<S2SV> double new_q ; //<S2SV> double current_q = vp9_convert_qindex_to_q ( active_worst_quality ) ; //<S2SV> int level = cpi -> this_frame_weight ; //<S2SV> assert ( level >= 0 ) ; //<S2SV> new_q = current_q * ( 1.0 - ( 0.2 * ( cpi -> max_arf_level - level ) ) ) ; //<S2SV> q = active_worst_quality + //<S2SV> vp9_compute_qdelta ( rc , current_q , new_q ) ; //<S2SV> * bottom_index = q ; //<S2SV> * top_index = q ; //<S2SV> printf ( "frame:%d<S2SV_blank>q:%d\\n" , cm -> current_video_frame , q ) ; //<S2SV> } //<S2SV> # endif //<S2SV> assert ( * top_index <= rc -> worst_quality && //<S2SV> * top_index >= rc -> best_quality ) ; //<S2SV> assert ( * bottom_index <= rc -> worst_quality && //<S2SV> * bottom_index >= rc -> best_quality ) ; //<S2SV> assert ( q <= rc -> worst_quality && q >= rc -> best_quality ) ; //<S2SV> return q ; //<S2SV> } //<S2SV> 