void vp9_init_layer_context ( VP9_COMP * const cpi ) { //<S2SV> SVC * const svc = & cpi -> svc ; //<S2SV> const VP9_CONFIG * const oxcf = & cpi -> oxcf ; //<S2SV> int layer ; //<S2SV> int layer_end ; //<S2SV> svc -> spatial_layer_id = 0 ; //<S2SV> svc -> temporal_layer_id = 0 ; //<S2SV> if ( svc -> number_temporal_layers > 1 ) { //<S2SV> layer_end = svc -> number_temporal_layers ; //<S2SV> } else { //<S2SV> layer_end = svc -> number_spatial_layers ; //<S2SV> } //<S2SV> for ( layer = 0 ; layer < layer_end ; ++ layer ) { //<S2SV> LAYER_CONTEXT * const lc = & svc -> layer_context [ layer ] ; //<S2SV> RATE_CONTROL * const lrc = & lc -> rc ; //<S2SV> lc -> current_video_frame_in_layer = 0 ; //<S2SV> lrc -> avg_frame_qindex [ INTER_FRAME ] = oxcf -> worst_allowed_q ; //<S2SV> lrc -> ni_av_qi = oxcf -> worst_allowed_q ; //<S2SV> lrc -> total_actual_bits = 0 ; //<S2SV> lrc -> total_target_vs_actual = 0 ; //<S2SV> lrc -> ni_tot_qi = 0 ; //<S2SV> lrc -> tot_q = 0.0 ; //<S2SV> lrc -> avg_q = 0.0 ; //<S2SV> lrc -> ni_frames = 0 ; //<S2SV> lrc -> decimation_count = 0 ; //<S2SV> lrc -> decimation_factor = 0 ; //<S2SV> lrc -> rate_correction_factor = 1.0 ; //<S2SV> lrc -> key_frame_rate_correction_factor = 1.0 ; //<S2SV> if ( svc -> number_temporal_layers > 1 ) { //<S2SV> lc -> target_bandwidth = oxcf -> ts_target_bitrate [ layer ] * 1000 ; //<S2SV> lrc -> last_q [ INTER_FRAME ] = oxcf -> worst_allowed_q ; //<S2SV> } else { //<S2SV> lc -> target_bandwidth = oxcf -> ss_target_bitrate [ layer ] * 1000 ; //<S2SV> lrc -> last_q [ 0 ] = oxcf -> best_allowed_q ; //<S2SV> lrc -> last_q [ 1 ] = oxcf -> best_allowed_q ; //<S2SV> lrc -> last_q [ 2 ] = oxcf -> best_allowed_q ; //<S2SV> } //<S2SV> lrc -> buffer_level = vp9_rescale ( ( int ) ( oxcf -> starting_buffer_level ) , //<S2SV> lc -> target_bandwidth , 1000 ) ; //<S2SV> lrc -> bits_off_target = lrc -> buffer_level ; //<S2SV> } //<S2SV> } //<S2SV> 