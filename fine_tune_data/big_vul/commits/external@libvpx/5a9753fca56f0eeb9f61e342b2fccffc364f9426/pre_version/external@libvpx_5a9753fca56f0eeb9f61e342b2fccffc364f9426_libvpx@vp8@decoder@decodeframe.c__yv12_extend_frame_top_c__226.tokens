static void yv12_extend_frame_top_c ( YV12_BUFFER_CONFIG * ybf ) //<S2SV> { //<S2SV> int i ; //<S2SV> unsigned char * src_ptr1 ; //<S2SV> unsigned char * dest_ptr1 ; //<S2SV> unsigned int Border ; //<S2SV> int plane_stride ; //<S2SV> Border = ybf -> border ; //<S2SV> plane_stride = ybf -> y_stride ; //<S2SV> src_ptr1 = ybf -> y_buffer - Border ; //<S2SV> dest_ptr1 = src_ptr1 - ( Border * plane_stride ) ; //<S2SV> for ( i = 0 ; i < ( int ) Border ; i ++ ) //<S2SV> { //<S2SV> vpx_memcpy ( dest_ptr1 , src_ptr1 , plane_stride ) ; //<S2SV> dest_ptr1 += plane_stride ; //<S2SV> } //<S2SV> plane_stride = ybf -> uv_stride ; //<S2SV> Border /= 2 ; //<S2SV> src_ptr1 = ybf -> u_buffer - Border ; //<S2SV> dest_ptr1 = src_ptr1 - ( Border * plane_stride ) ; //<S2SV> for ( i = 0 ; i < ( int ) ( Border ) ; i ++ ) //<S2SV> { //<S2SV> vpx_memcpy ( dest_ptr1 , src_ptr1 , plane_stride ) ; //<S2SV> dest_ptr1 += plane_stride ; //<S2SV> } //<S2SV> src_ptr1 = ybf -> v_buffer - Border ; //<S2SV> dest_ptr1 = src_ptr1 - ( Border * plane_stride ) ; //<S2SV> for ( i = 0 ; i < ( int ) ( Border ) ; i ++ ) //<S2SV> { //<S2SV> vpx_memcpy ( dest_ptr1 , src_ptr1 , plane_stride ) ; //<S2SV> dest_ptr1 += plane_stride ; //<S2SV> } //<S2SV> } //<S2SV> 