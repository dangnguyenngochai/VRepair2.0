static void vp8_init_ctx ( vpx_codec_ctx_t * ctx , const vpx_codec_mmap_t * mmap ) //<S2SV> { //<S2SV> int i ; //<S2SV> ctx -> priv = mmap -> base ; //<S2SV> ctx -> priv -> sz = sizeof ( * ctx -> priv ) ; //<S2SV> ctx -> priv -> iface = ctx -> iface ; //<S2SV> ctx -> priv -> alg_priv = mmap -> base ; //<S2SV> for ( i = 0 ; i < NELEMENTS ( ctx -> priv -> alg_priv -> mmaps ) ; i ++ ) //<S2SV> ctx -> priv -> alg_priv -> mmaps [ i ] . id = vp8_mem_req_segs [ i ] . id ; //<S2SV> ctx -> priv -> alg_priv -> mmaps [ 0 ] = * mmap ; //<S2SV> ctx -> priv -> alg_priv -> si . sz = sizeof ( ctx -> priv -> alg_priv -> si ) ; //<S2SV> ctx -> priv -> alg_priv -> decrypt_cb = NULL ; //<S2SV> ctx -> priv -> alg_priv -> decrypt_state = NULL ; //<S2SV> ctx -> priv -> init_flags = ctx -> init_flags ; //<S2SV> if ( ctx -> config . dec ) //<S2SV> { //<S2SV> ctx -> priv -> alg_priv -> cfg = * ctx -> config . dec ; //<S2SV> ctx -> config . dec = & ctx -> priv -> alg_priv -> cfg ; //<S2SV> } //<S2SV> } //<S2SV> 