int vp8_denoiser_allocate ( VP8_DENOISER * denoiser , int width , int height ) //<S2SV> { //<S2SV> int i ; //<S2SV> assert ( denoiser ) ; //<S2SV> for ( i = 0 ; i < MAX_REF_FRAMES ; i ++ ) //<S2SV> { //<S2SV> denoiser -> yv12_running_avg [ i ] . flags = 0 ; //<S2SV> if ( vp8_yv12_alloc_frame_buffer ( & ( denoiser -> yv12_running_avg [ i ] ) , width , //<S2SV> height , VP8BORDERINPIXELS ) //<S2SV> < 0 ) //<S2SV> { //<S2SV> vp8_denoiser_free ( denoiser ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> vpx_memset ( denoiser -> yv12_running_avg [ i ] . buffer_alloc , 0 , //<S2SV> denoiser -> yv12_running_avg [ i ] . frame_size ) ; //<S2SV> } //<S2SV> denoiser -> yv12_mc_running_avg . flags = 0 ; //<S2SV> if ( vp8_yv12_alloc_frame_buffer ( & ( denoiser -> yv12_mc_running_avg ) , width , //<S2SV> height , VP8BORDERINPIXELS ) < 0 ) //<S2SV> { //<S2SV> vp8_denoiser_free ( denoiser ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> vpx_memset ( denoiser -> yv12_mc_running_avg . buffer_alloc , 0 , //<S2SV> denoiser -> yv12_mc_running_avg . frame_size ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 