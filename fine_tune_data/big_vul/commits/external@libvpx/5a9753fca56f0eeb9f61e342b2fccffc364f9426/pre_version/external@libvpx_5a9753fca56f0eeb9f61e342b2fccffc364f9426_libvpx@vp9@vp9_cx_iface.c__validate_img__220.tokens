static vpx_codec_err_t validate_img ( vpx_codec_alg_priv_t * ctx , //<S2SV> const vpx_image_t * img ) { //<S2SV> switch ( img -> fmt ) { //<S2SV> case VPX_IMG_FMT_YV12 : //<S2SV> case VPX_IMG_FMT_I420 : //<S2SV> case VPX_IMG_FMT_I422 : //<S2SV> case VPX_IMG_FMT_I444 : //<S2SV> break ; //<S2SV> default : //<S2SV> ERROR ( "Invalid<S2SV_blank>image<S2SV_blank>format.<S2SV_blank>Only<S2SV_blank>YV12,<S2SV_blank>I420,<S2SV_blank>I422,<S2SV_blank>I444<S2SV_blank>images<S2SV_blank>are<S2SV_blank>" //<S2SV> "supported." ) ; //<S2SV> } //<S2SV> if ( img -> d_w != ctx -> cfg . g_w || img -> d_h != ctx -> cfg . g_h ) //<S2SV> ERROR ( "Image<S2SV_blank>size<S2SV_blank>must<S2SV_blank>match<S2SV_blank>encoder<S2SV_blank>init<S2SV_blank>configuration<S2SV_blank>size" ) ; //<S2SV> return VPX_CODEC_OK ; //<S2SV> } //<S2SV> 