void vp9_rc_compute_frame_size_bounds ( const VP9_COMP * cpi , //<S2SV> int this_frame_target , //<S2SV> int * frame_under_shoot_limit , //<S2SV> int * frame_over_shoot_limit ) { //<S2SV> if ( cpi -> oxcf . end_usage == USAGE_CONSTANT_QUALITY ) { //<S2SV> * frame_under_shoot_limit = 0 ; //<S2SV> * frame_over_shoot_limit = INT_MAX ; //<S2SV> } else { //<S2SV> int recode_tolerance = //<S2SV> ( cpi -> sf . recode_tolerance * this_frame_target ) / 100 ; //<S2SV> * frame_over_shoot_limit = this_frame_target + recode_tolerance ; //<S2SV> * frame_under_shoot_limit = this_frame_target - recode_tolerance ; //<S2SV> * frame_over_shoot_limit += 200 ; //<S2SV> * frame_under_shoot_limit -= 200 ; //<S2SV> if ( * frame_under_shoot_limit < 0 ) //<S2SV> * frame_under_shoot_limit = 0 ; //<S2SV> if ( * frame_over_shoot_limit > cpi -> rc . max_frame_bandwidth ) { //<S2SV> * frame_over_shoot_limit = cpi -> rc . max_frame_bandwidth ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> 