static void super_block_uvrd ( const VP9_COMP * cpi , MACROBLOCK * x , //<S2SV> int * rate , int64_t * distortion , int * skippable , //<S2SV> int64_t * sse , BLOCK_SIZE bsize , //<S2SV> int64_t ref_best_rd ) { //<S2SV> MACROBLOCKD * const xd = & x -> e_mbd ; //<S2SV> MB_MODE_INFO * const mbmi = & xd -> mi [ 0 ] -> mbmi ; //<S2SV> TX_SIZE uv_txfm_size = get_uv_tx_size ( mbmi ) ; //<S2SV> int plane ; //<S2SV> int pnrate = 0 , pnskip = 1 ; //<S2SV> int64_t pndist = 0 , pnsse = 0 ; //<S2SV> if ( ref_best_rd < 0 ) //<S2SV> goto term ; //<S2SV> if ( is_inter_block ( mbmi ) ) { //<S2SV> int plane ; //<S2SV> for ( plane = 1 ; plane < MAX_MB_PLANE ; ++ plane ) //<S2SV> vp9_subtract_plane ( x , bsize , plane ) ; //<S2SV> } //<S2SV> * rate = 0 ; //<S2SV> * distortion = 0 ; //<S2SV> * sse = 0 ; //<S2SV> * skippable = 1 ; //<S2SV> for ( plane = 1 ; plane < MAX_MB_PLANE ; ++ plane ) { //<S2SV> txfm_rd_in_plane ( x , & pnrate , & pndist , & pnskip , & pnsse , //<S2SV> ref_best_rd , plane , bsize , uv_txfm_size , //<S2SV> cpi -> sf . use_fast_coef_costing ) ; //<S2SV> if ( pnrate == INT_MAX ) //<S2SV> goto term ; //<S2SV> * rate += pnrate ; //<S2SV> * distortion += pndist ; //<S2SV> * sse += pnsse ; //<S2SV> * skippable &= pnskip ; //<S2SV> } //<S2SV> return ; //<S2SV> term : //<S2SV> * rate = INT_MAX ; //<S2SV> * distortion = INT64_MAX ; //<S2SV> * sse = INT64_MAX ; //<S2SV> * skippable = 0 ; //<S2SV> return ; //<S2SV> } //<S2SV> 