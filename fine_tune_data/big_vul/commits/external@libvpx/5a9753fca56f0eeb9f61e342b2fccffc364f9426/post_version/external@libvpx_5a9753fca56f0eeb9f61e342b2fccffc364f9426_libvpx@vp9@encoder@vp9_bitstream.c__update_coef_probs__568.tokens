static void update_coef_probs ( VP9_COMP * cpi , vpx_writer * w ) { //<S2SV> const TX_MODE tx_mode = cpi -> common . tx_mode ; //<S2SV> const TX_SIZE max_tx_size = tx_mode_to_biggest_tx_size [ tx_mode ] ; //<S2SV> TX_SIZE tx_size ; //<S2SV> for ( tx_size = TX_4X4 ; tx_size <= max_tx_size ; ++ tx_size ) { //<S2SV> vp9_coeff_stats frame_branch_ct [ PLANE_TYPES ] ; //<S2SV> vp9_coeff_probs_model frame_coef_probs [ PLANE_TYPES ] ; //<S2SV> if ( cpi -> td . counts -> tx . tx_totals [ tx_size ] <= 20 || //<S2SV> ( tx_size >= TX_16X16 && cpi -> sf . tx_size_search_method == USE_TX_8X8 ) ) { //<S2SV> vpx_write_bit ( w , 0 ) ; //<S2SV> } else { //<S2SV> build_tree_distribution ( cpi , tx_size , frame_branch_ct , //<S2SV> frame_coef_probs ) ; //<S2SV> update_coef_probs_common ( w , cpi , tx_size , frame_branch_ct , //<S2SV> frame_coef_probs ) ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> 