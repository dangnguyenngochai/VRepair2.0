static int cost_segmap ( int * segcounts , vpx_prob * probs ) { //<S2SV> const int c01 = segcounts [ 0 ] + segcounts [ 1 ] ; //<S2SV> const int c23 = segcounts [ 2 ] + segcounts [ 3 ] ; //<S2SV> const int c45 = segcounts [ 4 ] + segcounts [ 5 ] ; //<S2SV> const int c67 = segcounts [ 6 ] + segcounts [ 7 ] ; //<S2SV> const int c0123 = c01 + c23 ; //<S2SV> const int c4567 = c45 + c67 ; //<S2SV> int cost = c0123 * vp9_cost_zero ( probs [ 0 ] ) + //<S2SV> c4567 * vp9_cost_one ( probs [ 0 ] ) ; //<S2SV> if ( c0123 > 0 ) { //<S2SV> cost += c01 * vp9_cost_zero ( probs [ 1 ] ) + //<S2SV> c23 * vp9_cost_one ( probs [ 1 ] ) ; //<S2SV> if ( c01 > 0 ) //<S2SV> cost += segcounts [ 0 ] * vp9_cost_zero ( probs [ 3 ] ) + //<S2SV> segcounts [ 1 ] * vp9_cost_one ( probs [ 3 ] ) ; //<S2SV> if ( c23 > 0 ) //<S2SV> cost += segcounts [ 2 ] * vp9_cost_zero ( probs [ 4 ] ) + //<S2SV> segcounts [ 3 ] * vp9_cost_one ( probs [ 4 ] ) ; //<S2SV> } //<S2SV> if ( c4567 > 0 ) { //<S2SV> cost += c45 * vp9_cost_zero ( probs [ 2 ] ) + //<S2SV> c67 * vp9_cost_one ( probs [ 2 ] ) ; //<S2SV> if ( c45 > 0 ) //<S2SV> cost += segcounts [ 4 ] * vp9_cost_zero ( probs [ 5 ] ) + //<S2SV> segcounts [ 5 ] * vp9_cost_one ( probs [ 5 ] ) ; //<S2SV> if ( c67 > 0 ) //<S2SV> cost += segcounts [ 6 ] * vp9_cost_zero ( probs [ 6 ] ) + //<S2SV> segcounts [ 7 ] * vp9_cost_one ( probs [ 6 ] ) ; //<S2SV> } //<S2SV> return cost ; //<S2SV> } //<S2SV> 