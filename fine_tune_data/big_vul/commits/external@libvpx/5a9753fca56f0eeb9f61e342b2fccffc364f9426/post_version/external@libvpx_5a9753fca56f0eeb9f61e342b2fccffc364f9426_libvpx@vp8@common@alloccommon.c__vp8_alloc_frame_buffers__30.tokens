int vp8_alloc_frame_buffers ( VP8_COMMON * oci , int width , int height ) //<S2SV> { //<S2SV> int i ; //<S2SV> vp8_de_alloc_frame_buffers ( oci ) ; //<S2SV> if ( ( width & 0xf ) != 0 ) //<S2SV> width += 16 - ( width & 0xf ) ; //<S2SV> if ( ( height & 0xf ) != 0 ) //<S2SV> height += 16 - ( height & 0xf ) ; //<S2SV> for ( i = 0 ; i < NUM_YV12_BUFFERS ; i ++ ) //<S2SV> { //<S2SV> oci -> fb_idx_ref_cnt [ i ] = 0 ; //<S2SV> oci -> yv12_fb [ i ] . flags = 0 ; //<S2SV> if ( vp8_yv12_alloc_frame_buffer ( & oci -> yv12_fb [ i ] , width , height , VP8BORDERINPIXELS ) < 0 ) //<S2SV> goto allocation_fail ; //<S2SV> } //<S2SV> oci -> new_fb_idx = 0 ; //<S2SV> oci -> lst_fb_idx = 1 ; //<S2SV> oci -> gld_fb_idx = 2 ; //<S2SV> oci -> alt_fb_idx = 3 ; //<S2SV> oci -> fb_idx_ref_cnt [ 0 ] = 1 ; //<S2SV> oci -> fb_idx_ref_cnt [ 1 ] = 1 ; //<S2SV> oci -> fb_idx_ref_cnt [ 2 ] = 1 ; //<S2SV> oci -> fb_idx_ref_cnt [ 3 ] = 1 ; //<S2SV> if ( vp8_yv12_alloc_frame_buffer ( & oci -> temp_scale_frame , width , 16 , VP8BORDERINPIXELS ) < 0 ) //<S2SV> goto allocation_fail ; //<S2SV> oci -> mb_rows = height >> 4 ; //<S2SV> oci -> mb_cols = width >> 4 ; //<S2SV> oci -> MBs = oci -> mb_rows * oci -> mb_cols ; //<S2SV> oci -> mode_info_stride = oci -> mb_cols + 1 ; //<S2SV> oci -> mip = vpx_calloc ( ( oci -> mb_cols + 1 ) * ( oci -> mb_rows + 1 ) , sizeof ( MODE_INFO ) ) ; //<S2SV> if ( ! oci -> mip ) //<S2SV> goto allocation_fail ; //<S2SV> oci -> mi = oci -> mip + oci -> mode_info_stride + 1 ; //<S2SV> oci -> above_context = vpx_calloc ( sizeof ( ENTROPY_CONTEXT_PLANES ) * oci -> mb_cols , 1 ) ; //<S2SV> if ( ! oci -> above_context ) //<S2SV> goto allocation_fail ; //<S2SV> # if CONFIG_POSTPROC //<S2SV> if ( vp8_yv12_alloc_frame_buffer ( & oci -> post_proc_buffer , width , height , VP8BORDERINPIXELS ) < 0 ) //<S2SV> goto allocation_fail ; //<S2SV> oci -> post_proc_buffer_int_used = 0 ; //<S2SV> memset ( & oci -> postproc_state , 0 , sizeof ( oci -> postproc_state ) ) ; //<S2SV> memset ( oci -> post_proc_buffer . buffer_alloc , 128 , //<S2SV> oci -> post_proc_buffer . frame_size ) ; //<S2SV> oci -> pp_limits_buffer = vpx_memalign ( 16 , 24 * ( ( oci -> mb_cols + 1 ) & ~ 1 ) ) ; //<S2SV> if ( ! oci -> pp_limits_buffer ) //<S2SV> goto allocation_fail ; //<S2SV> # endif //<S2SV> return 0 ; //<S2SV> allocation_fail : //<S2SV> vp8_de_alloc_frame_buffers ( oci ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> 