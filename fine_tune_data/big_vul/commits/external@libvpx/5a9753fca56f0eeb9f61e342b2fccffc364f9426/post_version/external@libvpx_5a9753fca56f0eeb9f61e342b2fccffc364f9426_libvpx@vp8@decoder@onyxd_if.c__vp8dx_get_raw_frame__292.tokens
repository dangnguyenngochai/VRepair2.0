int vp8dx_get_raw_frame ( VP8D_COMP * pbi , YV12_BUFFER_CONFIG * sd , int64_t * time_stamp , int64_t * time_end_stamp , vp8_ppflags_t * flags ) //<S2SV> { //<S2SV> int ret = - 1 ; //<S2SV> if ( pbi -> ready_for_new_data == 1 ) //<S2SV> return ret ; //<S2SV> if ( pbi -> common . show_frame == 0 ) //<S2SV> return ret ; //<S2SV> pbi -> ready_for_new_data = 1 ; //<S2SV> * time_stamp = pbi -> last_time_stamp ; //<S2SV> * time_end_stamp = 0 ; //<S2SV> # if CONFIG_POSTPROC //<S2SV> ret = vp8_post_proc_frame ( & pbi -> common , sd , flags ) ; //<S2SV> # else //<S2SV> ( void ) flags ; //<S2SV> if ( pbi -> common . frame_to_show ) //<S2SV> { //<S2SV> * sd = * pbi -> common . frame_to_show ; //<S2SV> sd -> y_width = pbi -> common . Width ; //<S2SV> sd -> y_height = pbi -> common . Height ; //<S2SV> sd -> uv_height = pbi -> common . Height / 2 ; //<S2SV> ret = 0 ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> ret = - 1 ; //<S2SV> } //<S2SV> # endif //<S2SV> vp8_clear_system_state ( ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 