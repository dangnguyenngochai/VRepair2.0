void vp9_adapt_mode_probs ( VP9_COMMON * cm ) { //<S2SV> int i , j ; //<S2SV> FRAME_CONTEXT * fc = cm -> fc ; //<S2SV> const FRAME_CONTEXT * pre_fc = & cm -> frame_contexts [ cm -> frame_context_idx ] ; //<S2SV> const FRAME_COUNTS * counts = & cm -> counts ; //<S2SV> for ( i = 0 ; i < INTRA_INTER_CONTEXTS ; i ++ ) //<S2SV> fc -> intra_inter_prob [ i ] = mode_mv_merge_probs ( pre_fc -> intra_inter_prob [ i ] , //<S2SV> counts -> intra_inter [ i ] ) ; //<S2SV> for ( i = 0 ; i < COMP_INTER_CONTEXTS ; i ++ ) //<S2SV> fc -> comp_inter_prob [ i ] = mode_mv_merge_probs ( pre_fc -> comp_inter_prob [ i ] , //<S2SV> counts -> comp_inter [ i ] ) ; //<S2SV> for ( i = 0 ; i < REF_CONTEXTS ; i ++ ) //<S2SV> fc -> comp_ref_prob [ i ] = mode_mv_merge_probs ( pre_fc -> comp_ref_prob [ i ] , //<S2SV> counts -> comp_ref [ i ] ) ; //<S2SV> for ( i = 0 ; i < REF_CONTEXTS ; i ++ ) //<S2SV> for ( j = 0 ; j < 2 ; j ++ ) //<S2SV> fc -> single_ref_prob [ i ] [ j ] = mode_mv_merge_probs ( //<S2SV> pre_fc -> single_ref_prob [ i ] [ j ] , counts -> single_ref [ i ] [ j ] ) ; //<S2SV> for ( i = 0 ; i < INTER_MODE_CONTEXTS ; i ++ ) //<S2SV> vpx_tree_merge_probs ( vp9_inter_mode_tree , pre_fc -> inter_mode_probs [ i ] , //<S2SV> counts -> inter_mode [ i ] , fc -> inter_mode_probs [ i ] ) ; //<S2SV> for ( i = 0 ; i < BLOCK_SIZE_GROUPS ; i ++ ) //<S2SV> vpx_tree_merge_probs ( vp9_intra_mode_tree , pre_fc -> y_mode_prob [ i ] , //<S2SV> counts -> y_mode [ i ] , fc -> y_mode_prob [ i ] ) ; //<S2SV> for ( i = 0 ; i < INTRA_MODES ; ++ i ) //<S2SV> vpx_tree_merge_probs ( vp9_intra_mode_tree , pre_fc -> uv_mode_prob [ i ] , //<S2SV> counts -> uv_mode [ i ] , fc -> uv_mode_prob [ i ] ) ; //<S2SV> for ( i = 0 ; i < PARTITION_CONTEXTS ; i ++ ) //<S2SV> vpx_tree_merge_probs ( vp9_partition_tree , pre_fc -> partition_prob [ i ] , //<S2SV> counts -> partition [ i ] , fc -> partition_prob [ i ] ) ; //<S2SV> if ( cm -> interp_filter == SWITCHABLE ) { //<S2SV> for ( i = 0 ; i < SWITCHABLE_FILTER_CONTEXTS ; i ++ ) //<S2SV> vpx_tree_merge_probs ( vp9_switchable_interp_tree , //<S2SV> pre_fc -> switchable_interp_prob [ i ] , //<S2SV> counts -> switchable_interp [ i ] , //<S2SV> fc -> switchable_interp_prob [ i ] ) ; //<S2SV> } //<S2SV> if ( cm -> tx_mode == TX_MODE_SELECT ) { //<S2SV> int j ; //<S2SV> unsigned int branch_ct_8x8p [ TX_SIZES - 3 ] [ 2 ] ; //<S2SV> unsigned int branch_ct_16x16p [ TX_SIZES - 2 ] [ 2 ] ; //<S2SV> unsigned int branch_ct_32x32p [ TX_SIZES - 1 ] [ 2 ] ; //<S2SV> for ( i = 0 ; i < TX_SIZE_CONTEXTS ; ++ i ) { //<S2SV> tx_counts_to_branch_counts_8x8 ( counts -> tx . p8x8 [ i ] , branch_ct_8x8p ) ; //<S2SV> for ( j = 0 ; j < TX_SIZES - 3 ; ++ j ) //<S2SV> fc -> tx_probs . p8x8 [ i ] [ j ] = mode_mv_merge_probs ( //<S2SV> pre_fc -> tx_probs . p8x8 [ i ] [ j ] , branch_ct_8x8p [ j ] ) ; //<S2SV> tx_counts_to_branch_counts_16x16 ( counts -> tx . p16x16 [ i ] , branch_ct_16x16p ) ; //<S2SV> for ( j = 0 ; j < TX_SIZES - 2 ; ++ j ) //<S2SV> fc -> tx_probs . p16x16 [ i ] [ j ] = mode_mv_merge_probs ( //<S2SV> pre_fc -> tx_probs . p16x16 [ i ] [ j ] , branch_ct_16x16p [ j ] ) ; //<S2SV> tx_counts_to_branch_counts_32x32 ( counts -> tx . p32x32 [ i ] , branch_ct_32x32p ) ; //<S2SV> for ( j = 0 ; j < TX_SIZES - 1 ; ++ j ) //<S2SV> fc -> tx_probs . p32x32 [ i ] [ j ] = mode_mv_merge_probs ( //<S2SV> pre_fc -> tx_probs . p32x32 [ i ] [ j ] , branch_ct_32x32p [ j ] ) ; //<S2SV> } //<S2SV> } //<S2SV> for ( i = 0 ; i < SKIP_CONTEXTS ; ++ i ) //<S2SV> fc -> skip_probs [ i ] = mode_mv_merge_probs ( //<S2SV> pre_fc -> skip_probs [ i ] , counts -> skip [ i ] ) ; //<S2SV> } //<S2SV> 