int vp8_denoiser_allocate ( VP8_DENOISER * denoiser , int width , int height , //<S2SV> int num_mb_rows , int num_mb_cols , int mode ) //<S2SV> { //<S2SV> int i ; //<S2SV> assert ( denoiser ) ; //<S2SV> denoiser -> num_mb_cols = num_mb_cols ; //<S2SV> for ( i = 0 ; i < MAX_REF_FRAMES ; i ++ ) //<S2SV> { //<S2SV> denoiser -> yv12_running_avg [ i ] . flags = 0 ; //<S2SV> if ( vp8_yv12_alloc_frame_buffer ( & ( denoiser -> yv12_running_avg [ i ] ) , width , //<S2SV> height , VP8BORDERINPIXELS ) //<S2SV> < 0 ) //<S2SV> { //<S2SV> vp8_denoiser_free ( denoiser ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> memset ( denoiser -> yv12_running_avg [ i ] . buffer_alloc , 0 , //<S2SV> denoiser -> yv12_running_avg [ i ] . frame_size ) ; //<S2SV> } //<S2SV> denoiser -> yv12_mc_running_avg . flags = 0 ; //<S2SV> if ( vp8_yv12_alloc_frame_buffer ( & ( denoiser -> yv12_mc_running_avg ) , width , //<S2SV> height , VP8BORDERINPIXELS ) < 0 ) //<S2SV> { //<S2SV> vp8_denoiser_free ( denoiser ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> memset ( denoiser -> yv12_mc_running_avg . buffer_alloc , 0 , //<S2SV> denoiser -> yv12_mc_running_avg . frame_size ) ; //<S2SV> if ( vp8_yv12_alloc_frame_buffer ( & denoiser -> yv12_last_source , width , //<S2SV> height , VP8BORDERINPIXELS ) < 0 ) { //<S2SV> vp8_denoiser_free ( denoiser ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> memset ( denoiser -> yv12_last_source . buffer_alloc , 0 , //<S2SV> denoiser -> yv12_last_source . frame_size ) ; //<S2SV> denoiser -> denoise_state = vpx_calloc ( ( num_mb_rows * num_mb_cols ) , 1 ) ; //<S2SV> memset ( denoiser -> denoise_state , 0 , ( num_mb_rows * num_mb_cols ) ) ; //<S2SV> vp8_denoiser_set_parameters ( denoiser , mode ) ; //<S2SV> denoiser -> nmse_source_diff = 0 ; //<S2SV> denoiser -> nmse_source_diff_count = 0 ; //<S2SV> denoiser -> qp_avg = 0 ; //<S2SV> denoiser -> qp_threshold_up = 80 ; //<S2SV> denoiser -> qp_threshold_down = 128 ; //<S2SV> denoiser -> bitrate_threshold = 400000 ; //<S2SV> denoiser -> threshold_aggressive_mode = 80 ; //<S2SV> if ( width * height > 1280 * 720 ) { //<S2SV> denoiser -> bitrate_threshold = 3000000 ; //<S2SV> denoiser -> threshold_aggressive_mode = 200 ; //<S2SV> } else if ( width * height > 960 * 540 ) { //<S2SV> denoiser -> bitrate_threshold = 1200000 ; //<S2SV> denoiser -> threshold_aggressive_mode = 120 ; //<S2SV> } else if ( width * height > 640 * 480 ) { //<S2SV> denoiser -> bitrate_threshold = 600000 ; //<S2SV> denoiser -> threshold_aggressive_mode = 100 ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 