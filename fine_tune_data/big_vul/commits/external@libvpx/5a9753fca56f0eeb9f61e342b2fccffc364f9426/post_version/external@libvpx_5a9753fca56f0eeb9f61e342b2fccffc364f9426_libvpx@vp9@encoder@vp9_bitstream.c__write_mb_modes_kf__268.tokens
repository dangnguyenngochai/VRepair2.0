static void write_mb_modes_kf ( const VP9_COMMON * cm , const MACROBLOCKD * xd , //<S2SV> MODE_INFO * * mi_8x8 , vpx_writer * w ) { //<S2SV> const struct segmentation * const seg = & cm -> seg ; //<S2SV> const MODE_INFO * const mi = mi_8x8 [ 0 ] ; //<S2SV> const MODE_INFO * const above_mi = xd -> above_mi ; //<S2SV> const MODE_INFO * const left_mi = xd -> left_mi ; //<S2SV> const MB_MODE_INFO * const mbmi = & mi -> mbmi ; //<S2SV> const BLOCK_SIZE bsize = mbmi -> sb_type ; //<S2SV> if ( seg -> update_map ) //<S2SV> write_segment_id ( w , seg , mbmi -> segment_id ) ; //<S2SV> write_skip ( cm , xd , mbmi -> segment_id , mi , w ) ; //<S2SV> if ( bsize >= BLOCK_8X8 && cm -> tx_mode == TX_MODE_SELECT ) //<S2SV> write_selected_tx_size ( cm , xd , w ) ; //<S2SV> if ( bsize >= BLOCK_8X8 ) { //<S2SV> write_intra_mode ( w , mbmi -> mode , get_y_mode_probs ( mi , above_mi , left_mi , 0 ) ) ; //<S2SV> } else { //<S2SV> const int num_4x4_w = num_4x4_blocks_wide_lookup [ bsize ] ; //<S2SV> const int num_4x4_h = num_4x4_blocks_high_lookup [ bsize ] ; //<S2SV> int idx , idy ; //<S2SV> for ( idy = 0 ; idy < 2 ; idy += num_4x4_h ) { //<S2SV> for ( idx = 0 ; idx < 2 ; idx += num_4x4_w ) { //<S2SV> const int block = idy * 2 + idx ; //<S2SV> write_intra_mode ( w , mi -> bmi [ block ] . as_mode , //<S2SV> get_y_mode_probs ( mi , above_mi , left_mi , block ) ) ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> write_intra_mode ( w , mbmi -> uv_mode , vp9_kf_uv_mode_prob [ mbmi -> mode ] ) ; //<S2SV> } //<S2SV> 