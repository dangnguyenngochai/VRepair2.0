void vp9_encode_mv ( VP9_COMP * cpi , vpx_writer * w , //<S2SV> const MV * mv , const MV * ref , //<S2SV> const nmv_context * mvctx , int usehp ) { //<S2SV> const MV diff = { mv -> row - ref -> row , //<S2SV> mv -> col - ref -> col } ; //<S2SV> const MV_JOINT_TYPE j = vp9_get_mv_joint ( & diff ) ; //<S2SV> usehp = usehp && vp9_use_mv_hp ( ref ) ; //<S2SV> vp9_write_token ( w , vp9_mv_joint_tree , mvctx -> joints , & mv_joint_encodings [ j ] ) ; //<S2SV> if ( mv_joint_vertical ( j ) ) //<S2SV> encode_mv_component ( w , diff . row , & mvctx -> comps [ 0 ] , usehp ) ; //<S2SV> if ( mv_joint_horizontal ( j ) ) //<S2SV> encode_mv_component ( w , diff . col , & mvctx -> comps [ 1 ] , usehp ) ; //<S2SV> if ( cpi -> sf . mv . auto_mv_step_size ) { //<S2SV> unsigned int maxv = MAX ( abs ( mv -> row ) , abs ( mv -> col ) ) >> 3 ; //<S2SV> cpi -> max_mv_magnitude = MAX ( maxv , cpi -> max_mv_magnitude ) ; //<S2SV> } //<S2SV> } //<S2SV> 