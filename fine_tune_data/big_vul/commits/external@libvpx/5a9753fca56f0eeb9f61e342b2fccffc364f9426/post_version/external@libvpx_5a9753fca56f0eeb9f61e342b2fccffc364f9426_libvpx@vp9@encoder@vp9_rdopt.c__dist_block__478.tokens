static void dist_block ( MACROBLOCK * x , int plane , int block , TX_SIZE tx_size , //<S2SV> int64_t * out_dist , int64_t * out_sse ) { //<S2SV> const int ss_txfrm_size = tx_size << 1 ; //<S2SV> MACROBLOCKD * const xd = & x -> e_mbd ; //<S2SV> const struct macroblock_plane * const p = & x -> plane [ plane ] ; //<S2SV> const struct macroblockd_plane * const pd = & xd -> plane [ plane ] ; //<S2SV> int64_t this_sse ; //<S2SV> int shift = tx_size == TX_32X32 ? 0 : 2 ; //<S2SV> tran_low_t * const coeff = BLOCK_OFFSET ( p -> coeff , block ) ; //<S2SV> tran_low_t * const dqcoeff = BLOCK_OFFSET ( pd -> dqcoeff , block ) ; //<S2SV> # if CONFIG_VP9_HIGHBITDEPTH //<S2SV> const int bd = ( xd -> cur_buf -> flags & YV12_FLAG_HIGHBITDEPTH ) ? xd -> bd : 8 ; //<S2SV> * out_dist = vp9_highbd_block_error ( coeff , dqcoeff , 16 << ss_txfrm_size , //<S2SV> & this_sse , bd ) >> shift ; //<S2SV> # else //<S2SV> * out_dist = vp9_block_error ( coeff , dqcoeff , 16 << ss_txfrm_size , //<S2SV> & this_sse ) >> shift ; //<S2SV> # endif //<S2SV> * out_sse = this_sse >> shift ; //<S2SV> if ( x -> skip_encode && ! is_inter_block ( & xd -> mi [ 0 ] -> mbmi ) ) { //<S2SV> int64_t p = ( pd -> dequant [ 1 ] * pd -> dequant [ 1 ] * //<S2SV> ( 1 << ss_txfrm_size ) ) >> //<S2SV> # if CONFIG_VP9_HIGHBITDEPTH //<S2SV> ( shift + 2 + ( bd - 8 ) * 2 ) ; //<S2SV> # else //<S2SV> ( shift + 2 ) ; //<S2SV> # endif //<S2SV> * out_dist += ( p >> 4 ) ; //<S2SV> * out_sse += p ; //<S2SV> } //<S2SV> } //<S2SV> 