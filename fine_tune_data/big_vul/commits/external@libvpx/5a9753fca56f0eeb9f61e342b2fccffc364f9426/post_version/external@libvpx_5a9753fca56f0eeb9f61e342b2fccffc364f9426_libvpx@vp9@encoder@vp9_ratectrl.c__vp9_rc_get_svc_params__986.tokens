void vp9_rc_get_svc_params ( VP9_COMP * cpi ) { //<S2SV> VP9_COMMON * const cm = & cpi -> common ; //<S2SV> RATE_CONTROL * const rc = & cpi -> rc ; //<S2SV> int target = rc -> avg_frame_bandwidth ; //<S2SV> const int layer = LAYER_IDS_TO_IDX ( cpi -> svc . spatial_layer_id , //<S2SV> cpi -> svc . temporal_layer_id , cpi -> svc . number_temporal_layers ) ; //<S2SV> if ( ( cm -> current_video_frame == 0 ) || //<S2SV> ( cpi -> frame_flags & FRAMEFLAGS_KEY ) || //<S2SV> ( cpi -> oxcf . auto_key && ( rc -> frames_since_key % //<S2SV> cpi -> oxcf . key_freq == 0 ) ) ) { //<S2SV> cm -> frame_type = KEY_FRAME ; //<S2SV> rc -> source_alt_ref_active = 0 ; //<S2SV> if ( is_two_pass_svc ( cpi ) ) { //<S2SV> cpi -> svc . layer_context [ layer ] . is_key_frame = 1 ; //<S2SV> cpi -> ref_frame_flags &= //<S2SV> ( ~ VP9_LAST_FLAG & ~ VP9_GOLD_FLAG & ~ VP9_ALT_FLAG ) ; //<S2SV> } else if ( is_one_pass_cbr_svc ( cpi ) ) { //<S2SV> cpi -> svc . layer_context [ layer ] . is_key_frame = 1 ; //<S2SV> reset_temporal_layer_to_zero ( cpi ) ; //<S2SV> cpi -> ref_frame_flags &= //<S2SV> ( ~ VP9_LAST_FLAG & ~ VP9_GOLD_FLAG & ~ VP9_ALT_FLAG ) ; //<S2SV> target = calc_iframe_target_size_one_pass_cbr ( cpi ) ; //<S2SV> } //<S2SV> } else { //<S2SV> cm -> frame_type = INTER_FRAME ; //<S2SV> if ( is_two_pass_svc ( cpi ) ) { //<S2SV> LAYER_CONTEXT * lc = & cpi -> svc . layer_context [ layer ] ; //<S2SV> if ( cpi -> svc . spatial_layer_id == 0 ) { //<S2SV> lc -> is_key_frame = 0 ; //<S2SV> } else { //<S2SV> lc -> is_key_frame = //<S2SV> cpi -> svc . layer_context [ cpi -> svc . temporal_layer_id ] . is_key_frame ; //<S2SV> if ( lc -> is_key_frame ) //<S2SV> cpi -> ref_frame_flags &= ( ~ VP9_LAST_FLAG ) ; //<S2SV> } //<S2SV> cpi -> ref_frame_flags &= ( ~ VP9_ALT_FLAG ) ; //<S2SV> } else if ( is_one_pass_cbr_svc ( cpi ) ) { //<S2SV> LAYER_CONTEXT * lc = & cpi -> svc . layer_context [ layer ] ; //<S2SV> if ( cpi -> svc . spatial_layer_id == 0 ) { //<S2SV> lc -> is_key_frame = 0 ; //<S2SV> } else { //<S2SV> lc -> is_key_frame = //<S2SV> cpi -> svc . layer_context [ cpi -> svc . temporal_layer_id ] . is_key_frame ; //<S2SV> } //<S2SV> target = calc_pframe_target_size_one_pass_cbr ( cpi ) ; //<S2SV> } //<S2SV> } //<S2SV> if ( cpi -> oxcf . aq_mode == CYCLIC_REFRESH_AQ ) //<S2SV> vp9_cyclic_refresh_update_parameters ( cpi ) ; //<S2SV> vp9_rc_set_frame_target ( cpi , target ) ; //<S2SV> rc -> frames_till_gf_update_due = INT_MAX ; //<S2SV> rc -> baseline_gf_interval = INT_MAX ; //<S2SV> } //<S2SV> 