static INLINE void read_mv ( vpx_reader * r , MV * mv , const MV * ref , //<S2SV> const nmv_context * ctx , //<S2SV> nmv_context_counts * counts , int allow_hp ) { //<S2SV> const MV_JOINT_TYPE joint_type = //<S2SV> ( MV_JOINT_TYPE ) vpx_read_tree ( r , vp9_mv_joint_tree , ctx -> joints ) ; //<S2SV> const int use_hp = allow_hp && vp9_use_mv_hp ( ref ) ; //<S2SV> MV diff = { 0 , 0 } ; //<S2SV> if ( mv_joint_vertical ( joint_type ) ) //<S2SV> diff . row = read_mv_component ( r , & ctx -> comps [ 0 ] , use_hp ) ; //<S2SV> if ( mv_joint_horizontal ( joint_type ) ) //<S2SV> diff . col = read_mv_component ( r , & ctx -> comps [ 1 ] , use_hp ) ; //<S2SV> vp9_inc_mv ( & diff , counts ) ; //<S2SV> mv -> row = ref -> row + diff . row ; //<S2SV> mv -> col = ref -> col + diff . col ; //<S2SV> } //<S2SV> 