static void set_roi_map ( const vpx_codec_enc_cfg_t * cfg , //<S2SV> vpx_codec_ctx_t * codec ) { //<S2SV> unsigned int i ; //<S2SV> vpx_roi_map_t roi ; //<S2SV> memset ( & roi , 0 , sizeof ( roi ) ) ; //<S2SV> roi . rows = ( cfg -> g_h + 15 ) / 16 ; //<S2SV> roi . cols = ( cfg -> g_w + 15 ) / 16 ; //<S2SV> roi . delta_q [ 0 ] = 0 ; //<S2SV> roi . delta_q [ 1 ] = - 2 ; //<S2SV> roi . delta_q [ 2 ] = - 4 ; //<S2SV> roi . delta_q [ 3 ] = - 6 ; //<S2SV> roi . delta_lf [ 0 ] = 0 ; //<S2SV> roi . delta_lf [ 1 ] = 1 ; //<S2SV> roi . delta_lf [ 2 ] = 2 ; //<S2SV> roi . delta_lf [ 3 ] = 3 ; //<S2SV> roi . static_threshold [ 0 ] = 1500 ; //<S2SV> roi . static_threshold [ 1 ] = 1000 ; //<S2SV> roi . static_threshold [ 2 ] = 500 ; //<S2SV> roi . static_threshold [ 3 ] = 0 ; //<S2SV> roi . roi_map = ( uint8_t * ) malloc ( roi . rows * roi . cols ) ; //<S2SV> for ( i = 0 ; i < roi . rows * roi . cols ; ++ i ) //<S2SV> roi . roi_map [ i ] = i % 4 ; //<S2SV> if ( vpx_codec_control ( codec , VP8E_SET_ROI_MAP , & roi ) ) //<S2SV> die_codec ( codec , "Failed<S2SV_blank>to<S2SV_blank>set<S2SV_blank>ROI<S2SV_blank>map" ) ; //<S2SV> free ( roi . roi_map ) ; //<S2SV> } //<S2SV> 