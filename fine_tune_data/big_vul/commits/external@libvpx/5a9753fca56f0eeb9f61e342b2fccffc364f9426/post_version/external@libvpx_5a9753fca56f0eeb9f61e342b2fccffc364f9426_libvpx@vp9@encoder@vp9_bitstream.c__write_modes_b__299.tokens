static void write_modes_b ( VP9_COMP * cpi , const TileInfo * const tile , //<S2SV> vpx_writer * w , TOKENEXTRA * * tok , //<S2SV> const TOKENEXTRA * const tok_end , //<S2SV> int mi_row , int mi_col ) { //<S2SV> const VP9_COMMON * const cm = & cpi -> common ; //<S2SV> MACROBLOCKD * const xd = & cpi -> td . mb . e_mbd ; //<S2SV> MODE_INFO * m ; //<S2SV> xd -> mi = cm -> mi_grid_visible + ( mi_row * cm -> mi_stride + mi_col ) ; //<S2SV> m = xd -> mi [ 0 ] ; //<S2SV> cpi -> td . mb . mbmi_ext = cpi -> td . mb . mbmi_ext_base + //<S2SV> ( mi_row * cm -> mi_cols + mi_col ) ; //<S2SV> set_mi_row_col ( xd , tile , //<S2SV> mi_row , num_8x8_blocks_high_lookup [ m -> mbmi . sb_type ] , //<S2SV> mi_col , num_8x8_blocks_wide_lookup [ m -> mbmi . sb_type ] , //<S2SV> cm -> mi_rows , cm -> mi_cols ) ; //<S2SV> if ( frame_is_intra_only ( cm ) ) { //<S2SV> write_mb_modes_kf ( cm , xd , xd -> mi , w ) ; //<S2SV> } else { //<S2SV> pack_inter_mode_mvs ( cpi , m , w ) ; //<S2SV> } //<S2SV> assert ( * tok < tok_end ) ; //<S2SV> pack_mb_tokens ( w , tok , tok_end , cm -> bit_depth ) ; //<S2SV> } //<S2SV> 