static void set_rt_speed_feature ( VP9_COMP * cpi , SPEED_FEATURES * sf , //<S2SV> int speed , vp9e_tune_content content ) { //<S2SV> VP9_COMMON * const cm = & cpi -> common ; //<S2SV> const int is_keyframe = cm -> frame_type == KEY_FRAME ; //<S2SV> const int frames_since_key = is_keyframe ? 0 : cpi -> rc . frames_since_key ; //<S2SV> sf -> static_segmentation = 0 ; //<S2SV> sf -> adaptive_rd_thresh = 1 ; //<S2SV> sf -> use_fast_coef_costing = 1 ; //<S2SV> if ( speed >= 1 ) { //<S2SV> sf -> use_square_partition_only = ! frame_is_intra_only ( cm ) ; //<S2SV> sf -> less_rectangular_check = 1 ; //<S2SV> sf -> tx_size_search_method = frame_is_intra_only ( cm ) ? USE_FULL_RD //<S2SV> : USE_LARGESTALL ; //<S2SV> sf -> use_rd_breakout = 1 ; //<S2SV> sf -> adaptive_motion_search = 1 ; //<S2SV> sf -> adaptive_pred_interp_filter = 1 ; //<S2SV> sf -> mv . auto_mv_step_size = 1 ; //<S2SV> sf -> adaptive_rd_thresh = 2 ; //<S2SV> sf -> intra_y_mode_mask [ TX_32X32 ] = INTRA_DC_H_V ; //<S2SV> sf -> intra_uv_mode_mask [ TX_32X32 ] = INTRA_DC_H_V ; //<S2SV> sf -> intra_uv_mode_mask [ TX_16X16 ] = INTRA_DC_H_V ; //<S2SV> } //<S2SV> if ( speed >= 2 ) { //<S2SV> sf -> mode_search_skip_flags = ( cm -> frame_type == KEY_FRAME ) ? 0 : //<S2SV> FLAG_SKIP_INTRA_DIRMISMATCH | //<S2SV> FLAG_SKIP_INTRA_BESTINTER | //<S2SV> FLAG_SKIP_COMP_BESTINTRA | //<S2SV> FLAG_SKIP_INTRA_LOWVAR ; //<S2SV> sf -> adaptive_pred_interp_filter = 2 ; //<S2SV> sf -> reference_masking = ( cpi -> oxcf . resize_mode != RESIZE_DYNAMIC && //<S2SV> cpi -> svc . number_spatial_layers == 1 ) ? 1 : 0 ; //<S2SV> sf -> disable_filter_search_var_thresh = 50 ; //<S2SV> sf -> comp_inter_joint_search_thresh = BLOCK_SIZES ; //<S2SV> sf -> auto_min_max_partition_size = RELAXED_NEIGHBORING_MIN_MAX ; //<S2SV> sf -> lf_motion_threshold = LOW_MOTION_THRESHOLD ; //<S2SV> sf -> adjust_partitioning_from_last_frame = 1 ; //<S2SV> sf -> last_partitioning_redo_frequency = 3 ; //<S2SV> sf -> use_lp32x32fdct = 1 ; //<S2SV> sf -> mode_skip_start = 11 ; //<S2SV> sf -> intra_y_mode_mask [ TX_16X16 ] = INTRA_DC_H_V ; //<S2SV> } //<S2SV> if ( speed >= 3 ) { //<S2SV> sf -> use_square_partition_only = 1 ; //<S2SV> sf -> disable_filter_search_var_thresh = 100 ; //<S2SV> sf -> use_uv_intra_rd_estimate = 1 ; //<S2SV> sf -> skip_encode_sb = 1 ; //<S2SV> sf -> mv . subpel_iters_per_step = 1 ; //<S2SV> sf -> adaptive_rd_thresh = 4 ; //<S2SV> sf -> mode_skip_start = 6 ; //<S2SV> sf -> allow_skip_recode = 0 ; //<S2SV> sf -> optimize_coefficients = 0 ; //<S2SV> sf -> disable_split_mask = DISABLE_ALL_SPLIT ; //<S2SV> sf -> lpf_pick = LPF_PICK_FROM_Q ; //<S2SV> } //<S2SV> if ( speed >= 4 ) { //<S2SV> int i ; //<S2SV> sf -> last_partitioning_redo_frequency = 4 ; //<S2SV> sf -> adaptive_rd_thresh = 5 ; //<S2SV> sf -> use_fast_coef_costing = 0 ; //<S2SV> sf -> auto_min_max_partition_size = STRICT_NEIGHBORING_MIN_MAX ; //<S2SV> sf -> adjust_partitioning_from_last_frame = //<S2SV> cm -> last_frame_type != cm -> frame_type || ( 0 == //<S2SV> ( frames_since_key + 1 ) % sf -> last_partitioning_redo_frequency ) ; //<S2SV> sf -> mv . subpel_force_stop = 1 ; //<S2SV> for ( i = 0 ; i < TX_SIZES ; i ++ ) { //<S2SV> sf -> intra_y_mode_mask [ i ] = INTRA_DC_H_V ; //<S2SV> sf -> intra_uv_mode_mask [ i ] = INTRA_DC ; //<S2SV> } //<S2SV> sf -> intra_y_mode_mask [ TX_32X32 ] = INTRA_DC ; //<S2SV> sf -> frame_parameter_update = 0 ; //<S2SV> sf -> mv . search_method = FAST_HEX ; //<S2SV> sf -> inter_mode_mask [ BLOCK_32X32 ] = INTER_NEAREST_NEAR_NEW ; //<S2SV> sf -> inter_mode_mask [ BLOCK_32X64 ] = INTER_NEAREST ; //<S2SV> sf -> inter_mode_mask [ BLOCK_64X32 ] = INTER_NEAREST ; //<S2SV> sf -> inter_mode_mask [ BLOCK_64X64 ] = INTER_NEAREST ; //<S2SV> sf -> max_intra_bsize = BLOCK_32X32 ; //<S2SV> sf -> allow_skip_recode = 1 ; //<S2SV> } //<S2SV> if ( speed >= 5 ) { //<S2SV> sf -> use_quant_fp = ! is_keyframe ; //<S2SV> sf -> auto_min_max_partition_size = is_keyframe ? RELAXED_NEIGHBORING_MIN_MAX //<S2SV> : STRICT_NEIGHBORING_MIN_MAX ; //<S2SV> sf -> default_max_partition_size = BLOCK_32X32 ; //<S2SV> sf -> default_min_partition_size = BLOCK_8X8 ; //<S2SV> sf -> force_frame_boost = is_keyframe || //<S2SV> ( frames_since_key % ( sf -> last_partitioning_redo_frequency << 1 ) == 1 ) ; //<S2SV> sf -> max_delta_qindex = is_keyframe ? 20 : 15 ; //<S2SV> sf -> partition_search_type = REFERENCE_PARTITION ; //<S2SV> sf -> use_nonrd_pick_mode = 1 ; //<S2SV> sf -> allow_skip_recode = 0 ; //<S2SV> sf -> inter_mode_mask [ BLOCK_32X32 ] = INTER_NEAREST_NEW_ZERO ; //<S2SV> sf -> inter_mode_mask [ BLOCK_32X64 ] = INTER_NEAREST_NEW_ZERO ; //<S2SV> sf -> inter_mode_mask [ BLOCK_64X32 ] = INTER_NEAREST_NEW_ZERO ; //<S2SV> sf -> inter_mode_mask [ BLOCK_64X64 ] = INTER_NEAREST_NEW_ZERO ; //<S2SV> sf -> adaptive_rd_thresh = 2 ; //<S2SV> sf -> reuse_inter_pred_sby = 1 ; //<S2SV> sf -> partition_search_breakout_rate_thr = 200 ; //<S2SV> sf -> coeff_prob_appx_step = 4 ; //<S2SV> sf -> use_fast_coef_updates = is_keyframe ? TWO_LOOP : ONE_LOOP_REDUCED ; //<S2SV> sf -> mode_search_skip_flags = FLAG_SKIP_INTRA_DIRMISMATCH ; //<S2SV> sf -> tx_size_search_method = is_keyframe ? USE_LARGESTALL : USE_TX_8X8 ; //<S2SV> sf -> simple_model_rd_from_var = 1 ; //<S2SV> if ( ! is_keyframe ) { //<S2SV> int i ; //<S2SV> if ( content == VP9E_CONTENT_SCREEN ) { //<S2SV> for ( i = 0 ; i < BLOCK_SIZES ; ++ i ) //<S2SV> sf -> intra_y_mode_bsize_mask [ i ] = INTRA_DC_TM_H_V ; //<S2SV> } else { //<S2SV> for ( i = 0 ; i < BLOCK_SIZES ; ++ i ) //<S2SV> if ( i >= BLOCK_16X16 ) //<S2SV> sf -> intra_y_mode_bsize_mask [ i ] = INTRA_DC ; //<S2SV> else //<S2SV> sf -> intra_y_mode_bsize_mask [ i ] = INTRA_DC_H_V ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> if ( speed >= 6 ) { //<S2SV> sf -> partition_search_type = VAR_BASED_PARTITION ; //<S2SV> sf -> use_nonrd_pick_mode = 1 ; //<S2SV> sf -> mv . search_method = NSTEP ; //<S2SV> sf -> mv . reduce_first_step_size = 1 ; //<S2SV> sf -> skip_encode_sb = 0 ; //<S2SV> } //<S2SV> if ( speed >= 7 ) { //<S2SV> sf -> adaptive_rd_thresh = 3 ; //<S2SV> sf -> mv . search_method = FAST_DIAMOND ; //<S2SV> sf -> mv . fullpel_search_step_param = 10 ; //<S2SV> if ( cpi -> svc . number_temporal_layers > 2 && //<S2SV> cpi -> svc . temporal_layer_id == 0 ) { //<S2SV> sf -> mv . search_method = NSTEP ; //<S2SV> sf -> mv . fullpel_search_step_param = 6 ; //<S2SV> } //<S2SV> } //<S2SV> if ( speed >= 8 ) { //<S2SV> sf -> adaptive_rd_thresh = 4 ; //<S2SV> sf -> mv . subpel_force_stop = 2 ; //<S2SV> sf -> lpf_pick = LPF_PICK_MINIMAL_LPF ; //<S2SV> } //<S2SV> } //<S2SV> 