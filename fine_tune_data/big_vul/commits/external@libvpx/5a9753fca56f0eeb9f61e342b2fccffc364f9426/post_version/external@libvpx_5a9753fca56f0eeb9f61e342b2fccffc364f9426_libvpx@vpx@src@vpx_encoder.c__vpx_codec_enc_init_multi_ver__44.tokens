vpx_codec_err_t vpx_codec_enc_init_multi_ver ( vpx_codec_ctx_t * ctx , //<S2SV> vpx_codec_iface_t * iface , //<S2SV> vpx_codec_enc_cfg_t * cfg , //<S2SV> int num_enc , //<S2SV> vpx_codec_flags_t flags , //<S2SV> vpx_rational_t * dsf , //<S2SV> int ver ) { //<S2SV> vpx_codec_err_t res = VPX_CODEC_OK ; //<S2SV> if ( ver != VPX_ENCODER_ABI_VERSION ) //<S2SV> res = VPX_CODEC_ABI_MISMATCH ; //<S2SV> else if ( ! ctx || ! iface || ! cfg || ( num_enc > 16 || num_enc < 1 ) ) //<S2SV> res = VPX_CODEC_INVALID_PARAM ; //<S2SV> else if ( iface -> abi_version != VPX_CODEC_INTERNAL_ABI_VERSION ) //<S2SV> res = VPX_CODEC_ABI_MISMATCH ; //<S2SV> else if ( ! ( iface -> caps & VPX_CODEC_CAP_ENCODER ) ) //<S2SV> res = VPX_CODEC_INCAPABLE ; //<S2SV> else if ( ( flags & VPX_CODEC_USE_PSNR ) //<S2SV> && ! ( iface -> caps & VPX_CODEC_CAP_PSNR ) ) //<S2SV> res = VPX_CODEC_INCAPABLE ; //<S2SV> else if ( ( flags & VPX_CODEC_USE_OUTPUT_PARTITION ) //<S2SV> && ! ( iface -> caps & VPX_CODEC_CAP_OUTPUT_PARTITION ) ) //<S2SV> res = VPX_CODEC_INCAPABLE ; //<S2SV> else { //<S2SV> int i ; //<S2SV> void * mem_loc = NULL ; //<S2SV> if ( ! ( res = iface -> enc . mr_get_mem_loc ( cfg , & mem_loc ) ) ) { //<S2SV> for ( i = 0 ; i < num_enc ; i ++ ) { //<S2SV> vpx_codec_priv_enc_mr_cfg_t mr_cfg ; //<S2SV> if ( dsf -> num < 1 || dsf -> num > 4096 || dsf -> den < 1 || //<S2SV> dsf -> den > dsf -> num ) { //<S2SV> res = VPX_CODEC_INVALID_PARAM ; //<S2SV> break ; //<S2SV> } //<S2SV> mr_cfg . mr_low_res_mode_info = mem_loc ; //<S2SV> mr_cfg . mr_total_resolutions = num_enc ; //<S2SV> mr_cfg . mr_encoder_id = num_enc - 1 - i ; //<S2SV> mr_cfg . mr_down_sampling_factor . num = dsf -> num ; //<S2SV> mr_cfg . mr_down_sampling_factor . den = dsf -> den ; //<S2SV> if ( mr_cfg . mr_encoder_id ) //<S2SV> cfg -> kf_mode = VPX_KF_DISABLED ; //<S2SV> ctx -> iface = iface ; //<S2SV> ctx -> name = iface -> name ; //<S2SV> ctx -> priv = NULL ; //<S2SV> ctx -> init_flags = flags ; //<S2SV> ctx -> config . enc = cfg ; //<S2SV> res = ctx -> iface -> init ( ctx , & mr_cfg ) ; //<S2SV> if ( res ) { //<S2SV> const char * error_detail = //<S2SV> ctx -> priv ? ctx -> priv -> err_detail : NULL ; //<S2SV> ctx -> err_detail = error_detail ; //<S2SV> vpx_codec_destroy ( ctx ) ; //<S2SV> while ( i ) { //<S2SV> ctx -- ; //<S2SV> ctx -> err_detail = error_detail ; //<S2SV> vpx_codec_destroy ( ctx ) ; //<S2SV> i -- ; //<S2SV> } //<S2SV> } //<S2SV> if ( res ) //<S2SV> break ; //<S2SV> ctx ++ ; //<S2SV> cfg ++ ; //<S2SV> dsf ++ ; //<S2SV> } //<S2SV> ctx -- ; //<S2SV> } //<S2SV> } //<S2SV> return SAVE_STATUS ( ctx , res ) ; //<S2SV> } //<S2SV> 