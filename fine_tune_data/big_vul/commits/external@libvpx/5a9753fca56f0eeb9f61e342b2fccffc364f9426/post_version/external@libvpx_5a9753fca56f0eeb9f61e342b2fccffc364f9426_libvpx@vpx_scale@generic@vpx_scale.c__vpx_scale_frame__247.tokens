void vpx_scale_frame //<S2SV> ( //<S2SV> YV12_BUFFER_CONFIG * src , //<S2SV> YV12_BUFFER_CONFIG * dst , //<S2SV> unsigned char * temp_area , //<S2SV> unsigned char temp_height , //<S2SV> unsigned int hscale , //<S2SV> unsigned int hratio , //<S2SV> unsigned int vscale , //<S2SV> unsigned int vratio , //<S2SV> unsigned int interlaced //<S2SV> ) { //<S2SV> int i ; //<S2SV> int dw = ( hscale - 1 + src -> y_width * hratio ) / hscale ; //<S2SV> int dh = ( vscale - 1 + src -> y_height * vratio ) / vscale ; //<S2SV> Scale2D ( ( unsigned char * ) src -> y_buffer , src -> y_stride , src -> y_width , src -> y_height , //<S2SV> ( unsigned char * ) dst -> y_buffer , dst -> y_stride , dw , dh , //<S2SV> temp_area , temp_height , hscale , hratio , vscale , vratio , interlaced ) ; //<S2SV> if ( dw < ( int ) dst -> y_width ) //<S2SV> for ( i = 0 ; i < dh ; i ++ ) //<S2SV> memset ( dst -> y_buffer + i * dst -> y_stride + dw - 1 , dst -> y_buffer [ i * dst -> y_stride + dw - 2 ] , dst -> y_width - dw + 1 ) ; //<S2SV> if ( dh < ( int ) dst -> y_height ) //<S2SV> for ( i = dh - 1 ; i < ( int ) dst -> y_height ; i ++ ) //<S2SV> memcpy ( dst -> y_buffer + i * dst -> y_stride , dst -> y_buffer + ( dh - 2 ) * dst -> y_stride , dst -> y_width + 1 ) ; //<S2SV> Scale2D ( ( unsigned char * ) src -> u_buffer , src -> uv_stride , src -> uv_width , src -> uv_height , //<S2SV> ( unsigned char * ) dst -> u_buffer , dst -> uv_stride , dw / 2 , dh / 2 , //<S2SV> temp_area , temp_height , hscale , hratio , vscale , vratio , interlaced ) ; //<S2SV> if ( dw / 2 < ( int ) dst -> uv_width ) //<S2SV> for ( i = 0 ; i < dst -> uv_height ; i ++ ) //<S2SV> memset ( dst -> u_buffer + i * dst -> uv_stride + dw / 2 - 1 , dst -> u_buffer [ i * dst -> uv_stride + dw / 2 - 2 ] , dst -> uv_width - dw / 2 + 1 ) ; //<S2SV> if ( dh / 2 < ( int ) dst -> uv_height ) //<S2SV> for ( i = dh / 2 - 1 ; i < ( int ) dst -> y_height / 2 ; i ++ ) //<S2SV> memcpy ( dst -> u_buffer + i * dst -> uv_stride , dst -> u_buffer + ( dh / 2 - 2 ) * dst -> uv_stride , dst -> uv_width ) ; //<S2SV> Scale2D ( ( unsigned char * ) src -> v_buffer , src -> uv_stride , src -> uv_width , src -> uv_height , //<S2SV> ( unsigned char * ) dst -> v_buffer , dst -> uv_stride , dw / 2 , dh / 2 , //<S2SV> temp_area , temp_height , hscale , hratio , vscale , vratio , interlaced ) ; //<S2SV> if ( dw / 2 < ( int ) dst -> uv_width ) //<S2SV> for ( i = 0 ; i < dst -> uv_height ; i ++ ) //<S2SV> memset ( dst -> v_buffer + i * dst -> uv_stride + dw / 2 - 1 , dst -> v_buffer [ i * dst -> uv_stride + dw / 2 - 2 ] , dst -> uv_width - dw / 2 + 1 ) ; //<S2SV> if ( dh / 2 < ( int ) dst -> uv_height ) //<S2SV> for ( i = dh / 2 - 1 ; i < ( int ) dst -> y_height / 2 ; i ++ ) //<S2SV> memcpy ( dst -> v_buffer + i * dst -> uv_stride , dst -> v_buffer + ( dh / 2 - 2 ) * dst -> uv_stride , dst -> uv_width ) ; //<S2SV> } //<S2SV> 