static int tile_worker_hook ( TileWorkerData * const tile_data , //<S2SV> const TileInfo * const tile ) { //<S2SV> int mi_row , mi_col ; //<S2SV> if ( setjmp ( tile_data -> error_info . jmp ) ) { //<S2SV> tile_data -> error_info . setjmp = 0 ; //<S2SV> tile_data -> xd . corrupted = 1 ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> tile_data -> error_info . setjmp = 1 ; //<S2SV> tile_data -> xd . error_info = & tile_data -> error_info ; //<S2SV> for ( mi_row = tile -> mi_row_start ; mi_row < tile -> mi_row_end ; //<S2SV> mi_row += MI_BLOCK_SIZE ) { //<S2SV> vp9_zero ( tile_data -> xd . left_context ) ; //<S2SV> vp9_zero ( tile_data -> xd . left_seg_context ) ; //<S2SV> for ( mi_col = tile -> mi_col_start ; mi_col < tile -> mi_col_end ; //<S2SV> mi_col += MI_BLOCK_SIZE ) { //<S2SV> decode_partition ( tile_data -> pbi , & tile_data -> xd , //<S2SV> mi_row , mi_col , & tile_data -> bit_reader , //<S2SV> BLOCK_64X64 , 4 ) ; //<S2SV> } //<S2SV> } //<S2SV> return ! tile_data -> xd . corrupted ; //<S2SV> } //<S2SV> 