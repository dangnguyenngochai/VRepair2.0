void vp9_loop_filter_frame_init ( VP9_COMMON * cm , int default_filt_lvl ) { //<S2SV> int seg_id ; //<S2SV> const int scale = 1 << ( default_filt_lvl >> 5 ) ; //<S2SV> loop_filter_info_n * const lfi = & cm -> lf_info ; //<S2SV> struct loopfilter * const lf = & cm -> lf ; //<S2SV> const struct segmentation * const seg = & cm -> seg ; //<S2SV> if ( lf -> last_sharpness_level != lf -> sharpness_level ) { //<S2SV> update_sharpness ( lfi , lf -> sharpness_level ) ; //<S2SV> lf -> last_sharpness_level = lf -> sharpness_level ; //<S2SV> } //<S2SV> for ( seg_id = 0 ; seg_id < MAX_SEGMENTS ; seg_id ++ ) { //<S2SV> int lvl_seg = default_filt_lvl ; //<S2SV> if ( segfeature_active ( seg , seg_id , SEG_LVL_ALT_LF ) ) { //<S2SV> const int data = get_segdata ( seg , seg_id , SEG_LVL_ALT_LF ) ; //<S2SV> lvl_seg = clamp ( seg -> abs_delta == SEGMENT_ABSDATA ? //<S2SV> data : default_filt_lvl + data , //<S2SV> 0 , MAX_LOOP_FILTER ) ; //<S2SV> } //<S2SV> if ( ! lf -> mode_ref_delta_enabled ) { //<S2SV> memset ( lfi -> lvl [ seg_id ] , lvl_seg , sizeof ( lfi -> lvl [ seg_id ] ) ) ; //<S2SV> } else { //<S2SV> int ref , mode ; //<S2SV> const int intra_lvl = lvl_seg + lf -> ref_deltas [ INTRA_FRAME ] * scale ; //<S2SV> lfi -> lvl [ seg_id ] [ INTRA_FRAME ] [ 0 ] = clamp ( intra_lvl , 0 , MAX_LOOP_FILTER ) ; //<S2SV> for ( ref = LAST_FRAME ; ref < MAX_REF_FRAMES ; ++ ref ) { //<S2SV> for ( mode = 0 ; mode < MAX_MODE_LF_DELTAS ; ++ mode ) { //<S2SV> const int inter_lvl = lvl_seg + lf -> ref_deltas [ ref ] * scale //<S2SV> + lf -> mode_deltas [ mode ] * scale ; //<S2SV> lfi -> lvl [ seg_id ] [ ref ] [ mode ] = clamp ( inter_lvl , 0 , MAX_LOOP_FILTER ) ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> 