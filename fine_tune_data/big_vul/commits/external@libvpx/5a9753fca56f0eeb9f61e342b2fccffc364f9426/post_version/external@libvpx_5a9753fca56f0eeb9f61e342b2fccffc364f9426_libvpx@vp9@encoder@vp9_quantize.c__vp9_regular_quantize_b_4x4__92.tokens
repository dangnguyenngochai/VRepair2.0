void vp9_regular_quantize_b_4x4 ( MACROBLOCK * x , int plane , int block , //<S2SV> const int16_t * scan , const int16_t * iscan ) { //<S2SV> MACROBLOCKD * const xd = & x -> e_mbd ; //<S2SV> struct macroblock_plane * p = & x -> plane [ plane ] ; //<S2SV> struct macroblockd_plane * pd = & xd -> plane [ plane ] ; //<S2SV> # if CONFIG_VP9_HIGHBITDEPTH //<S2SV> if ( xd -> cur_buf -> flags & YV12_FLAG_HIGHBITDEPTH ) { //<S2SV> vpx_highbd_quantize_b ( BLOCK_OFFSET ( p -> coeff , block ) , //<S2SV> 16 , x -> skip_block , //<S2SV> p -> zbin , p -> round , p -> quant , p -> quant_shift , //<S2SV> BLOCK_OFFSET ( p -> qcoeff , block ) , //<S2SV> BLOCK_OFFSET ( pd -> dqcoeff , block ) , //<S2SV> pd -> dequant , & p -> eobs [ block ] , //<S2SV> scan , iscan ) ; //<S2SV> return ; //<S2SV> } //<S2SV> # endif //<S2SV> vpx_quantize_b ( BLOCK_OFFSET ( p -> coeff , block ) , //<S2SV> 16 , x -> skip_block , //<S2SV> p -> zbin , p -> round , p -> quant , p -> quant_shift , //<S2SV> BLOCK_OFFSET ( p -> qcoeff , block ) , //<S2SV> BLOCK_OFFSET ( pd -> dqcoeff , block ) , //<S2SV> pd -> dequant , & p -> eobs [ block ] , scan , iscan ) ; //<S2SV> } //<S2SV> 