static void set_good_speed_feature ( VP9_COMP * cpi , VP9_COMMON * cm , //<S2SV> SPEED_FEATURES * sf , int speed ) { //<S2SV> const int boosted = frame_is_boosted ( cpi ) ; //<S2SV> sf -> adaptive_rd_thresh = 1 ; //<S2SV> sf -> allow_skip_recode = 1 ; //<S2SV> if ( speed >= 1 ) { //<S2SV> if ( ( cpi -> twopass . fr_content_type == FC_GRAPHICS_ANIMATION ) || //<S2SV> vp9_internal_image_edge ( cpi ) ) { //<S2SV> sf -> use_square_partition_only = ! frame_is_boosted ( cpi ) ; //<S2SV> } else { //<S2SV> sf -> use_square_partition_only = ! frame_is_intra_only ( cm ) ; //<S2SV> } //<S2SV> sf -> less_rectangular_check = 1 ; //<S2SV> sf -> use_rd_breakout = 1 ; //<S2SV> sf -> adaptive_motion_search = 1 ; //<S2SV> sf -> mv . auto_mv_step_size = 1 ; //<S2SV> sf -> adaptive_rd_thresh = 2 ; //<S2SV> sf -> mv . subpel_iters_per_step = 1 ; //<S2SV> sf -> mode_skip_start = 10 ; //<S2SV> sf -> adaptive_pred_interp_filter = 1 ; //<S2SV> sf -> recode_loop = ALLOW_RECODE_KFARFGF ; //<S2SV> sf -> intra_y_mode_mask [ TX_32X32 ] = INTRA_DC_H_V ; //<S2SV> sf -> intra_uv_mode_mask [ TX_32X32 ] = INTRA_DC_H_V ; //<S2SV> sf -> intra_y_mode_mask [ TX_16X16 ] = INTRA_DC_H_V ; //<S2SV> sf -> intra_uv_mode_mask [ TX_16X16 ] = INTRA_DC_H_V ; //<S2SV> sf -> tx_size_search_breakout = 1 ; //<S2SV> sf -> partition_search_breakout_rate_thr = 80 ; //<S2SV> } //<S2SV> if ( speed >= 2 ) { //<S2SV> sf -> tx_size_search_method = frame_is_boosted ( cpi ) ? USE_FULL_RD //<S2SV> : USE_LARGESTALL ; //<S2SV> sf -> reference_masking = cpi -> oxcf . resize_mode != RESIZE_DYNAMIC ? 1 : 0 ; //<S2SV> sf -> mode_search_skip_flags = ( cm -> frame_type == KEY_FRAME ) ? 0 : //<S2SV> FLAG_SKIP_INTRA_DIRMISMATCH | //<S2SV> FLAG_SKIP_INTRA_BESTINTER | //<S2SV> FLAG_SKIP_COMP_BESTINTRA | //<S2SV> FLAG_SKIP_INTRA_LOWVAR ; //<S2SV> sf -> disable_filter_search_var_thresh = 100 ; //<S2SV> sf -> comp_inter_joint_search_thresh = BLOCK_SIZES ; //<S2SV> sf -> auto_min_max_partition_size = RELAXED_NEIGHBORING_MIN_MAX ; //<S2SV> sf -> allow_partition_search_skip = 1 ; //<S2SV> } //<S2SV> if ( speed >= 3 ) { //<S2SV> sf -> use_square_partition_only = ! frame_is_intra_only ( cm ) ; //<S2SV> sf -> tx_size_search_method = frame_is_intra_only ( cm ) ? USE_FULL_RD //<S2SV> : USE_LARGESTALL ; //<S2SV> sf -> mv . subpel_search_method = SUBPEL_TREE_PRUNED ; //<S2SV> sf -> adaptive_pred_interp_filter = 0 ; //<S2SV> sf -> adaptive_mode_search = 1 ; //<S2SV> sf -> cb_partition_search = ! boosted ; //<S2SV> sf -> cb_pred_filter_search = 1 ; //<S2SV> sf -> alt_ref_search_fp = 1 ; //<S2SV> sf -> recode_loop = ALLOW_RECODE_KFMAXBW ; //<S2SV> sf -> adaptive_rd_thresh = 3 ; //<S2SV> sf -> mode_skip_start = 6 ; //<S2SV> sf -> intra_y_mode_mask [ TX_32X32 ] = INTRA_DC ; //<S2SV> sf -> intra_uv_mode_mask [ TX_32X32 ] = INTRA_DC ; //<S2SV> sf -> adaptive_interp_filter_search = 1 ; //<S2SV> } //<S2SV> if ( speed >= 4 ) { //<S2SV> sf -> use_square_partition_only = 1 ; //<S2SV> sf -> tx_size_search_method = USE_LARGESTALL ; //<S2SV> sf -> mv . search_method = BIGDIA ; //<S2SV> sf -> mv . subpel_search_method = SUBPEL_TREE_PRUNED_MORE ; //<S2SV> sf -> adaptive_rd_thresh = 4 ; //<S2SV> if ( cm -> frame_type != KEY_FRAME ) //<S2SV> sf -> mode_search_skip_flags |= FLAG_EARLY_TERMINATE ; //<S2SV> sf -> disable_filter_search_var_thresh = 200 ; //<S2SV> sf -> use_lp32x32fdct = 1 ; //<S2SV> sf -> use_fast_coef_updates = ONE_LOOP_REDUCED ; //<S2SV> sf -> use_fast_coef_costing = 1 ; //<S2SV> sf -> motion_field_mode_search = ! boosted ; //<S2SV> sf -> partition_search_breakout_rate_thr = 300 ; //<S2SV> } //<S2SV> if ( speed >= 5 ) { //<S2SV> int i ; //<S2SV> sf -> optimize_coefficients = 0 ; //<S2SV> sf -> mv . search_method = HEX ; //<S2SV> sf -> disable_filter_search_var_thresh = 500 ; //<S2SV> for ( i = 0 ; i < TX_SIZES ; ++ i ) { //<S2SV> sf -> intra_y_mode_mask [ i ] = INTRA_DC ; //<S2SV> sf -> intra_uv_mode_mask [ i ] = INTRA_DC ; //<S2SV> } //<S2SV> sf -> partition_search_breakout_rate_thr = 500 ; //<S2SV> sf -> mv . reduce_first_step_size = 1 ; //<S2SV> sf -> simple_model_rd_from_var = 1 ; //<S2SV> } //<S2SV> } //<S2SV> 