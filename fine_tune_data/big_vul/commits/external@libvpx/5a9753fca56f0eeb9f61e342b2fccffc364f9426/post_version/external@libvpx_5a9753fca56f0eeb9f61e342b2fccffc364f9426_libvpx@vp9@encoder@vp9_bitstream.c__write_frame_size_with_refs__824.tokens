static void write_frame_size_with_refs ( VP9_COMP * cpi , //<S2SV> struct vpx_write_bit_buffer * wb ) { //<S2SV> VP9_COMMON * const cm = & cpi -> common ; //<S2SV> int found = 0 ; //<S2SV> MV_REFERENCE_FRAME ref_frame ; //<S2SV> for ( ref_frame = LAST_FRAME ; ref_frame <= ALTREF_FRAME ; ++ ref_frame ) { //<S2SV> YV12_BUFFER_CONFIG * cfg = get_ref_frame_buffer ( cpi , ref_frame ) ; //<S2SV> if ( cpi -> use_svc && //<S2SV> ( ( cpi -> svc . number_temporal_layers > 1 && //<S2SV> cpi -> oxcf . rc_mode == VPX_CBR ) || //<S2SV> ( cpi -> svc . number_spatial_layers > 1 && //<S2SV> cpi -> svc . layer_context [ cpi -> svc . spatial_layer_id ] . is_key_frame ) || //<S2SV> ( is_two_pass_svc ( cpi ) && //<S2SV> cpi -> svc . encode_empty_frame_state == ENCODING && //<S2SV> cpi -> svc . layer_context [ 0 ] . frames_from_key_frame < //<S2SV> cpi -> svc . number_temporal_layers + 1 ) ) ) { //<S2SV> found = 0 ; //<S2SV> } else if ( cfg != NULL ) { //<S2SV> found = cm -> width == cfg -> y_crop_width && //<S2SV> cm -> height == cfg -> y_crop_height ; //<S2SV> } //<S2SV> vpx_wb_write_bit ( wb , found ) ; //<S2SV> if ( found ) { //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> if ( ! found ) { //<S2SV> vpx_wb_write_literal ( wb , cm -> width - 1 , 16 ) ; //<S2SV> vpx_wb_write_literal ( wb , cm -> height - 1 , 16 ) ; //<S2SV> } //<S2SV> write_display_size ( cm , wb ) ; //<S2SV> } //<S2SV> 