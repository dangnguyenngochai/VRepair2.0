static void write_ref_frames ( const VP9_COMMON * cm , const MACROBLOCKD * xd , //<S2SV> vpx_writer * w ) { //<S2SV> const MB_MODE_INFO * const mbmi = & xd -> mi [ 0 ] -> mbmi ; //<S2SV> const int is_compound = has_second_ref ( mbmi ) ; //<S2SV> const int segment_id = mbmi -> segment_id ; //<S2SV> if ( segfeature_active ( & cm -> seg , segment_id , SEG_LVL_REF_FRAME ) ) { //<S2SV> assert ( ! is_compound ) ; //<S2SV> assert ( mbmi -> ref_frame [ 0 ] == //<S2SV> get_segdata ( & cm -> seg , segment_id , SEG_LVL_REF_FRAME ) ) ; //<S2SV> } else { //<S2SV> if ( cm -> reference_mode == REFERENCE_MODE_SELECT ) { //<S2SV> vpx_write ( w , is_compound , vp9_get_reference_mode_prob ( cm , xd ) ) ; //<S2SV> } else { //<S2SV> assert ( ! is_compound == ( cm -> reference_mode == SINGLE_REFERENCE ) ) ; //<S2SV> } //<S2SV> if ( is_compound ) { //<S2SV> vpx_write ( w , mbmi -> ref_frame [ 0 ] == GOLDEN_FRAME , //<S2SV> vp9_get_pred_prob_comp_ref_p ( cm , xd ) ) ; //<S2SV> } else { //<S2SV> const int bit0 = mbmi -> ref_frame [ 0 ] != LAST_FRAME ; //<S2SV> vpx_write ( w , bit0 , vp9_get_pred_prob_single_ref_p1 ( cm , xd ) ) ; //<S2SV> if ( bit0 ) { //<S2SV> const int bit1 = mbmi -> ref_frame [ 0 ] != GOLDEN_FRAME ; //<S2SV> vpx_write ( w , bit1 , vp9_get_pred_prob_single_ref_p2 ( cm , xd ) ) ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> 