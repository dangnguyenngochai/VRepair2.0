static void encode_loopfilter ( struct loopfilter * lf , //<S2SV> struct vpx_write_bit_buffer * wb ) { //<S2SV> int i ; //<S2SV> vpx_wb_write_literal ( wb , lf -> filter_level , 6 ) ; //<S2SV> vpx_wb_write_literal ( wb , lf -> sharpness_level , 3 ) ; //<S2SV> vpx_wb_write_bit ( wb , lf -> mode_ref_delta_enabled ) ; //<S2SV> if ( lf -> mode_ref_delta_enabled ) { //<S2SV> vpx_wb_write_bit ( wb , lf -> mode_ref_delta_update ) ; //<S2SV> if ( lf -> mode_ref_delta_update ) { //<S2SV> for ( i = 0 ; i < MAX_REF_LF_DELTAS ; i ++ ) { //<S2SV> const int delta = lf -> ref_deltas [ i ] ; //<S2SV> const int changed = delta != lf -> last_ref_deltas [ i ] ; //<S2SV> vpx_wb_write_bit ( wb , changed ) ; //<S2SV> if ( changed ) { //<S2SV> lf -> last_ref_deltas [ i ] = delta ; //<S2SV> vpx_wb_write_literal ( wb , abs ( delta ) & 0x3F , 6 ) ; //<S2SV> vpx_wb_write_bit ( wb , delta < 0 ) ; //<S2SV> } //<S2SV> } //<S2SV> for ( i = 0 ; i < MAX_MODE_LF_DELTAS ; i ++ ) { //<S2SV> const int delta = lf -> mode_deltas [ i ] ; //<S2SV> const int changed = delta != lf -> last_mode_deltas [ i ] ; //<S2SV> vpx_wb_write_bit ( wb , changed ) ; //<S2SV> if ( changed ) { //<S2SV> lf -> last_mode_deltas [ i ] = delta ; //<S2SV> vpx_wb_write_literal ( wb , abs ( delta ) & 0x3F , 6 ) ; //<S2SV> vpx_wb_write_bit ( wb , delta < 0 ) ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> 