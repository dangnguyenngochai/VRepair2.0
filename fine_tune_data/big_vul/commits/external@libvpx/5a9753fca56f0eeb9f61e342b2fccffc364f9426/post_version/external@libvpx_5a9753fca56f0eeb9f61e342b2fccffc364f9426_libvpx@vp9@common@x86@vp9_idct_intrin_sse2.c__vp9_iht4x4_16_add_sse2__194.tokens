void vp9_iht4x4_16_add_sse2 ( const int16_t * input , uint8_t * dest , int stride , //<S2SV> int tx_type ) { //<S2SV> __m128i in [ 2 ] ; //<S2SV> const __m128i zero = _mm_setzero_si128 ( ) ; //<S2SV> const __m128i eight = _mm_set1_epi16 ( 8 ) ; //<S2SV> in [ 0 ] = _mm_loadu_si128 ( ( const __m128i * ) ( input ) ) ; //<S2SV> in [ 1 ] = _mm_loadu_si128 ( ( const __m128i * ) ( input + 8 ) ) ; //<S2SV> switch ( tx_type ) { //<S2SV> case 0 : //<S2SV> idct4_sse2 ( in ) ; //<S2SV> idct4_sse2 ( in ) ; //<S2SV> break ; //<S2SV> case 1 : //<S2SV> idct4_sse2 ( in ) ; //<S2SV> iadst4_sse2 ( in ) ; //<S2SV> break ; //<S2SV> case 2 : //<S2SV> iadst4_sse2 ( in ) ; //<S2SV> idct4_sse2 ( in ) ; //<S2SV> break ; //<S2SV> case 3 : //<S2SV> iadst4_sse2 ( in ) ; //<S2SV> iadst4_sse2 ( in ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> assert ( 0 ) ; //<S2SV> break ; //<S2SV> } //<S2SV> in [ 0 ] = _mm_add_epi16 ( in [ 0 ] , eight ) ; //<S2SV> in [ 1 ] = _mm_add_epi16 ( in [ 1 ] , eight ) ; //<S2SV> in [ 0 ] = _mm_srai_epi16 ( in [ 0 ] , 4 ) ; //<S2SV> in [ 1 ] = _mm_srai_epi16 ( in [ 1 ] , 4 ) ; //<S2SV> { //<S2SV> __m128i d0 = _mm_cvtsi32_si128 ( * ( const int * ) ( dest ) ) ; //<S2SV> __m128i d2 = _mm_cvtsi32_si128 ( * ( const int * ) ( dest + stride * 2 ) ) ; //<S2SV> d0 = _mm_unpacklo_epi32 ( d0 , //<S2SV> _mm_cvtsi32_si128 ( * ( const int * ) ( dest + stride ) ) ) ; //<S2SV> d2 = _mm_unpacklo_epi32 ( //<S2SV> d2 , _mm_cvtsi32_si128 ( * ( const int * ) ( dest + stride * 3 ) ) ) ; //<S2SV> d0 = _mm_unpacklo_epi8 ( d0 , zero ) ; //<S2SV> d2 = _mm_unpacklo_epi8 ( d2 , zero ) ; //<S2SV> d0 = _mm_add_epi16 ( d0 , in [ 0 ] ) ; //<S2SV> d2 = _mm_add_epi16 ( d2 , in [ 1 ] ) ; //<S2SV> d0 = _mm_packus_epi16 ( d0 , d2 ) ; //<S2SV> * ( int * ) dest = _mm_cvtsi128_si32 ( d0 ) ; //<S2SV> d0 = _mm_srli_si128 ( d0 , 4 ) ; //<S2SV> * ( int * ) ( dest + stride ) = _mm_cvtsi128_si32 ( d0 ) ; //<S2SV> d0 = _mm_srli_si128 ( d0 , 4 ) ; //<S2SV> * ( int * ) ( dest + stride * 2 ) = _mm_cvtsi128_si32 ( d0 ) ; //<S2SV> d0 = _mm_srli_si128 ( d0 , 4 ) ; //<S2SV> * ( int * ) ( dest + stride * 3 ) = _mm_cvtsi128_si32 ( d0 ) ; //<S2SV> } //<S2SV> } //<S2SV> 