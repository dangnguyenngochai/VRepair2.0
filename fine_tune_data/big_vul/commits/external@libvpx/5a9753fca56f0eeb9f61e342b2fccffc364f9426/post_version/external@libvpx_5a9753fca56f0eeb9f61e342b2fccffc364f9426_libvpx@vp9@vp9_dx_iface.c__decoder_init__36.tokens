static vpx_codec_err_t decoder_init ( vpx_codec_ctx_t * ctx , //<S2SV> vpx_codec_priv_enc_mr_cfg_t * data ) { //<S2SV> ( void ) data ; //<S2SV> if ( ! ctx -> priv ) { //<S2SV> vpx_codec_alg_priv_t * const priv = vpx_calloc ( 1 , sizeof ( * priv ) ) ; //<S2SV> if ( priv == NULL ) //<S2SV> return VPX_CODEC_MEM_ERROR ; //<S2SV> ctx -> priv = ( vpx_codec_priv_t * ) priv ; //<S2SV> ctx -> priv -> init_flags = ctx -> init_flags ; //<S2SV> priv -> si . sz = sizeof ( priv -> si ) ; //<S2SV> priv -> flushed = 0 ; //<S2SV> priv -> frame_parallel_decode = //<S2SV> ( ctx -> config . dec && ( ctx -> config . dec -> threads > 1 ) && //<S2SV> ( ctx -> init_flags & VPX_CODEC_USE_FRAME_THREADING ) ) ? 1 : 0 ; //<S2SV> if ( ctx -> config . dec ) { //<S2SV> priv -> cfg = * ctx -> config . dec ; //<S2SV> ctx -> config . dec = & priv -> cfg ; //<S2SV> } //<S2SV> } //<S2SV> return VPX_CODEC_OK ; //<S2SV> } //<S2SV> 