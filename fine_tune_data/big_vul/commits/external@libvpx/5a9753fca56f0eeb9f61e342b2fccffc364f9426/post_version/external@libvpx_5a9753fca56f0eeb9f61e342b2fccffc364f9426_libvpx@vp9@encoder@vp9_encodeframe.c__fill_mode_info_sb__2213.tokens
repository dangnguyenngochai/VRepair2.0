static void fill_mode_info_sb ( VP9_COMMON * cm , MACROBLOCK * x , //<S2SV> int mi_row , int mi_col , //<S2SV> BLOCK_SIZE bsize , //<S2SV> PC_TREE * pc_tree ) { //<S2SV> MACROBLOCKD * xd = & x -> e_mbd ; //<S2SV> int bsl = b_width_log2_lookup [ bsize ] , hbs = ( 1 << bsl ) / 4 ; //<S2SV> PARTITION_TYPE partition = pc_tree -> partitioning ; //<S2SV> BLOCK_SIZE subsize = get_subsize ( bsize , partition ) ; //<S2SV> assert ( bsize >= BLOCK_8X8 ) ; //<S2SV> if ( mi_row >= cm -> mi_rows || mi_col >= cm -> mi_cols ) //<S2SV> return ; //<S2SV> switch ( partition ) { //<S2SV> case PARTITION_NONE : //<S2SV> set_mode_info_offsets ( cm , x , xd , mi_row , mi_col ) ; //<S2SV> * ( xd -> mi [ 0 ] ) = pc_tree -> none . mic ; //<S2SV> * ( x -> mbmi_ext ) = pc_tree -> none . mbmi_ext ; //<S2SV> duplicate_mode_info_in_sb ( cm , xd , mi_row , mi_col , bsize ) ; //<S2SV> break ; //<S2SV> case PARTITION_VERT : //<S2SV> set_mode_info_offsets ( cm , x , xd , mi_row , mi_col ) ; //<S2SV> * ( xd -> mi [ 0 ] ) = pc_tree -> vertical [ 0 ] . mic ; //<S2SV> * ( x -> mbmi_ext ) = pc_tree -> vertical [ 0 ] . mbmi_ext ; //<S2SV> duplicate_mode_info_in_sb ( cm , xd , mi_row , mi_col , subsize ) ; //<S2SV> if ( mi_col + hbs < cm -> mi_cols ) { //<S2SV> set_mode_info_offsets ( cm , x , xd , mi_row , mi_col + hbs ) ; //<S2SV> * ( xd -> mi [ 0 ] ) = pc_tree -> vertical [ 1 ] . mic ; //<S2SV> * ( x -> mbmi_ext ) = pc_tree -> vertical [ 1 ] . mbmi_ext ; //<S2SV> duplicate_mode_info_in_sb ( cm , xd , mi_row , mi_col + hbs , subsize ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case PARTITION_HORZ : //<S2SV> set_mode_info_offsets ( cm , x , xd , mi_row , mi_col ) ; //<S2SV> * ( xd -> mi [ 0 ] ) = pc_tree -> horizontal [ 0 ] . mic ; //<S2SV> * ( x -> mbmi_ext ) = pc_tree -> horizontal [ 0 ] . mbmi_ext ; //<S2SV> duplicate_mode_info_in_sb ( cm , xd , mi_row , mi_col , subsize ) ; //<S2SV> if ( mi_row + hbs < cm -> mi_rows ) { //<S2SV> set_mode_info_offsets ( cm , x , xd , mi_row + hbs , mi_col ) ; //<S2SV> * ( xd -> mi [ 0 ] ) = pc_tree -> horizontal [ 1 ] . mic ; //<S2SV> * ( x -> mbmi_ext ) = pc_tree -> horizontal [ 1 ] . mbmi_ext ; //<S2SV> duplicate_mode_info_in_sb ( cm , xd , mi_row + hbs , mi_col , subsize ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case PARTITION_SPLIT : { //<S2SV> fill_mode_info_sb ( cm , x , mi_row , mi_col , subsize , pc_tree -> split [ 0 ] ) ; //<S2SV> fill_mode_info_sb ( cm , x , mi_row , mi_col + hbs , subsize , //<S2SV> pc_tree -> split [ 1 ] ) ; //<S2SV> fill_mode_info_sb ( cm , x , mi_row + hbs , mi_col , subsize , //<S2SV> pc_tree -> split [ 2 ] ) ; //<S2SV> fill_mode_info_sb ( cm , x , mi_row + hbs , mi_col + hbs , subsize , //<S2SV> pc_tree -> split [ 3 ] ) ; //<S2SV> break ; //<S2SV> } //<S2SV> default : //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> 