static int rc_pick_q_and_bounds_one_pass_vbr ( const VP9_COMP * cpi , //<S2SV> int * bottom_index , //<S2SV> int * top_index ) { //<S2SV> const VP9_COMMON * const cm = & cpi -> common ; //<S2SV> const RATE_CONTROL * const rc = & cpi -> rc ; //<S2SV> const VP9EncoderConfig * const oxcf = & cpi -> oxcf ; //<S2SV> const int cq_level = get_active_cq_level ( rc , oxcf ) ; //<S2SV> int active_best_quality ; //<S2SV> int active_worst_quality = calc_active_worst_quality_one_pass_vbr ( cpi ) ; //<S2SV> int q ; //<S2SV> int * inter_minq ; //<S2SV> ASSIGN_MINQ_TABLE ( cm -> bit_depth , inter_minq ) ; //<S2SV> if ( frame_is_intra_only ( cm ) ) { //<S2SV> if ( rc -> this_key_frame_forced ) { //<S2SV> int qindex = rc -> last_boosted_qindex ; //<S2SV> double last_boosted_q = vp9_convert_qindex_to_q ( qindex , cm -> bit_depth ) ; //<S2SV> int delta_qindex = vp9_compute_qdelta ( rc , last_boosted_q , //<S2SV> last_boosted_q * 0.75 , //<S2SV> cm -> bit_depth ) ; //<S2SV> active_best_quality = MAX ( qindex + delta_qindex , rc -> best_quality ) ; //<S2SV> } else { //<S2SV> double q_adj_factor = 1.0 ; //<S2SV> double q_val ; //<S2SV> active_best_quality = //<S2SV> get_kf_active_quality ( rc , rc -> avg_frame_qindex [ KEY_FRAME ] , //<S2SV> cm -> bit_depth ) ; //<S2SV> if ( ( cm -> width * cm -> height ) <= ( 352 * 288 ) ) { //<S2SV> q_adj_factor -= 0.25 ; //<S2SV> } //<S2SV> q_val = vp9_convert_qindex_to_q ( active_best_quality , cm -> bit_depth ) ; //<S2SV> active_best_quality += vp9_compute_qdelta ( rc , q_val , //<S2SV> q_val * q_adj_factor , //<S2SV> cm -> bit_depth ) ; //<S2SV> } //<S2SV> } else if ( ! rc -> is_src_frame_alt_ref && //<S2SV> ( cpi -> refresh_golden_frame || cpi -> refresh_alt_ref_frame ) ) { //<S2SV> if ( rc -> frames_since_key > 1 && //<S2SV> rc -> avg_frame_qindex [ INTER_FRAME ] < active_worst_quality ) { //<S2SV> q = rc -> avg_frame_qindex [ INTER_FRAME ] ; //<S2SV> } else { //<S2SV> q = rc -> avg_frame_qindex [ KEY_FRAME ] ; //<S2SV> } //<S2SV> if ( oxcf -> rc_mode == VPX_CQ ) { //<S2SV> if ( q < cq_level ) //<S2SV> q = cq_level ; //<S2SV> active_best_quality = get_gf_active_quality ( rc , q , cm -> bit_depth ) ; //<S2SV> active_best_quality = active_best_quality * 15 / 16 ; //<S2SV> } else if ( oxcf -> rc_mode == VPX_Q ) { //<S2SV> if ( ! cpi -> refresh_alt_ref_frame ) { //<S2SV> active_best_quality = cq_level ; //<S2SV> } else { //<S2SV> active_best_quality = get_gf_active_quality ( rc , q , cm -> bit_depth ) ; //<S2SV> } //<S2SV> } else { //<S2SV> active_best_quality = get_gf_active_quality ( rc , q , cm -> bit_depth ) ; //<S2SV> } //<S2SV> } else { //<S2SV> if ( oxcf -> rc_mode == VPX_Q ) { //<S2SV> active_best_quality = cq_level ; //<S2SV> } else { //<S2SV> if ( cm -> current_video_frame > 1 ) //<S2SV> active_best_quality = inter_minq [ rc -> avg_frame_qindex [ INTER_FRAME ] ] ; //<S2SV> else //<S2SV> active_best_quality = inter_minq [ rc -> avg_frame_qindex [ KEY_FRAME ] ] ; //<S2SV> if ( ( oxcf -> rc_mode == VPX_CQ ) && //<S2SV> ( active_best_quality < cq_level ) ) { //<S2SV> active_best_quality = cq_level ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> active_best_quality = clamp ( active_best_quality , //<S2SV> rc -> best_quality , rc -> worst_quality ) ; //<S2SV> active_worst_quality = clamp ( active_worst_quality , //<S2SV> active_best_quality , rc -> worst_quality ) ; //<S2SV> * top_index = active_worst_quality ; //<S2SV> * bottom_index = active_best_quality ; //<S2SV> # if LIMIT_QRANGE_FOR_ALTREF_AND_KEY //<S2SV> { //<S2SV> int qdelta = 0 ; //<S2SV> vpx_clear_system_state ( ) ; //<S2SV> if ( cm -> frame_type == KEY_FRAME && //<S2SV> ! rc -> this_key_frame_forced && //<S2SV> ! ( cm -> current_video_frame == 0 ) ) { //<S2SV> qdelta = vp9_compute_qdelta_by_rate ( & cpi -> rc , cm -> frame_type , //<S2SV> active_worst_quality , 2.0 , //<S2SV> cm -> bit_depth ) ; //<S2SV> } else if ( ! rc -> is_src_frame_alt_ref && //<S2SV> ( cpi -> refresh_golden_frame || cpi -> refresh_alt_ref_frame ) ) { //<S2SV> qdelta = vp9_compute_qdelta_by_rate ( & cpi -> rc , cm -> frame_type , //<S2SV> active_worst_quality , 1.75 , //<S2SV> cm -> bit_depth ) ; //<S2SV> } //<S2SV> * top_index = active_worst_quality + qdelta ; //<S2SV> * top_index = ( * top_index > * bottom_index ) ? * top_index : * bottom_index ; //<S2SV> } //<S2SV> # endif //<S2SV> if ( oxcf -> rc_mode == VPX_Q ) { //<S2SV> q = active_best_quality ; //<S2SV> } else if ( ( cm -> frame_type == KEY_FRAME ) && rc -> this_key_frame_forced ) { //<S2SV> q = rc -> last_boosted_qindex ; //<S2SV> } else { //<S2SV> q = vp9_rc_regulate_q ( cpi , rc -> this_frame_target , //<S2SV> active_best_quality , active_worst_quality ) ; //<S2SV> if ( q > * top_index ) { //<S2SV> if ( rc -> this_frame_target >= rc -> max_frame_bandwidth ) //<S2SV> * top_index = q ; //<S2SV> else //<S2SV> q = * top_index ; //<S2SV> } //<S2SV> } //<S2SV> assert ( * top_index <= rc -> worst_quality && //<S2SV> * top_index >= rc -> best_quality ) ; //<S2SV> assert ( * bottom_index <= rc -> worst_quality && //<S2SV> * bottom_index >= rc -> best_quality ) ; //<S2SV> assert ( q <= rc -> worst_quality && q >= rc -> best_quality ) ; //<S2SV> return q ; //<S2SV> } //<S2SV> 