static INLINE void right_shift_8x8 ( __m128i * res , const int bit ) { //<S2SV> __m128i sign0 = _mm_srai_epi16 ( res [ 0 ] , 15 ) ; //<S2SV> __m128i sign1 = _mm_srai_epi16 ( res [ 1 ] , 15 ) ; //<S2SV> __m128i sign2 = _mm_srai_epi16 ( res [ 2 ] , 15 ) ; //<S2SV> __m128i sign3 = _mm_srai_epi16 ( res [ 3 ] , 15 ) ; //<S2SV> __m128i sign4 = _mm_srai_epi16 ( res [ 4 ] , 15 ) ; //<S2SV> __m128i sign5 = _mm_srai_epi16 ( res [ 5 ] , 15 ) ; //<S2SV> __m128i sign6 = _mm_srai_epi16 ( res [ 6 ] , 15 ) ; //<S2SV> __m128i sign7 = _mm_srai_epi16 ( res [ 7 ] , 15 ) ; //<S2SV> if ( bit == 2 ) { //<S2SV> const __m128i const_rounding = _mm_set1_epi16 ( 1 ) ; //<S2SV> res [ 0 ] = _mm_add_epi16 ( res [ 0 ] , const_rounding ) ; //<S2SV> res [ 1 ] = _mm_add_epi16 ( res [ 1 ] , const_rounding ) ; //<S2SV> res [ 2 ] = _mm_add_epi16 ( res [ 2 ] , const_rounding ) ; //<S2SV> res [ 3 ] = _mm_add_epi16 ( res [ 3 ] , const_rounding ) ; //<S2SV> res [ 4 ] = _mm_add_epi16 ( res [ 4 ] , const_rounding ) ; //<S2SV> res [ 5 ] = _mm_add_epi16 ( res [ 5 ] , const_rounding ) ; //<S2SV> res [ 6 ] = _mm_add_epi16 ( res [ 6 ] , const_rounding ) ; //<S2SV> res [ 7 ] = _mm_add_epi16 ( res [ 7 ] , const_rounding ) ; //<S2SV> } //<S2SV> res [ 0 ] = _mm_sub_epi16 ( res [ 0 ] , sign0 ) ; //<S2SV> res [ 1 ] = _mm_sub_epi16 ( res [ 1 ] , sign1 ) ; //<S2SV> res [ 2 ] = _mm_sub_epi16 ( res [ 2 ] , sign2 ) ; //<S2SV> res [ 3 ] = _mm_sub_epi16 ( res [ 3 ] , sign3 ) ; //<S2SV> res [ 4 ] = _mm_sub_epi16 ( res [ 4 ] , sign4 ) ; //<S2SV> res [ 5 ] = _mm_sub_epi16 ( res [ 5 ] , sign5 ) ; //<S2SV> res [ 6 ] = _mm_sub_epi16 ( res [ 6 ] , sign6 ) ; //<S2SV> res [ 7 ] = _mm_sub_epi16 ( res [ 7 ] , sign7 ) ; //<S2SV> if ( bit == 1 ) { //<S2SV> res [ 0 ] = _mm_srai_epi16 ( res [ 0 ] , 1 ) ; //<S2SV> res [ 1 ] = _mm_srai_epi16 ( res [ 1 ] , 1 ) ; //<S2SV> res [ 2 ] = _mm_srai_epi16 ( res [ 2 ] , 1 ) ; //<S2SV> res [ 3 ] = _mm_srai_epi16 ( res [ 3 ] , 1 ) ; //<S2SV> res [ 4 ] = _mm_srai_epi16 ( res [ 4 ] , 1 ) ; //<S2SV> res [ 5 ] = _mm_srai_epi16 ( res [ 5 ] , 1 ) ; //<S2SV> res [ 6 ] = _mm_srai_epi16 ( res [ 6 ] , 1 ) ; //<S2SV> res [ 7 ] = _mm_srai_epi16 ( res [ 7 ] , 1 ) ; //<S2SV> } else { //<S2SV> res [ 0 ] = _mm_srai_epi16 ( res [ 0 ] , 2 ) ; //<S2SV> res [ 1 ] = _mm_srai_epi16 ( res [ 1 ] , 2 ) ; //<S2SV> res [ 2 ] = _mm_srai_epi16 ( res [ 2 ] , 2 ) ; //<S2SV> res [ 3 ] = _mm_srai_epi16 ( res [ 3 ] , 2 ) ; //<S2SV> res [ 4 ] = _mm_srai_epi16 ( res [ 4 ] , 2 ) ; //<S2SV> res [ 5 ] = _mm_srai_epi16 ( res [ 5 ] , 2 ) ; //<S2SV> res [ 6 ] = _mm_srai_epi16 ( res [ 6 ] , 2 ) ; //<S2SV> res [ 7 ] = _mm_srai_epi16 ( res [ 7 ] , 2 ) ; //<S2SV> } //<S2SV> } //<S2SV> 