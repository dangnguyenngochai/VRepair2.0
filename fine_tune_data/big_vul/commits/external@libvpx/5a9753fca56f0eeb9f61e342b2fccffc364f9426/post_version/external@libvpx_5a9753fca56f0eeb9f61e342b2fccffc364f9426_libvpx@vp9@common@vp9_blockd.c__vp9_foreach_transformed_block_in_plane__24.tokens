void vp9_foreach_transformed_block_in_plane ( //<S2SV> const MACROBLOCKD * const xd , BLOCK_SIZE bsize , int plane , //<S2SV> foreach_transformed_block_visitor visit , void * arg ) { //<S2SV> const struct macroblockd_plane * const pd = & xd -> plane [ plane ] ; //<S2SV> const MB_MODE_INFO * mbmi = & xd -> mi [ 0 ] -> mbmi ; //<S2SV> const TX_SIZE tx_size = plane ? get_uv_tx_size ( mbmi , pd ) //<S2SV> : mbmi -> tx_size ; //<S2SV> const BLOCK_SIZE plane_bsize = get_plane_block_size ( bsize , pd ) ; //<S2SV> const int num_4x4_w = num_4x4_blocks_wide_lookup [ plane_bsize ] ; //<S2SV> const int num_4x4_h = num_4x4_blocks_high_lookup [ plane_bsize ] ; //<S2SV> const int step = 1 << ( tx_size << 1 ) ; //<S2SV> int i = 0 , r , c ; //<S2SV> const int max_blocks_wide = num_4x4_w + ( xd -> mb_to_right_edge >= 0 ? 0 : //<S2SV> xd -> mb_to_right_edge >> ( 5 + pd -> subsampling_x ) ) ; //<S2SV> const int max_blocks_high = num_4x4_h + ( xd -> mb_to_bottom_edge >= 0 ? 0 : //<S2SV> xd -> mb_to_bottom_edge >> ( 5 + pd -> subsampling_y ) ) ; //<S2SV> const int extra_step = ( ( num_4x4_w - max_blocks_wide ) >> tx_size ) * step ; //<S2SV> for ( r = 0 ; r < max_blocks_high ; r += ( 1 << tx_size ) ) { //<S2SV> for ( c = 0 ; c < max_blocks_wide ; c += ( 1 << tx_size ) ) { //<S2SV> visit ( plane , i , plane_bsize , tx_size , arg ) ; //<S2SV> i += step ; //<S2SV> } //<S2SV> i += extra_step ; //<S2SV> } //<S2SV> } //<S2SV> 