vpx_codec_err_t vp9_copy_reference_dec ( VP9Decoder * pbi , //<S2SV> VP9_REFFRAME ref_frame_flag , //<S2SV> YV12_BUFFER_CONFIG * sd ) { //<S2SV> VP9_COMMON * cm = & pbi -> common ; //<S2SV> if ( ref_frame_flag == VP9_LAST_FLAG ) { //<S2SV> const YV12_BUFFER_CONFIG * const cfg = get_ref_frame ( cm , 0 ) ; //<S2SV> if ( cfg == NULL ) { //<S2SV> vpx_internal_error ( & cm -> error , VPX_CODEC_ERROR , //<S2SV> "No<S2SV_blank>\'last\'<S2SV_blank>reference<S2SV_blank>frame" ) ; //<S2SV> return VPX_CODEC_ERROR ; //<S2SV> } //<S2SV> if ( ! equal_dimensions ( cfg , sd ) ) //<S2SV> vpx_internal_error ( & cm -> error , VPX_CODEC_ERROR , //<S2SV> "Incorrect<S2SV_blank>buffer<S2SV_blank>dimensions" ) ; //<S2SV> else //<S2SV> vp8_yv12_copy_frame ( cfg , sd ) ; //<S2SV> } else { //<S2SV> vpx_internal_error ( & cm -> error , VPX_CODEC_ERROR , //<S2SV> "Invalid<S2SV_blank>reference<S2SV_blank>frame" ) ; //<S2SV> } //<S2SV> return cm -> error . error_code ; //<S2SV> } //<S2SV> 