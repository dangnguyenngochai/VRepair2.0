void vp9_pick_filter_level ( const YV12_BUFFER_CONFIG * sd , VP9_COMP * cpi , //<S2SV> LPF_PICK_METHOD method ) { //<S2SV> VP9_COMMON * const cm = & cpi -> common ; //<S2SV> struct loopfilter * const lf = & cm -> lf ; //<S2SV> lf -> sharpness_level = cm -> frame_type == KEY_FRAME ? 0 //<S2SV> : cpi -> oxcf . sharpness ; //<S2SV> if ( method == LPF_PICK_MINIMAL_LPF && lf -> filter_level ) { //<S2SV> lf -> filter_level = 0 ; //<S2SV> } else if ( method >= LPF_PICK_FROM_Q ) { //<S2SV> const int min_filter_level = 0 ; //<S2SV> const int max_filter_level = get_max_filter_level ( cpi ) ; //<S2SV> const int q = vp9_ac_quant ( cm -> base_qindex , 0 , cm -> bit_depth ) ; //<S2SV> # if CONFIG_VP9_HIGHBITDEPTH //<S2SV> int filt_guess ; //<S2SV> switch ( cm -> bit_depth ) { //<S2SV> case VPX_BITS_8 : //<S2SV> filt_guess = ROUND_POWER_OF_TWO ( q * 20723 + 1015158 , 18 ) ; //<S2SV> break ; //<S2SV> case VPX_BITS_10 : //<S2SV> filt_guess = ROUND_POWER_OF_TWO ( q * 20723 + 4060632 , 20 ) ; //<S2SV> break ; //<S2SV> case VPX_BITS_12 : //<S2SV> filt_guess = ROUND_POWER_OF_TWO ( q * 20723 + 16242526 , 22 ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> assert ( 0 && "bit_depth<S2SV_blank>should<S2SV_blank>be<S2SV_blank>VPX_BITS_8,<S2SV_blank>VPX_BITS_10<S2SV_blank>" //<S2SV> "or<S2SV_blank>VPX_BITS_12" ) ; //<S2SV> return ; //<S2SV> } //<S2SV> # else //<S2SV> int filt_guess = ROUND_POWER_OF_TWO ( q * 20723 + 1015158 , 18 ) ; //<S2SV> # endif //<S2SV> if ( cm -> frame_type == KEY_FRAME ) //<S2SV> filt_guess -= 4 ; //<S2SV> lf -> filter_level = clamp ( filt_guess , min_filter_level , max_filter_level ) ; //<S2SV> } else { //<S2SV> lf -> filter_level = search_filter_level ( sd , cpi , //<S2SV> method == LPF_PICK_FROM_SUBIMAGE ) ; //<S2SV> } //<S2SV> } //<S2SV> 