void vp9_cyclic_refresh_setup ( VP9_COMP * const cpi ) { //<S2SV> VP9_COMMON * const cm = & cpi -> common ; //<S2SV> const RATE_CONTROL * const rc = & cpi -> rc ; //<S2SV> CYCLIC_REFRESH * const cr = cpi -> cyclic_refresh ; //<S2SV> struct segmentation * const seg = & cm -> seg ; //<S2SV> const int apply_cyclic_refresh = apply_cyclic_refresh_bitrate ( cm , rc ) ; //<S2SV> if ( cm -> current_video_frame == 0 ) //<S2SV> cr -> low_content_avg = 0.0 ; //<S2SV> if ( ! apply_cyclic_refresh || //<S2SV> ( cm -> frame_type == KEY_FRAME ) || //<S2SV> ( cpi -> svc . temporal_layer_id > 0 ) || //<S2SV> ( cpi -> svc . spatial_layer_id > 0 ) ) { //<S2SV> unsigned char * const seg_map = cpi -> segmentation_map ; //<S2SV> memset ( seg_map , 0 , cm -> mi_rows * cm -> mi_cols ) ; //<S2SV> vp9_disable_segmentation ( & cm -> seg ) ; //<S2SV> if ( cm -> frame_type == KEY_FRAME ) { //<S2SV> memset ( cr -> last_coded_q_map , MAXQ , //<S2SV> cm -> mi_rows * cm -> mi_cols * sizeof ( * cr -> last_coded_q_map ) ) ; //<S2SV> cr -> sb_index = 0 ; //<S2SV> } //<S2SV> return ; //<S2SV> } else { //<S2SV> int qindex_delta = 0 ; //<S2SV> int qindex2 ; //<S2SV> const double q = vp9_convert_qindex_to_q ( cm -> base_qindex , cm -> bit_depth ) ; //<S2SV> vpx_clear_system_state ( ) ; //<S2SV> cr -> thresh_rate_sb = ( ( int64_t ) ( rc -> sb64_target_rate ) << 8 ) << 2 ; //<S2SV> cr -> thresh_dist_sb = ( ( int64_t ) ( q * q ) ) << 2 ; //<S2SV> vp9_enable_segmentation ( & cm -> seg ) ; //<S2SV> vp9_clearall_segfeatures ( seg ) ; //<S2SV> seg -> abs_delta = SEGMENT_DELTADATA ; //<S2SV> vp9_disable_segfeature ( seg , CR_SEGMENT_ID_BASE , SEG_LVL_ALT_Q ) ; //<S2SV> vp9_enable_segfeature ( seg , CR_SEGMENT_ID_BOOST1 , SEG_LVL_ALT_Q ) ; //<S2SV> vp9_enable_segfeature ( seg , CR_SEGMENT_ID_BOOST2 , SEG_LVL_ALT_Q ) ; //<S2SV> qindex_delta = compute_deltaq ( cpi , cm -> base_qindex , cr -> rate_ratio_qdelta ) ; //<S2SV> cr -> qindex_delta [ 1 ] = qindex_delta ; //<S2SV> qindex2 = clamp ( cm -> base_qindex + cm -> y_dc_delta_q + qindex_delta , 0 , MAXQ ) ; //<S2SV> cr -> rdmult = vp9_compute_rd_mult ( cpi , qindex2 ) ; //<S2SV> vp9_set_segdata ( seg , CR_SEGMENT_ID_BOOST1 , SEG_LVL_ALT_Q , qindex_delta ) ; //<S2SV> qindex_delta = compute_deltaq ( //<S2SV> cpi , cm -> base_qindex , MIN ( CR_MAX_RATE_TARGET_RATIO , //<S2SV> 0.1 * cr -> rate_boost_fac * cr -> rate_ratio_qdelta ) ) ; //<S2SV> cr -> qindex_delta [ 2 ] = qindex_delta ; //<S2SV> vp9_set_segdata ( seg , CR_SEGMENT_ID_BOOST2 , SEG_LVL_ALT_Q , qindex_delta ) ; //<S2SV> cyclic_refresh_update_map ( cpi ) ; //<S2SV> } //<S2SV> } //<S2SV> 