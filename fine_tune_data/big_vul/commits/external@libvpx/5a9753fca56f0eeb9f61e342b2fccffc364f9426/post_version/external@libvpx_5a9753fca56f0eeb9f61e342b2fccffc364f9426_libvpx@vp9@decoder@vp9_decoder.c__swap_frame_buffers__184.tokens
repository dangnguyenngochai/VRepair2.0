static void swap_frame_buffers ( VP9Decoder * pbi ) { //<S2SV> int ref_index = 0 , mask ; //<S2SV> VP9_COMMON * const cm = & pbi -> common ; //<S2SV> BufferPool * const pool = cm -> buffer_pool ; //<S2SV> RefCntBuffer * const frame_bufs = cm -> buffer_pool -> frame_bufs ; //<S2SV> lock_buffer_pool ( pool ) ; //<S2SV> for ( mask = pbi -> refresh_frame_flags ; mask ; mask >>= 1 ) { //<S2SV> const int old_idx = cm -> ref_frame_map [ ref_index ] ; //<S2SV> decrease_ref_count ( old_idx , frame_bufs , pool ) ; //<S2SV> if ( ( mask & 1 ) && old_idx >= 0 ) { //<S2SV> decrease_ref_count ( old_idx , frame_bufs , pool ) ; //<S2SV> } //<S2SV> cm -> ref_frame_map [ ref_index ] = cm -> next_ref_frame_map [ ref_index ] ; //<S2SV> ++ ref_index ; //<S2SV> } //<S2SV> for ( ; ref_index < REF_FRAMES && ! cm -> show_existing_frame ; ++ ref_index ) { //<S2SV> const int old_idx = cm -> ref_frame_map [ ref_index ] ; //<S2SV> decrease_ref_count ( old_idx , frame_bufs , pool ) ; //<S2SV> cm -> ref_frame_map [ ref_index ] = cm -> next_ref_frame_map [ ref_index ] ; //<S2SV> } //<S2SV> unlock_buffer_pool ( pool ) ; //<S2SV> pbi -> hold_ref_buf = 0 ; //<S2SV> cm -> frame_to_show = get_frame_new_buffer ( cm ) ; //<S2SV> if ( ! pbi -> frame_parallel_decode || ! cm -> show_frame ) { //<S2SV> lock_buffer_pool ( pool ) ; //<S2SV> -- frame_bufs [ cm -> new_fb_idx ] . ref_count ; //<S2SV> unlock_buffer_pool ( pool ) ; //<S2SV> } //<S2SV> for ( ref_index = 0 ; ref_index < 3 ; ref_index ++ ) //<S2SV> cm -> frame_refs [ ref_index ] . idx = - 1 ; //<S2SV> } //<S2SV> 