static int //<S2SV> update_fragments ( vpx_codec_alg_priv_t * ctx , //<S2SV> const uint8_t * data , //<S2SV> unsigned int data_sz , //<S2SV> vpx_codec_err_t * res ) //<S2SV> { //<S2SV> * res = VPX_CODEC_OK ; //<S2SV> if ( ctx -> fragments . count == 0 ) //<S2SV> { //<S2SV> memset ( ( void * ) ctx -> fragments . ptrs , 0 , sizeof ( ctx -> fragments . ptrs ) ) ; //<S2SV> memset ( ctx -> fragments . sizes , 0 , sizeof ( ctx -> fragments . sizes ) ) ; //<S2SV> } //<S2SV> if ( ctx -> fragments . enabled && ! ( data == NULL && data_sz == 0 ) ) //<S2SV> { //<S2SV> ctx -> fragments . ptrs [ ctx -> fragments . count ] = data ; //<S2SV> ctx -> fragments . sizes [ ctx -> fragments . count ] = data_sz ; //<S2SV> ctx -> fragments . count ++ ; //<S2SV> if ( ctx -> fragments . count > ( 1 << EIGHT_PARTITION ) + 1 ) //<S2SV> { //<S2SV> ctx -> fragments . count = 0 ; //<S2SV> * res = VPX_CODEC_INVALID_PARAM ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( ! ctx -> fragments . enabled && ( data == NULL && data_sz == 0 ) ) //<S2SV> { //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( ! ctx -> fragments . enabled ) //<S2SV> { //<S2SV> ctx -> fragments . ptrs [ 0 ] = data ; //<S2SV> ctx -> fragments . sizes [ 0 ] = data_sz ; //<S2SV> ctx -> fragments . count = 1 ; //<S2SV> } //<S2SV> return 1 ; //<S2SV> } //<S2SV> 