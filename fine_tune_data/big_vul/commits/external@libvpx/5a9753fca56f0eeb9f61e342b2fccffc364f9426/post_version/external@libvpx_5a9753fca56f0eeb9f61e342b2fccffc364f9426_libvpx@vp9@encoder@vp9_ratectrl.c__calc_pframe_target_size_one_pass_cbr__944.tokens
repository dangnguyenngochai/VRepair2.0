static int calc_pframe_target_size_one_pass_cbr ( const VP9_COMP * cpi ) { //<S2SV> const VP9EncoderConfig * oxcf = & cpi -> oxcf ; //<S2SV> const RATE_CONTROL * rc = & cpi -> rc ; //<S2SV> const SVC * const svc = & cpi -> svc ; //<S2SV> const int64_t diff = rc -> optimal_buffer_level - rc -> buffer_level ; //<S2SV> const int64_t one_pct_bits = 1 + rc -> optimal_buffer_level / 100 ; //<S2SV> int min_frame_target = MAX ( rc -> avg_frame_bandwidth >> 4 , FRAME_OVERHEAD_BITS ) ; //<S2SV> int target ; //<S2SV> if ( oxcf -> gf_cbr_boost_pct ) { //<S2SV> const int af_ratio_pct = oxcf -> gf_cbr_boost_pct + 100 ; //<S2SV> target = cpi -> refresh_golden_frame ? //<S2SV> ( rc -> avg_frame_bandwidth * rc -> baseline_gf_interval * af_ratio_pct ) / //<S2SV> ( rc -> baseline_gf_interval * 100 + af_ratio_pct - 100 ) : //<S2SV> ( rc -> avg_frame_bandwidth * rc -> baseline_gf_interval * 100 ) / //<S2SV> ( rc -> baseline_gf_interval * 100 + af_ratio_pct - 100 ) ; //<S2SV> } else { //<S2SV> target = rc -> avg_frame_bandwidth ; //<S2SV> } //<S2SV> if ( is_one_pass_cbr_svc ( cpi ) ) { //<S2SV> int layer = //<S2SV> LAYER_IDS_TO_IDX ( svc -> spatial_layer_id , //<S2SV> svc -> temporal_layer_id , svc -> number_temporal_layers ) ; //<S2SV> const LAYER_CONTEXT * lc = & svc -> layer_context [ layer ] ; //<S2SV> target = lc -> avg_frame_size ; //<S2SV> min_frame_target = MAX ( lc -> avg_frame_size >> 4 , FRAME_OVERHEAD_BITS ) ; //<S2SV> } //<S2SV> if ( diff > 0 ) { //<S2SV> const int pct_low = ( int ) MIN ( diff / one_pct_bits , oxcf -> under_shoot_pct ) ; //<S2SV> target -= ( target * pct_low ) / 200 ; //<S2SV> } else if ( diff < 0 ) { //<S2SV> const int pct_high = ( int ) MIN ( - diff / one_pct_bits , oxcf -> over_shoot_pct ) ; //<S2SV> target += ( target * pct_high ) / 200 ; //<S2SV> } //<S2SV> if ( oxcf -> rc_max_inter_bitrate_pct ) { //<S2SV> const int max_rate = rc -> avg_frame_bandwidth * //<S2SV> oxcf -> rc_max_inter_bitrate_pct / 100 ; //<S2SV> target = MIN ( target , max_rate ) ; //<S2SV> } //<S2SV> return MAX ( min_frame_target , target ) ; //<S2SV> } //<S2SV> 