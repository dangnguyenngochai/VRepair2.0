static int64_t try_filter_frame ( const YV12_BUFFER_CONFIG * sd , //<S2SV> VP9_COMP * const cpi , //<S2SV> int filt_level , int partial_frame ) { //<S2SV> VP9_COMMON * const cm = & cpi -> common ; //<S2SV> int64_t filt_err ; //<S2SV> if ( cpi -> num_workers > 1 ) //<S2SV> vp9_loop_filter_frame_mt ( cm -> frame_to_show , cm , cpi -> td . mb . e_mbd . plane , //<S2SV> filt_level , 1 , partial_frame , //<S2SV> cpi -> workers , cpi -> num_workers , & cpi -> lf_row_sync ) ; //<S2SV> else //<S2SV> vp9_loop_filter_frame ( cm -> frame_to_show , cm , & cpi -> td . mb . e_mbd , filt_level , //<S2SV> 1 , partial_frame ) ; //<S2SV> # if CONFIG_VP9_HIGHBITDEPTH //<S2SV> if ( cm -> use_highbitdepth ) { //<S2SV> filt_err = vp9_highbd_get_y_sse ( sd , cm -> frame_to_show ) ; //<S2SV> } else { //<S2SV> filt_err = vp9_get_y_sse ( sd , cm -> frame_to_show ) ; //<S2SV> } //<S2SV> # else //<S2SV> filt_err = vp9_get_y_sse ( sd , cm -> frame_to_show ) ; //<S2SV> # endif //<S2SV> vpx_yv12_copy_y ( & cpi -> last_frame_uf , cm -> frame_to_show ) ; //<S2SV> return filt_err ; //<S2SV> } //<S2SV> 