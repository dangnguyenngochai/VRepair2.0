static void build_inter_predictors ( MACROBLOCKD * xd , int plane , int block , //<S2SV> int bw , int bh , //<S2SV> int x , int y , int w , int h , //<S2SV> int mi_x , int mi_y ) { //<S2SV> struct macroblockd_plane * const pd = & xd -> plane [ plane ] ; //<S2SV> const MODE_INFO * mi = xd -> mi [ 0 ] ; //<S2SV> const int is_compound = has_second_ref ( & mi -> mbmi ) ; //<S2SV> const InterpKernel * kernel = vp9_filter_kernels [ mi -> mbmi . interp_filter ] ; //<S2SV> int ref ; //<S2SV> for ( ref = 0 ; ref < 1 + is_compound ; ++ ref ) { //<S2SV> const struct scale_factors * const sf = & xd -> block_refs [ ref ] -> sf ; //<S2SV> struct buf_2d * const pre_buf = & pd -> pre [ ref ] ; //<S2SV> struct buf_2d * const dst_buf = & pd -> dst ; //<S2SV> uint8_t * const dst = dst_buf -> buf + dst_buf -> stride * y + x ; //<S2SV> const MV mv = mi -> mbmi . sb_type < BLOCK_8X8 //<S2SV> ? average_split_mvs ( pd , mi , ref , block ) //<S2SV> : mi -> mbmi . mv [ ref ] . as_mv ; //<S2SV> const MV mv_q4 = clamp_mv_to_umv_border_sb ( xd , & mv , bw , bh , //<S2SV> pd -> subsampling_x , //<S2SV> pd -> subsampling_y ) ; //<S2SV> uint8_t * pre ; //<S2SV> MV32 scaled_mv ; //<S2SV> int xs , ys , subpel_x , subpel_y ; //<S2SV> const int is_scaled = vp9_is_scaled ( sf ) ; //<S2SV> if ( is_scaled ) { //<S2SV> pre = pre_buf -> buf + scaled_buffer_offset ( x , y , pre_buf -> stride , sf ) ; //<S2SV> scaled_mv = vp9_scale_mv ( & mv_q4 , mi_x + x , mi_y + y , sf ) ; //<S2SV> xs = sf -> x_step_q4 ; //<S2SV> ys = sf -> y_step_q4 ; //<S2SV> } else { //<S2SV> pre = pre_buf -> buf + ( y * pre_buf -> stride + x ) ; //<S2SV> scaled_mv . row = mv_q4 . row ; //<S2SV> scaled_mv . col = mv_q4 . col ; //<S2SV> xs = ys = 16 ; //<S2SV> } //<S2SV> subpel_x = scaled_mv . col & SUBPEL_MASK ; //<S2SV> subpel_y = scaled_mv . row & SUBPEL_MASK ; //<S2SV> pre += ( scaled_mv . row >> SUBPEL_BITS ) * pre_buf -> stride //<S2SV> + ( scaled_mv . col >> SUBPEL_BITS ) ; //<S2SV> # if CONFIG_VP9_HIGHBITDEPTH //<S2SV> if ( xd -> cur_buf -> flags & YV12_FLAG_HIGHBITDEPTH ) { //<S2SV> high_inter_predictor ( pre , pre_buf -> stride , dst , dst_buf -> stride , //<S2SV> subpel_x , subpel_y , sf , w , h , ref , kernel , xs , ys , //<S2SV> xd -> bd ) ; //<S2SV> } else { //<S2SV> inter_predictor ( pre , pre_buf -> stride , dst , dst_buf -> stride , //<S2SV> subpel_x , subpel_y , sf , w , h , ref , kernel , xs , ys ) ; //<S2SV> } //<S2SV> # else //<S2SV> inter_predictor ( pre , pre_buf -> stride , dst , dst_buf -> stride , //<S2SV> subpel_x , subpel_y , sf , w , h , ref , kernel , xs , ys ) ; //<S2SV> # endif //<S2SV> } //<S2SV> } //<S2SV> 