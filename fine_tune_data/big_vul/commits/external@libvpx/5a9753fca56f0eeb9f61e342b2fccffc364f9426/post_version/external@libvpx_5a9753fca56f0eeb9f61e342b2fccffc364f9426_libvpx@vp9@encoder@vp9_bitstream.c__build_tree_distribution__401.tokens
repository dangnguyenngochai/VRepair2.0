static void build_tree_distribution ( VP9_COMP * cpi , TX_SIZE tx_size , //<S2SV> vp9_coeff_stats * coef_branch_ct , //<S2SV> vp9_coeff_probs_model * coef_probs ) { //<S2SV> vp9_coeff_count * coef_counts = cpi -> td . rd_counts . coef_counts [ tx_size ] ; //<S2SV> unsigned int ( * eob_branch_ct ) [ REF_TYPES ] [ COEF_BANDS ] [ COEFF_CONTEXTS ] = //<S2SV> cpi -> common . counts . eob_branch [ tx_size ] ; //<S2SV> int i , j , k , l , m ; //<S2SV> for ( i = 0 ; i < PLANE_TYPES ; ++ i ) { //<S2SV> for ( j = 0 ; j < REF_TYPES ; ++ j ) { //<S2SV> for ( k = 0 ; k < COEF_BANDS ; ++ k ) { //<S2SV> for ( l = 0 ; l < BAND_COEFF_CONTEXTS ( k ) ; ++ l ) { //<S2SV> vp9_tree_probs_from_distribution ( vp9_coef_tree , //<S2SV> coef_branch_ct [ i ] [ j ] [ k ] [ l ] , //<S2SV> coef_counts [ i ] [ j ] [ k ] [ l ] ) ; //<S2SV> coef_branch_ct [ i ] [ j ] [ k ] [ l ] [ 0 ] [ 1 ] = eob_branch_ct [ i ] [ j ] [ k ] [ l ] - //<S2SV> coef_branch_ct [ i ] [ j ] [ k ] [ l ] [ 0 ] [ 0 ] ; //<S2SV> for ( m = 0 ; m < UNCONSTRAINED_NODES ; ++ m ) //<S2SV> coef_probs [ i ] [ j ] [ k ] [ l ] [ m ] = get_binary_prob ( //<S2SV> coef_branch_ct [ i ] [ j ] [ k ] [ l ] [ m ] [ 0 ] , //<S2SV> coef_branch_ct [ i ] [ j ] [ k ] [ l ] [ m ] [ 1 ] ) ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> 