void vp8cx_pick_filter_level_fast ( YV12_BUFFER_CONFIG * sd , VP8_COMP * cpi ) //<S2SV> { //<S2SV> VP8_COMMON * cm = & cpi -> common ; //<S2SV> int best_err = 0 ; //<S2SV> int filt_err = 0 ; //<S2SV> int min_filter_level = get_min_filter_level ( cpi , cm -> base_qindex ) ; //<S2SV> int max_filter_level = get_max_filter_level ( cpi , cm -> base_qindex ) ; //<S2SV> int filt_val ; //<S2SV> int best_filt_val ; //<S2SV> YV12_BUFFER_CONFIG * saved_frame = cm -> frame_to_show ; //<S2SV> cm -> frame_to_show = & cpi -> pick_lf_lvl_frame ; //<S2SV> if ( cm -> frame_type == KEY_FRAME ) //<S2SV> cm -> sharpness_level = 0 ; //<S2SV> else //<S2SV> cm -> sharpness_level = cpi -> oxcf . Sharpness ; //<S2SV> if ( cm -> sharpness_level != cm -> last_sharpness_level ) //<S2SV> { //<S2SV> vp8_loop_filter_update_sharpness ( & cm -> lf_info , cm -> sharpness_level ) ; //<S2SV> cm -> last_sharpness_level = cm -> sharpness_level ; //<S2SV> } //<S2SV> if ( cm -> filter_level < min_filter_level ) //<S2SV> cm -> filter_level = min_filter_level ; //<S2SV> else if ( cm -> filter_level > max_filter_level ) //<S2SV> cm -> filter_level = max_filter_level ; //<S2SV> filt_val = cm -> filter_level ; //<S2SV> best_filt_val = filt_val ; //<S2SV> yv12_copy_partial_frame ( saved_frame , cm -> frame_to_show ) ; //<S2SV> vp8_loop_filter_partial_frame ( cm , & cpi -> mb . e_mbd , filt_val ) ; //<S2SV> best_err = calc_partial_ssl_err ( sd , cm -> frame_to_show ) ; //<S2SV> filt_val -= 1 + ( filt_val > 10 ) ; //<S2SV> while ( filt_val >= min_filter_level ) //<S2SV> { //<S2SV> yv12_copy_partial_frame ( saved_frame , cm -> frame_to_show ) ; //<S2SV> vp8_loop_filter_partial_frame ( cm , & cpi -> mb . e_mbd , filt_val ) ; //<S2SV> filt_err = calc_partial_ssl_err ( sd , cm -> frame_to_show ) ; //<S2SV> if ( filt_err < best_err ) //<S2SV> { //<S2SV> best_err = filt_err ; //<S2SV> best_filt_val = filt_val ; //<S2SV> } //<S2SV> else //<S2SV> break ; //<S2SV> filt_val -= 1 + ( filt_val > 10 ) ; //<S2SV> } //<S2SV> filt_val = cm -> filter_level + 1 + ( filt_val > 10 ) ; //<S2SV> if ( best_filt_val == cm -> filter_level ) //<S2SV> { //<S2SV> best_err -= ( best_err >> 10 ) ; //<S2SV> while ( filt_val < max_filter_level ) //<S2SV> { //<S2SV> yv12_copy_partial_frame ( saved_frame , cm -> frame_to_show ) ; //<S2SV> vp8_loop_filter_partial_frame ( cm , & cpi -> mb . e_mbd , filt_val ) ; //<S2SV> filt_err = calc_partial_ssl_err ( sd , cm -> frame_to_show ) ; //<S2SV> if ( filt_err < best_err ) //<S2SV> { //<S2SV> best_err = filt_err - ( filt_err >> 10 ) ; //<S2SV> best_filt_val = filt_val ; //<S2SV> } //<S2SV> else //<S2SV> break ; //<S2SV> filt_val += 1 + ( filt_val > 10 ) ; //<S2SV> } //<S2SV> } //<S2SV> cm -> filter_level = best_filt_val ; //<S2SV> if ( cm -> filter_level < min_filter_level ) //<S2SV> cm -> filter_level = min_filter_level ; //<S2SV> if ( cm -> filter_level > max_filter_level ) //<S2SV> cm -> filter_level = max_filter_level ; //<S2SV> cm -> frame_to_show = saved_frame ; //<S2SV> } //<S2SV> 