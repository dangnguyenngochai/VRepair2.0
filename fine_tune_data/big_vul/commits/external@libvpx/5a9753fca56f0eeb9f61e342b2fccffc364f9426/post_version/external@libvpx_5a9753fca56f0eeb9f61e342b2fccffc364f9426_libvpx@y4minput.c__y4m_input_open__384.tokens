int y4m_input_open ( y4m_input * _y4m , FILE * _fin , char * _skip , int _nskip , //<S2SV> int only_420 ) { //<S2SV> char buffer [ 80 ] = { 0 } ; //<S2SV> int ret ; //<S2SV> int i ; //<S2SV> for ( i = 0 ; i < 79 ; i ++ ) { //<S2SV> if ( _nskip > 0 ) { //<S2SV> buffer [ i ] = * _skip ++ ; //<S2SV> _nskip -- ; //<S2SV> } else { //<S2SV> if ( ! file_read ( buffer + i , 1 , _fin ) ) return - 1 ; //<S2SV> } //<S2SV> if ( buffer [ i ] == '\\n' ) break ; //<S2SV> } //<S2SV> if ( _nskip > 0 ) return - 1 ; //<S2SV> if ( i == 79 ) { //<S2SV> fprintf ( stderr , "Error<S2SV_blank>parsing<S2SV_blank>header;<S2SV_blank>not<S2SV_blank>a<S2SV_blank>YUV2MPEG2<S2SV_blank>file?\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> buffer [ i ] = '\\0' ; //<S2SV> if ( memcmp ( buffer , "YUV4MPEG" , 8 ) ) { //<S2SV> fprintf ( stderr , "Incomplete<S2SV_blank>magic<S2SV_blank>for<S2SV_blank>YUV4MPEG<S2SV_blank>file.\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> if ( buffer [ 8 ] != '2' ) { //<S2SV> fprintf ( stderr , "Incorrect<S2SV_blank>YUV<S2SV_blank>input<S2SV_blank>file<S2SV_blank>version;<S2SV_blank>YUV4MPEG2<S2SV_blank>required.\\n" ) ; //<S2SV> } //<S2SV> ret = y4m_parse_tags ( _y4m , buffer + 5 ) ; //<S2SV> if ( ret < 0 ) { //<S2SV> fprintf ( stderr , "Error<S2SV_blank>parsing<S2SV_blank>YUV4MPEG2<S2SV_blank>header.\\n" ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> if ( _y4m -> interlace == '?' ) { //<S2SV> fprintf ( stderr , "Warning:<S2SV_blank>Input<S2SV_blank>video<S2SV_blank>interlacing<S2SV_blank>format<S2SV_blank>unknown;<S2SV_blank>" //<S2SV> "assuming<S2SV_blank>progressive<S2SV_blank>scan.\\n" ) ; //<S2SV> } else if ( _y4m -> interlace != 'p' ) { //<S2SV> fprintf ( stderr , "Input<S2SV_blank>video<S2SV_blank>is<S2SV_blank>interlaced;<S2SV_blank>" //<S2SV> "Only<S2SV_blank>progressive<S2SV_blank>scan<S2SV_blank>handled.\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> _y4m -> vpx_fmt = VPX_IMG_FMT_I420 ; //<S2SV> _y4m -> bps = 12 ; //<S2SV> _y4m -> bit_depth = 8 ; //<S2SV> if ( strcmp ( _y4m -> chroma_type , "420" ) == 0 || //<S2SV> strcmp ( _y4m -> chroma_type , "420jpeg" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = _y4m -> dst_c_dec_h = _y4m -> src_c_dec_v = _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = _y4m -> pic_w * _y4m -> pic_h //<S2SV> + 2 * ( ( _y4m -> pic_w + 1 ) / 2 ) * ( ( _y4m -> pic_h + 1 ) / 2 ) ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_null ; //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "420p10" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = 2 ; //<S2SV> _y4m -> dst_c_dec_h = 2 ; //<S2SV> _y4m -> src_c_dec_v = 2 ; //<S2SV> _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = 2 * ( _y4m -> pic_w * _y4m -> pic_h + //<S2SV> 2 * ( ( _y4m -> pic_w + 1 ) / 2 ) * //<S2SV> ( ( _y4m -> pic_h + 1 ) / 2 ) ) ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_null ; //<S2SV> _y4m -> bit_depth = 10 ; //<S2SV> _y4m -> bps = 15 ; //<S2SV> _y4m -> vpx_fmt = VPX_IMG_FMT_I42016 ; //<S2SV> if ( only_420 ) { //<S2SV> fprintf ( stderr , "Unsupported<S2SV_blank>conversion<S2SV_blank>from<S2SV_blank>420p10<S2SV_blank>to<S2SV_blank>420jpeg\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "420p12" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = 2 ; //<S2SV> _y4m -> dst_c_dec_h = 2 ; //<S2SV> _y4m -> src_c_dec_v = 2 ; //<S2SV> _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = 2 * ( _y4m -> pic_w * _y4m -> pic_h + //<S2SV> 2 * ( ( _y4m -> pic_w + 1 ) / 2 ) * //<S2SV> ( ( _y4m -> pic_h + 1 ) / 2 ) ) ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_null ; //<S2SV> _y4m -> bit_depth = 12 ; //<S2SV> _y4m -> bps = 18 ; //<S2SV> _y4m -> vpx_fmt = VPX_IMG_FMT_I42016 ; //<S2SV> if ( only_420 ) { //<S2SV> fprintf ( stderr , "Unsupported<S2SV_blank>conversion<S2SV_blank>from<S2SV_blank>420p12<S2SV_blank>to<S2SV_blank>420jpeg\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "420mpeg2" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = _y4m -> dst_c_dec_h = _y4m -> src_c_dec_v = _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = //<S2SV> 2 * ( ( _y4m -> pic_w + 1 ) / 2 ) * ( ( _y4m -> pic_h + 1 ) / 2 ) ; //<S2SV> _y4m -> convert = y4m_convert_42xmpeg2_42xjpeg ; //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "420paldv" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = _y4m -> dst_c_dec_h = _y4m -> src_c_dec_v = _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = 3 * ( ( _y4m -> pic_w + 1 ) / 2 ) * ( ( _y4m -> pic_h + 1 ) / 2 ) ; //<S2SV> _y4m -> aux_buf_read_sz = 2 * ( ( _y4m -> pic_w + 1 ) / 2 ) * ( ( _y4m -> pic_h + 1 ) / 2 ) ; //<S2SV> _y4m -> convert = y4m_convert_42xpaldv_42xjpeg ; //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "422jpeg" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = _y4m -> dst_c_dec_h = 2 ; //<S2SV> _y4m -> src_c_dec_v = 1 ; //<S2SV> _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 2 * ( ( _y4m -> pic_w + 1 ) / 2 ) * _y4m -> pic_h ; //<S2SV> _y4m -> convert = y4m_convert_422jpeg_420jpeg ; //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "422" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = 2 ; //<S2SV> _y4m -> src_c_dec_v = 1 ; //<S2SV> if ( only_420 ) { //<S2SV> _y4m -> dst_c_dec_h = 2 ; //<S2SV> _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_read_sz = 2 * ( ( _y4m -> pic_w + 1 ) / 2 ) * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz + //<S2SV> ( ( _y4m -> pic_w + 1 ) / 2 ) * _y4m -> pic_h ; //<S2SV> _y4m -> convert = y4m_convert_422_420jpeg ; //<S2SV> } else { //<S2SV> _y4m -> vpx_fmt = VPX_IMG_FMT_I422 ; //<S2SV> _y4m -> bps = 16 ; //<S2SV> _y4m -> dst_c_dec_h = _y4m -> src_c_dec_h ; //<S2SV> _y4m -> dst_c_dec_v = _y4m -> src_c_dec_v ; //<S2SV> _y4m -> dst_buf_read_sz = _y4m -> pic_w * _y4m -> pic_h //<S2SV> + 2 * ( ( _y4m -> pic_w + 1 ) / 2 ) * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_null ; //<S2SV> } //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "422p10" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = 2 ; //<S2SV> _y4m -> src_c_dec_v = 1 ; //<S2SV> _y4m -> vpx_fmt = VPX_IMG_FMT_I42216 ; //<S2SV> _y4m -> bps = 20 ; //<S2SV> _y4m -> bit_depth = 10 ; //<S2SV> _y4m -> dst_c_dec_h = _y4m -> src_c_dec_h ; //<S2SV> _y4m -> dst_c_dec_v = _y4m -> src_c_dec_v ; //<S2SV> _y4m -> dst_buf_read_sz = 2 * ( _y4m -> pic_w * _y4m -> pic_h + //<S2SV> 2 * ( ( _y4m -> pic_w + 1 ) / 2 ) * _y4m -> pic_h ) ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_null ; //<S2SV> if ( only_420 ) { //<S2SV> fprintf ( stderr , "Unsupported<S2SV_blank>conversion<S2SV_blank>from<S2SV_blank>422p10<S2SV_blank>to<S2SV_blank>420jpeg\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "422p12" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = 2 ; //<S2SV> _y4m -> src_c_dec_v = 1 ; //<S2SV> _y4m -> vpx_fmt = VPX_IMG_FMT_I42216 ; //<S2SV> _y4m -> bps = 24 ; //<S2SV> _y4m -> bit_depth = 12 ; //<S2SV> _y4m -> dst_c_dec_h = _y4m -> src_c_dec_h ; //<S2SV> _y4m -> dst_c_dec_v = _y4m -> src_c_dec_v ; //<S2SV> _y4m -> dst_buf_read_sz = 2 * ( _y4m -> pic_w * _y4m -> pic_h + //<S2SV> 2 * ( ( _y4m -> pic_w + 1 ) / 2 ) * _y4m -> pic_h ) ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_null ; //<S2SV> if ( only_420 ) { //<S2SV> fprintf ( stderr , "Unsupported<S2SV_blank>conversion<S2SV_blank>from<S2SV_blank>422p12<S2SV_blank>to<S2SV_blank>420jpeg\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "411" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = 4 ; //<S2SV> _y4m -> dst_c_dec_h = 2 ; //<S2SV> _y4m -> src_c_dec_v = 1 ; //<S2SV> _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_read_sz = 2 * ( ( _y4m -> pic_w + 3 ) / 4 ) * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz + ( ( _y4m -> pic_w + 1 ) / 2 ) * _y4m -> pic_h ; //<S2SV> _y4m -> convert = y4m_convert_411_420jpeg ; //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "444" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = 1 ; //<S2SV> _y4m -> src_c_dec_v = 1 ; //<S2SV> if ( only_420 ) { //<S2SV> _y4m -> dst_c_dec_h = 2 ; //<S2SV> _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_read_sz = 2 * _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz + //<S2SV> ( ( _y4m -> pic_w + 1 ) / 2 ) * _y4m -> pic_h ; //<S2SV> _y4m -> convert = y4m_convert_444_420jpeg ; //<S2SV> } else { //<S2SV> _y4m -> vpx_fmt = VPX_IMG_FMT_I444 ; //<S2SV> _y4m -> bps = 24 ; //<S2SV> _y4m -> dst_c_dec_h = _y4m -> src_c_dec_h ; //<S2SV> _y4m -> dst_c_dec_v = _y4m -> src_c_dec_v ; //<S2SV> _y4m -> dst_buf_read_sz = 3 * _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_null ; //<S2SV> } //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "444p10" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = 1 ; //<S2SV> _y4m -> src_c_dec_v = 1 ; //<S2SV> _y4m -> vpx_fmt = VPX_IMG_FMT_I44416 ; //<S2SV> _y4m -> bps = 30 ; //<S2SV> _y4m -> bit_depth = 10 ; //<S2SV> _y4m -> dst_c_dec_h = _y4m -> src_c_dec_h ; //<S2SV> _y4m -> dst_c_dec_v = _y4m -> src_c_dec_v ; //<S2SV> _y4m -> dst_buf_read_sz = 2 * 3 * _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_null ; //<S2SV> if ( only_420 ) { //<S2SV> fprintf ( stderr , "Unsupported<S2SV_blank>conversion<S2SV_blank>from<S2SV_blank>444p10<S2SV_blank>to<S2SV_blank>420jpeg\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "444p12" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = 1 ; //<S2SV> _y4m -> src_c_dec_v = 1 ; //<S2SV> _y4m -> vpx_fmt = VPX_IMG_FMT_I44416 ; //<S2SV> _y4m -> bps = 36 ; //<S2SV> _y4m -> bit_depth = 12 ; //<S2SV> _y4m -> dst_c_dec_h = _y4m -> src_c_dec_h ; //<S2SV> _y4m -> dst_c_dec_v = _y4m -> src_c_dec_v ; //<S2SV> _y4m -> dst_buf_read_sz = 2 * 3 * _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_null ; //<S2SV> if ( only_420 ) { //<S2SV> fprintf ( stderr , "Unsupported<S2SV_blank>conversion<S2SV_blank>from<S2SV_blank>444p12<S2SV_blank>to<S2SV_blank>420jpeg\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "444alpha" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = 1 ; //<S2SV> _y4m -> src_c_dec_v = 1 ; //<S2SV> if ( only_420 ) { //<S2SV> _y4m -> dst_c_dec_h = 2 ; //<S2SV> _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 3 * _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> convert = y4m_convert_444_420jpeg ; //<S2SV> } else { //<S2SV> _y4m -> vpx_fmt = VPX_IMG_FMT_444A ; //<S2SV> _y4m -> bps = 32 ; //<S2SV> _y4m -> dst_c_dec_h = _y4m -> src_c_dec_h ; //<S2SV> _y4m -> dst_c_dec_v = _y4m -> src_c_dec_v ; //<S2SV> _y4m -> dst_buf_read_sz = 4 * _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_null ; //<S2SV> } //<S2SV> } else if ( strcmp ( _y4m -> chroma_type , "mono" ) == 0 ) { //<S2SV> _y4m -> src_c_dec_h = _y4m -> src_c_dec_v = 0 ; //<S2SV> _y4m -> dst_c_dec_h = _y4m -> dst_c_dec_v = 2 ; //<S2SV> _y4m -> dst_buf_read_sz = _y4m -> pic_w * _y4m -> pic_h ; //<S2SV> _y4m -> aux_buf_sz = _y4m -> aux_buf_read_sz = 0 ; //<S2SV> _y4m -> convert = y4m_convert_mono_420jpeg ; //<S2SV> } else { //<S2SV> fprintf ( stderr , "Unknown<S2SV_blank>chroma<S2SV_blank>sampling<S2SV_blank>type:<S2SV_blank>%s\\n" , _y4m -> chroma_type ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> _y4m -> dst_buf_sz = _y4m -> pic_w * _y4m -> pic_h //<S2SV> + 2 * ( ( _y4m -> pic_w + _y4m -> dst_c_dec_h - 1 ) / _y4m -> dst_c_dec_h ) * //<S2SV> ( ( _y4m -> pic_h + _y4m -> dst_c_dec_v - 1 ) / _y4m -> dst_c_dec_v ) ; //<S2SV> if ( _y4m -> bit_depth == 8 ) //<S2SV> _y4m -> dst_buf = ( unsigned char * ) malloc ( _y4m -> dst_buf_sz ) ; //<S2SV> else //<S2SV> _y4m -> dst_buf = ( unsigned char * ) malloc ( 2 * _y4m -> dst_buf_sz ) ; //<S2SV> if ( _y4m -> aux_buf_sz > 0 ) //<S2SV> _y4m -> aux_buf = ( unsigned char * ) malloc ( _y4m -> aux_buf_sz ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 