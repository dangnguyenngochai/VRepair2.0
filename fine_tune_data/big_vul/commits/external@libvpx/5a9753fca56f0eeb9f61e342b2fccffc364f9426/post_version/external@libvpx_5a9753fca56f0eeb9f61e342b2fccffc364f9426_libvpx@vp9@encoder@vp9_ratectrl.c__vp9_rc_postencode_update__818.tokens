void vp9_rc_postencode_update ( VP9_COMP * cpi , uint64_t bytes_used ) { //<S2SV> const VP9_COMMON * const cm = & cpi -> common ; //<S2SV> const VP9EncoderConfig * const oxcf = & cpi -> oxcf ; //<S2SV> RATE_CONTROL * const rc = & cpi -> rc ; //<S2SV> const int qindex = cm -> base_qindex ; //<S2SV> if ( cpi -> oxcf . aq_mode == CYCLIC_REFRESH_AQ && cm -> seg . enabled ) { //<S2SV> vp9_cyclic_refresh_postencode ( cpi ) ; //<S2SV> } //<S2SV> rc -> projected_frame_size = ( int ) ( bytes_used << 3 ) ; //<S2SV> vp9_rc_update_rate_correction_factors ( cpi ) ; //<S2SV> if ( cm -> frame_type == KEY_FRAME ) { //<S2SV> rc -> last_q [ KEY_FRAME ] = qindex ; //<S2SV> rc -> avg_frame_qindex [ KEY_FRAME ] = //<S2SV> ROUND_POWER_OF_TWO ( 3 * rc -> avg_frame_qindex [ KEY_FRAME ] + qindex , 2 ) ; //<S2SV> if ( cpi -> use_svc ) { //<S2SV> int i = 0 ; //<S2SV> SVC * svc = & cpi -> svc ; //<S2SV> for ( i = 0 ; i < svc -> number_temporal_layers ; ++ i ) { //<S2SV> const int layer = LAYER_IDS_TO_IDX ( svc -> spatial_layer_id , i , //<S2SV> svc -> number_temporal_layers ) ; //<S2SV> LAYER_CONTEXT * lc = & svc -> layer_context [ layer ] ; //<S2SV> RATE_CONTROL * lrc = & lc -> rc ; //<S2SV> lrc -> last_q [ KEY_FRAME ] = rc -> last_q [ KEY_FRAME ] ; //<S2SV> lrc -> avg_frame_qindex [ KEY_FRAME ] = rc -> avg_frame_qindex [ KEY_FRAME ] ; //<S2SV> } //<S2SV> } //<S2SV> } else { //<S2SV> if ( rc -> is_src_frame_alt_ref || //<S2SV> ! ( cpi -> refresh_golden_frame || cpi -> refresh_alt_ref_frame ) || //<S2SV> ( cpi -> use_svc && oxcf -> rc_mode == VPX_CBR ) ) { //<S2SV> rc -> last_q [ INTER_FRAME ] = qindex ; //<S2SV> rc -> avg_frame_qindex [ INTER_FRAME ] = //<S2SV> ROUND_POWER_OF_TWO ( 3 * rc -> avg_frame_qindex [ INTER_FRAME ] + qindex , 2 ) ; //<S2SV> rc -> ni_frames ++ ; //<S2SV> rc -> tot_q += vp9_convert_qindex_to_q ( qindex , cm -> bit_depth ) ; //<S2SV> rc -> avg_q = rc -> tot_q / rc -> ni_frames ; //<S2SV> rc -> ni_tot_qi += qindex ; //<S2SV> rc -> ni_av_qi = rc -> ni_tot_qi / rc -> ni_frames ; //<S2SV> } //<S2SV> } //<S2SV> if ( ( qindex < rc -> last_boosted_qindex ) || //<S2SV> ( cm -> frame_type == KEY_FRAME ) || //<S2SV> ( ! rc -> constrained_gf_group && //<S2SV> ( cpi -> refresh_alt_ref_frame || //<S2SV> ( cpi -> refresh_golden_frame && ! rc -> is_src_frame_alt_ref ) ) ) ) { //<S2SV> rc -> last_boosted_qindex = qindex ; //<S2SV> } //<S2SV> if ( cm -> frame_type == KEY_FRAME ) //<S2SV> rc -> last_kf_qindex = qindex ; //<S2SV> update_buffer_level ( cpi , rc -> projected_frame_size ) ; //<S2SV> if ( cm -> frame_type != KEY_FRAME ) { //<S2SV> rc -> rolling_target_bits = ROUND_POWER_OF_TWO ( //<S2SV> rc -> rolling_target_bits * 3 + rc -> this_frame_target , 2 ) ; //<S2SV> rc -> rolling_actual_bits = ROUND_POWER_OF_TWO ( //<S2SV> rc -> rolling_actual_bits * 3 + rc -> projected_frame_size , 2 ) ; //<S2SV> rc -> long_rolling_target_bits = ROUND_POWER_OF_TWO ( //<S2SV> rc -> long_rolling_target_bits * 31 + rc -> this_frame_target , 5 ) ; //<S2SV> rc -> long_rolling_actual_bits = ROUND_POWER_OF_TWO ( //<S2SV> rc -> long_rolling_actual_bits * 31 + rc -> projected_frame_size , 5 ) ; //<S2SV> } //<S2SV> rc -> total_actual_bits += rc -> projected_frame_size ; //<S2SV> rc -> total_target_bits += cm -> show_frame ? rc -> avg_frame_bandwidth : 0 ; //<S2SV> rc -> total_target_vs_actual = rc -> total_actual_bits - rc -> total_target_bits ; //<S2SV> if ( ! cpi -> use_svc ) { //<S2SV> if ( is_altref_enabled ( cpi ) && cpi -> refresh_alt_ref_frame && //<S2SV> ( cm -> frame_type != KEY_FRAME ) ) //<S2SV> update_alt_ref_frame_stats ( cpi ) ; //<S2SV> else //<S2SV> update_golden_frame_stats ( cpi ) ; //<S2SV> } //<S2SV> if ( cm -> frame_type == KEY_FRAME ) //<S2SV> rc -> frames_since_key = 0 ; //<S2SV> if ( cm -> show_frame ) { //<S2SV> rc -> frames_since_key ++ ; //<S2SV> rc -> frames_to_key -- ; //<S2SV> } //<S2SV> if ( oxcf -> pass != 0 ) { //<S2SV> cpi -> resize_pending = //<S2SV> rc -> next_frame_size_selector != rc -> frame_size_selector ; //<S2SV> rc -> frame_size_selector = rc -> next_frame_size_selector ; //<S2SV> } //<S2SV> } //<S2SV> 