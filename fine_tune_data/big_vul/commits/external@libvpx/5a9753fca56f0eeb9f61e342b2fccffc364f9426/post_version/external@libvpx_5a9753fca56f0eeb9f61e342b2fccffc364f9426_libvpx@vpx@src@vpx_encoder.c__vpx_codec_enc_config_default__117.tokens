vpx_codec_err_t vpx_codec_enc_config_default ( vpx_codec_iface_t * iface , //<S2SV> vpx_codec_enc_cfg_t * cfg , //<S2SV> unsigned int usage ) { //<S2SV> vpx_codec_err_t res ; //<S2SV> vpx_codec_enc_cfg_map_t * map ; //<S2SV> int i ; //<S2SV> if ( ! iface || ! cfg || usage > INT_MAX ) //<S2SV> res = VPX_CODEC_INVALID_PARAM ; //<S2SV> else if ( ! ( iface -> caps & VPX_CODEC_CAP_ENCODER ) ) //<S2SV> res = VPX_CODEC_INCAPABLE ; //<S2SV> else { //<S2SV> res = VPX_CODEC_INVALID_PARAM ; //<S2SV> for ( i = 0 ; i < iface -> enc . cfg_map_count ; ++ i ) { //<S2SV> map = iface -> enc . cfg_maps + i ; //<S2SV> if ( map -> usage == ( int ) usage ) { //<S2SV> * cfg = map -> cfg ; //<S2SV> cfg -> g_usage = usage ; //<S2SV> res = VPX_CODEC_OK ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> return res ; //<S2SV> } //<S2SV> 