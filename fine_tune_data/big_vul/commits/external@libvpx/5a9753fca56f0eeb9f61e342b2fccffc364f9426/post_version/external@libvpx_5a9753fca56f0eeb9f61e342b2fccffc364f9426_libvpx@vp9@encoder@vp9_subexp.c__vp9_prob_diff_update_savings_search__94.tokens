int vp9_prob_diff_update_savings_search ( const unsigned int * ct , //<S2SV> vpx_prob oldp , vpx_prob * bestp , //<S2SV> vpx_prob upd ) { //<S2SV> const int old_b = cost_branch256 ( ct , oldp ) ; //<S2SV> int bestsavings = 0 ; //<S2SV> vpx_prob newp , bestnewp = oldp ; //<S2SV> const int step = * bestp > oldp ? - 1 : 1 ; //<S2SV> for ( newp = * bestp ; newp != oldp ; newp += step ) { //<S2SV> const int new_b = cost_branch256 ( ct , newp ) ; //<S2SV> const int update_b = prob_diff_update_cost ( newp , oldp ) + vp9_cost_upd256 ; //<S2SV> const int savings = old_b - new_b - update_b ; //<S2SV> if ( savings > bestsavings ) { //<S2SV> bestsavings = savings ; //<S2SV> bestnewp = newp ; //<S2SV> } //<S2SV> } //<S2SV> * bestp = bestnewp ; //<S2SV> return bestsavings ; //<S2SV> } //<S2SV> 