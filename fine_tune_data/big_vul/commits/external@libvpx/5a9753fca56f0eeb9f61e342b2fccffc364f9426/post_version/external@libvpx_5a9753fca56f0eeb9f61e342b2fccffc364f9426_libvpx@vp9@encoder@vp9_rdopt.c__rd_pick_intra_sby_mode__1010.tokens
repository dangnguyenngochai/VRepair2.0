static int64_t rd_pick_intra_sby_mode ( VP9_COMP * cpi , MACROBLOCK * x , //<S2SV> int * rate , int * rate_tokenonly , //<S2SV> int64_t * distortion , int * skippable , //<S2SV> BLOCK_SIZE bsize , //<S2SV> int64_t best_rd ) { //<S2SV> PREDICTION_MODE mode ; //<S2SV> PREDICTION_MODE mode_selected = DC_PRED ; //<S2SV> MACROBLOCKD * const xd = & x -> e_mbd ; //<S2SV> MODE_INFO * const mic = xd -> mi [ 0 ] ; //<S2SV> int this_rate , this_rate_tokenonly , s ; //<S2SV> int64_t this_distortion , this_rd ; //<S2SV> TX_SIZE best_tx = TX_4X4 ; //<S2SV> int * bmode_costs ; //<S2SV> const MODE_INFO * above_mi = xd -> above_mi ; //<S2SV> const MODE_INFO * left_mi = xd -> left_mi ; //<S2SV> const PREDICTION_MODE A = vp9_above_block_mode ( mic , above_mi , 0 ) ; //<S2SV> const PREDICTION_MODE L = vp9_left_block_mode ( mic , left_mi , 0 ) ; //<S2SV> bmode_costs = cpi -> y_mode_costs [ A ] [ L ] ; //<S2SV> memset ( x -> skip_txfm , SKIP_TXFM_NONE , sizeof ( x -> skip_txfm ) ) ; //<S2SV> for ( mode = DC_PRED ; mode <= TM_PRED ; mode ++ ) { //<S2SV> if ( cpi -> sf . use_nonrd_pick_mode ) { //<S2SV> if ( conditional_skipintra ( mode , mode_selected ) ) //<S2SV> continue ; //<S2SV> if ( * skippable ) //<S2SV> break ; //<S2SV> } //<S2SV> mic -> mbmi . mode = mode ; //<S2SV> super_block_yrd ( cpi , x , & this_rate_tokenonly , & this_distortion , //<S2SV> & s , NULL , bsize , best_rd ) ; //<S2SV> if ( this_rate_tokenonly == INT_MAX ) //<S2SV> continue ; //<S2SV> this_rate = this_rate_tokenonly + bmode_costs [ mode ] ; //<S2SV> this_rd = RDCOST ( x -> rdmult , x -> rddiv , this_rate , this_distortion ) ; //<S2SV> if ( this_rd < best_rd ) { //<S2SV> mode_selected = mode ; //<S2SV> best_rd = this_rd ; //<S2SV> best_tx = mic -> mbmi . tx_size ; //<S2SV> * rate = this_rate ; //<S2SV> * rate_tokenonly = this_rate_tokenonly ; //<S2SV> * distortion = this_distortion ; //<S2SV> * skippable = s ; //<S2SV> } //<S2SV> } //<S2SV> mic -> mbmi . mode = mode_selected ; //<S2SV> mic -> mbmi . tx_size = best_tx ; //<S2SV> return best_rd ; //<S2SV> } //<S2SV> 