static double calc_frame_boost ( VP9_COMP * cpi , //<S2SV> const FIRSTPASS_STATS * this_frame , //<S2SV> double this_frame_mv_in_out , //<S2SV> double max_boost ) { //<S2SV> double frame_boost ; //<S2SV> const double lq = //<S2SV> vp9_convert_qindex_to_q ( cpi -> rc . avg_frame_qindex [ INTER_FRAME ] , //<S2SV> cpi -> common . bit_depth ) ; //<S2SV> const double boost_q_correction = MIN ( ( 0.5 + ( lq * 0.015 ) ) , 1.5 ) ; //<S2SV> int num_mbs = ( cpi -> oxcf . resize_mode != RESIZE_NONE ) //<S2SV> ? cpi -> initial_mbs : cpi -> common . MBs ; //<S2SV> num_mbs = ( int ) MAX ( 1 , num_mbs * calculate_active_area ( cpi , this_frame ) ) ; //<S2SV> frame_boost = ( BASELINE_ERR_PER_MB * num_mbs ) / //<S2SV> DOUBLE_DIVIDE_CHECK ( this_frame -> coded_error ) ; //<S2SV> frame_boost = frame_boost * BOOST_FACTOR * boost_q_correction ; //<S2SV> if ( this_frame_mv_in_out > 0.0 ) //<S2SV> frame_boost += frame_boost * ( this_frame_mv_in_out * 2.0 ) ; //<S2SV> else //<S2SV> frame_boost += frame_boost * ( this_frame_mv_in_out / 2.0 ) ; //<S2SV> return MIN ( frame_boost , max_boost * boost_q_correction ) ; //<S2SV> } //<S2SV> 