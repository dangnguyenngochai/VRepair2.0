static int calc_iframe_target_size_one_pass_cbr ( const VP9_COMP * cpi ) { //<S2SV> const RATE_CONTROL * rc = & cpi -> rc ; //<S2SV> const VP9EncoderConfig * oxcf = & cpi -> oxcf ; //<S2SV> const SVC * const svc = & cpi -> svc ; //<S2SV> int target ; //<S2SV> if ( cpi -> common . current_video_frame == 0 ) { //<S2SV> target = ( ( rc -> starting_buffer_level / 2 ) > INT_MAX ) //<S2SV> ? INT_MAX : ( int ) ( rc -> starting_buffer_level / 2 ) ; //<S2SV> } else { //<S2SV> int kf_boost = 32 ; //<S2SV> double framerate = cpi -> framerate ; //<S2SV> if ( svc -> number_temporal_layers > 1 && //<S2SV> oxcf -> rc_mode == VPX_CBR ) { //<S2SV> const int layer = LAYER_IDS_TO_IDX ( svc -> spatial_layer_id , //<S2SV> svc -> temporal_layer_id , svc -> number_temporal_layers ) ; //<S2SV> const LAYER_CONTEXT * lc = & svc -> layer_context [ layer ] ; //<S2SV> framerate = lc -> framerate ; //<S2SV> } //<S2SV> kf_boost = MAX ( kf_boost , ( int ) ( 2 * framerate - 16 ) ) ; //<S2SV> if ( rc -> frames_since_key < framerate / 2 ) { //<S2SV> kf_boost = ( int ) ( kf_boost * rc -> frames_since_key / //<S2SV> ( framerate / 2 ) ) ; //<S2SV> } //<S2SV> target = ( ( 16 + kf_boost ) * rc -> avg_frame_bandwidth ) >> 4 ; //<S2SV> } //<S2SV> return vp9_rc_clamp_iframe_target_size ( cpi , target ) ; //<S2SV> } //<S2SV> 