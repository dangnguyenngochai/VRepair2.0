static int temporal_filter_find_matching_mb_c ( VP9_COMP * cpi , //<S2SV> uint8_t * arf_frame_buf , //<S2SV> uint8_t * frame_ptr_buf , //<S2SV> int stride ) { //<S2SV> MACROBLOCK * const x = & cpi -> td . mb ; //<S2SV> MACROBLOCKD * const xd = & x -> e_mbd ; //<S2SV> const MV_SPEED_FEATURES * const mv_sf = & cpi -> sf . mv ; //<S2SV> int step_param ; //<S2SV> int sadpb = x -> sadperbit16 ; //<S2SV> int bestsme = INT_MAX ; //<S2SV> int distortion ; //<S2SV> unsigned int sse ; //<S2SV> int cost_list [ 5 ] ; //<S2SV> MV best_ref_mv1 = { 0 , 0 } ; //<S2SV> MV best_ref_mv1_full ; //<S2SV> MV * ref_mv = & x -> e_mbd . mi [ 0 ] -> bmi [ 0 ] . as_mv [ 0 ] . as_mv ; //<S2SV> struct buf_2d src = x -> plane [ 0 ] . src ; //<S2SV> struct buf_2d pre = xd -> plane [ 0 ] . pre [ 0 ] ; //<S2SV> best_ref_mv1_full . col = best_ref_mv1 . col >> 3 ; //<S2SV> best_ref_mv1_full . row = best_ref_mv1 . row >> 3 ; //<S2SV> x -> plane [ 0 ] . src . buf = arf_frame_buf ; //<S2SV> x -> plane [ 0 ] . src . stride = stride ; //<S2SV> xd -> plane [ 0 ] . pre [ 0 ] . buf = frame_ptr_buf ; //<S2SV> xd -> plane [ 0 ] . pre [ 0 ] . stride = stride ; //<S2SV> step_param = mv_sf -> reduce_first_step_size ; //<S2SV> step_param = MIN ( step_param , MAX_MVSEARCH_STEPS - 2 ) ; //<S2SV> vp9_hex_search ( x , & best_ref_mv1_full , step_param , sadpb , 1 , //<S2SV> cond_cost_list ( cpi , cost_list ) , //<S2SV> & cpi -> fn_ptr [ BLOCK_16X16 ] , 0 , & best_ref_mv1 , ref_mv ) ; //<S2SV> bestsme = cpi -> find_fractional_mv_step ( x , ref_mv , //<S2SV> & best_ref_mv1 , //<S2SV> cpi -> common . allow_high_precision_mv , //<S2SV> x -> errorperbit , //<S2SV> & cpi -> fn_ptr [ BLOCK_16X16 ] , //<S2SV> 0 , mv_sf -> subpel_iters_per_step , //<S2SV> cond_cost_list ( cpi , cost_list ) , //<S2SV> NULL , NULL , //<S2SV> & distortion , & sse , NULL , 0 , 0 ) ; //<S2SV> x -> plane [ 0 ] . src = src ; //<S2SV> xd -> plane [ 0 ] . pre [ 0 ] = pre ; //<S2SV> return bestsme ; //<S2SV> } //<S2SV> 