void vp9_rc_init ( const VP9EncoderConfig * oxcf , int pass , RATE_CONTROL * rc ) { //<S2SV> int i ; //<S2SV> if ( pass == 0 && oxcf -> rc_mode == VPX_CBR ) { //<S2SV> rc -> avg_frame_qindex [ KEY_FRAME ] = oxcf -> worst_allowed_q ; //<S2SV> rc -> avg_frame_qindex [ INTER_FRAME ] = oxcf -> worst_allowed_q ; //<S2SV> } else { //<S2SV> rc -> avg_frame_qindex [ KEY_FRAME ] = ( oxcf -> worst_allowed_q + //<S2SV> oxcf -> best_allowed_q ) / 2 ; //<S2SV> rc -> avg_frame_qindex [ INTER_FRAME ] = ( oxcf -> worst_allowed_q + //<S2SV> oxcf -> best_allowed_q ) / 2 ; //<S2SV> } //<S2SV> rc -> last_q [ KEY_FRAME ] = oxcf -> best_allowed_q ; //<S2SV> rc -> last_q [ INTER_FRAME ] = oxcf -> worst_allowed_q ; //<S2SV> rc -> buffer_level = rc -> starting_buffer_level ; //<S2SV> rc -> bits_off_target = rc -> starting_buffer_level ; //<S2SV> rc -> rolling_target_bits = rc -> avg_frame_bandwidth ; //<S2SV> rc -> rolling_actual_bits = rc -> avg_frame_bandwidth ; //<S2SV> rc -> long_rolling_target_bits = rc -> avg_frame_bandwidth ; //<S2SV> rc -> long_rolling_actual_bits = rc -> avg_frame_bandwidth ; //<S2SV> rc -> total_actual_bits = 0 ; //<S2SV> rc -> total_target_bits = 0 ; //<S2SV> rc -> total_target_vs_actual = 0 ; //<S2SV> rc -> frames_since_key = 8 ; //<S2SV> rc -> this_key_frame_forced = 0 ; //<S2SV> rc -> next_key_frame_forced = 0 ; //<S2SV> rc -> source_alt_ref_pending = 0 ; //<S2SV> rc -> source_alt_ref_active = 0 ; //<S2SV> rc -> frames_till_gf_update_due = 0 ; //<S2SV> rc -> ni_av_qi = oxcf -> worst_allowed_q ; //<S2SV> rc -> ni_tot_qi = 0 ; //<S2SV> rc -> ni_frames = 0 ; //<S2SV> rc -> tot_q = 0.0 ; //<S2SV> rc -> avg_q = vp9_convert_qindex_to_q ( oxcf -> worst_allowed_q , oxcf -> bit_depth ) ; //<S2SV> for ( i = 0 ; i < RATE_FACTOR_LEVELS ; ++ i ) { //<S2SV> rc -> rate_correction_factors [ i ] = 1.0 ; //<S2SV> } //<S2SV> rc -> min_gf_interval = oxcf -> min_gf_interval ; //<S2SV> rc -> max_gf_interval = oxcf -> max_gf_interval ; //<S2SV> if ( rc -> min_gf_interval == 0 ) //<S2SV> rc -> min_gf_interval = vp9_rc_get_default_min_gf_interval ( //<S2SV> oxcf -> width , oxcf -> height , oxcf -> init_framerate ) ; //<S2SV> if ( rc -> max_gf_interval == 0 ) //<S2SV> rc -> max_gf_interval = vp9_rc_get_default_max_gf_interval ( //<S2SV> oxcf -> init_framerate , rc -> min_gf_interval ) ; //<S2SV> rc -> baseline_gf_interval = ( rc -> min_gf_interval + rc -> max_gf_interval ) / 2 ; //<S2SV> } //<S2SV> 