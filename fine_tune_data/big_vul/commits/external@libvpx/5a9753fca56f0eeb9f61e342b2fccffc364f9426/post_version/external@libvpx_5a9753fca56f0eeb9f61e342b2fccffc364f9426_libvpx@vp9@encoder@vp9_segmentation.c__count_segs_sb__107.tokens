static void count_segs_sb ( const VP9_COMMON * cm , MACROBLOCKD * xd , //<S2SV> const TileInfo * tile , MODE_INFO * * mi , //<S2SV> int * no_pred_segcounts , //<S2SV> int ( * temporal_predictor_count ) [ 2 ] , //<S2SV> int * t_unpred_seg_counts , //<S2SV> int mi_row , int mi_col , //<S2SV> BLOCK_SIZE bsize ) { //<S2SV> const int mis = cm -> mi_stride ; //<S2SV> int bw , bh ; //<S2SV> const int bs = num_8x8_blocks_wide_lookup [ bsize ] , hbs = bs / 2 ; //<S2SV> if ( mi_row >= cm -> mi_rows || mi_col >= cm -> mi_cols ) //<S2SV> return ; //<S2SV> bw = num_8x8_blocks_wide_lookup [ mi [ 0 ] -> mbmi . sb_type ] ; //<S2SV> bh = num_8x8_blocks_high_lookup [ mi [ 0 ] -> mbmi . sb_type ] ; //<S2SV> if ( bw == bs && bh == bs ) { //<S2SV> count_segs ( cm , xd , tile , mi , no_pred_segcounts , temporal_predictor_count , //<S2SV> t_unpred_seg_counts , bs , bs , mi_row , mi_col ) ; //<S2SV> } else if ( bw == bs && bh < bs ) { //<S2SV> count_segs ( cm , xd , tile , mi , no_pred_segcounts , temporal_predictor_count , //<S2SV> t_unpred_seg_counts , bs , hbs , mi_row , mi_col ) ; //<S2SV> count_segs ( cm , xd , tile , mi + hbs * mis , no_pred_segcounts , //<S2SV> temporal_predictor_count , t_unpred_seg_counts , bs , hbs , //<S2SV> mi_row + hbs , mi_col ) ; //<S2SV> } else if ( bw < bs && bh == bs ) { //<S2SV> count_segs ( cm , xd , tile , mi , no_pred_segcounts , temporal_predictor_count , //<S2SV> t_unpred_seg_counts , hbs , bs , mi_row , mi_col ) ; //<S2SV> count_segs ( cm , xd , tile , mi + hbs , //<S2SV> no_pred_segcounts , temporal_predictor_count , t_unpred_seg_counts , //<S2SV> hbs , bs , mi_row , mi_col + hbs ) ; //<S2SV> } else { //<S2SV> const BLOCK_SIZE subsize = subsize_lookup [ PARTITION_SPLIT ] [ bsize ] ; //<S2SV> int n ; //<S2SV> assert ( bw < bs && bh < bs ) ; //<S2SV> for ( n = 0 ; n < 4 ; n ++ ) { //<S2SV> const int mi_dc = hbs * ( n & 1 ) ; //<S2SV> const int mi_dr = hbs * ( n >> 1 ) ; //<S2SV> count_segs_sb ( cm , xd , tile , & mi [ mi_dr * mis + mi_dc ] , //<S2SV> no_pred_segcounts , temporal_predictor_count , //<S2SV> t_unpred_seg_counts , //<S2SV> mi_row + mi_dr , mi_col + mi_dc , subsize ) ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> 