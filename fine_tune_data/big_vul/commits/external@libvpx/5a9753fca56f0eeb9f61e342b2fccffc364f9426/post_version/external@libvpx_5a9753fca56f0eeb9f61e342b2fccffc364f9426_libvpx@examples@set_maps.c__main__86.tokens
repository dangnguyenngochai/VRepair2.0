int main ( int argc , char * * argv ) { //<S2SV> FILE * infile = NULL ; //<S2SV> vpx_codec_ctx_t codec ; //<S2SV> vpx_codec_enc_cfg_t cfg ; //<S2SV> int frame_count = 0 ; //<S2SV> vpx_image_t raw ; //<S2SV> vpx_codec_err_t res ; //<S2SV> VpxVideoInfo info ; //<S2SV> VpxVideoWriter * writer = NULL ; //<S2SV> const VpxInterface * encoder = NULL ; //<S2SV> const int fps = 2 ; //<S2SV> const double bits_per_pixel_per_frame = 0.067 ; //<S2SV> exec_name = argv [ 0 ] ; //<S2SV> if ( argc != 6 ) //<S2SV> die ( "Invalid<S2SV_blank>number<S2SV_blank>of<S2SV_blank>arguments" ) ; //<S2SV> memset ( & info , 0 , sizeof ( info ) ) ; //<S2SV> encoder = get_vpx_encoder_by_name ( argv [ 1 ] ) ; //<S2SV> if ( encoder == NULL ) { //<S2SV> die ( "Unsupported<S2SV_blank>codec." ) ; //<S2SV> } //<S2SV> assert ( encoder != NULL ) ; //<S2SV> info . codec_fourcc = encoder -> fourcc ; //<S2SV> info . frame_width = strtol ( argv [ 2 ] , NULL , 0 ) ; //<S2SV> info . frame_height = strtol ( argv [ 3 ] , NULL , 0 ) ; //<S2SV> info . time_base . numerator = 1 ; //<S2SV> info . time_base . denominator = fps ; //<S2SV> if ( info . frame_width <= 0 || //<S2SV> info . frame_height <= 0 || //<S2SV> ( info . frame_width % 2 ) != 0 || //<S2SV> ( info . frame_height % 2 ) != 0 ) { //<S2SV> die ( "Invalid<S2SV_blank>frame<S2SV_blank>size:<S2SV_blank>%dx%d" , info . frame_width , info . frame_height ) ; //<S2SV> } //<S2SV> if ( ! vpx_img_alloc ( & raw , VPX_IMG_FMT_I420 , info . frame_width , //<S2SV> info . frame_height , 1 ) ) { //<S2SV> die ( "Failed<S2SV_blank>to<S2SV_blank>allocate<S2SV_blank>image." ) ; //<S2SV> } //<S2SV> printf ( "Using<S2SV_blank>%s\\n" , vpx_codec_iface_name ( encoder -> codec_interface ( ) ) ) ; //<S2SV> res = vpx_codec_enc_config_default ( encoder -> codec_interface ( ) , & cfg , 0 ) ; //<S2SV> if ( res ) //<S2SV> die_codec ( & codec , "Failed<S2SV_blank>to<S2SV_blank>get<S2SV_blank>default<S2SV_blank>codec<S2SV_blank>config." ) ; //<S2SV> cfg . g_w = info . frame_width ; //<S2SV> cfg . g_h = info . frame_height ; //<S2SV> cfg . g_timebase . num = info . time_base . numerator ; //<S2SV> cfg . g_timebase . den = info . time_base . denominator ; //<S2SV> cfg . rc_target_bitrate = ( unsigned int ) ( bits_per_pixel_per_frame * cfg . g_w * //<S2SV> cfg . g_h * fps / 1000 ) ; //<S2SV> cfg . g_lag_in_frames = 0 ; //<S2SV> writer = vpx_video_writer_open ( argv [ 5 ] , kContainerIVF , & info ) ; //<S2SV> if ( ! writer ) //<S2SV> die ( "Failed<S2SV_blank>to<S2SV_blank>open<S2SV_blank>%s<S2SV_blank>for<S2SV_blank>writing." , argv [ 5 ] ) ; //<S2SV> if ( ! ( infile = fopen ( argv [ 4 ] , "rb" ) ) ) //<S2SV> die ( "Failed<S2SV_blank>to<S2SV_blank>open<S2SV_blank>%s<S2SV_blank>for<S2SV_blank>reading." , argv [ 4 ] ) ; //<S2SV> if ( vpx_codec_enc_init ( & codec , encoder -> codec_interface ( ) , & cfg , 0 ) ) //<S2SV> die_codec ( & codec , "Failed<S2SV_blank>to<S2SV_blank>initialize<S2SV_blank>encoder" ) ; //<S2SV> while ( vpx_img_read ( & raw , infile ) ) { //<S2SV> ++ frame_count ; //<S2SV> if ( frame_count == 22 && encoder -> fourcc == VP8_FOURCC ) { //<S2SV> set_roi_map ( & cfg , & codec ) ; //<S2SV> } else if ( frame_count == 33 ) { //<S2SV> set_active_map ( & cfg , & codec ) ; //<S2SV> } else if ( frame_count == 44 ) { //<S2SV> unset_active_map ( & cfg , & codec ) ; //<S2SV> } //<S2SV> encode_frame ( & codec , & raw , frame_count , writer ) ; //<S2SV> } //<S2SV> while ( encode_frame ( & codec , NULL , - 1 , writer ) ) { } //<S2SV> printf ( "\\n" ) ; //<S2SV> fclose ( infile ) ; //<S2SV> printf ( "Processed<S2SV_blank>%d<S2SV_blank>frames.\\n" , frame_count ) ; //<S2SV> vpx_img_free ( & raw ) ; //<S2SV> if ( vpx_codec_destroy ( & codec ) ) //<S2SV> die_codec ( & codec , "Failed<S2SV_blank>to<S2SV_blank>destroy<S2SV_blank>codec." ) ; //<S2SV> vpx_video_writer_close ( writer ) ; //<S2SV> return EXIT_SUCCESS ; //<S2SV> } //<S2SV> 