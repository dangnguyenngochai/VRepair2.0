void processInputBuffer ( client * c ) { //<S2SV> server . current_client = c ; //<S2SV> while ( sdslen ( c -> querybuf ) ) { //<S2SV> if ( ! ( c -> flags & CLIENT_SLAVE ) && clientsArePaused ( ) ) break ; //<S2SV> if ( c -> flags & CLIENT_BLOCKED ) break ; //<S2SV> if ( c -> flags & ( CLIENT_CLOSE_AFTER_REPLY | CLIENT_CLOSE_ASAP ) ) break ; //<S2SV> if ( ! c -> reqtype ) { //<S2SV> if ( c -> querybuf [ 0 ] == '*' ) { //<S2SV> c -> reqtype = PROTO_REQ_MULTIBULK ; //<S2SV> } else { //<S2SV> c -> reqtype = PROTO_REQ_INLINE ; //<S2SV> } //<S2SV> } //<S2SV> if ( c -> reqtype == PROTO_REQ_INLINE ) { //<S2SV> if ( processInlineBuffer ( c ) != C_OK ) break ; //<S2SV> } else if ( c -> reqtype == PROTO_REQ_MULTIBULK ) { //<S2SV> if ( processMultibulkBuffer ( c ) != C_OK ) break ; //<S2SV> } else { //<S2SV> serverPanic ( "Unknown<S2SV_blank>request<S2SV_blank>type" ) ; //<S2SV> } //<S2SV> if ( c -> argc == 0 ) { //<S2SV> resetClient ( c ) ; //<S2SV> } else { //<S2SV> if ( processCommand ( c ) == C_OK ) //<S2SV> resetClient ( c ) ; //<S2SV> if ( server . current_client == NULL ) break ; //<S2SV> } //<S2SV> } //<S2SV> server . current_client = NULL ; //<S2SV> } //<S2SV> 