static void f_parser ( lua_State * L , void * ud ) { //<S2SV> int i ; //<S2SV> Proto * tf ; //<S2SV> Closure * cl ; //<S2SV> struct SParser * p = cast ( struct SParser * , ud ) ; //<S2SV> int c = luaZ_lookahead ( p -> z ) ; //<S2SV> luaC_checkGC ( L ) ; //<S2SV> tf = ( ( c == LUA_SIGNATURE [ 0 ] ) ? luaU_undump : luaY_parser ) ( L , p -> z , //<S2SV> & p -> buff , p -> name ) ; //<S2SV> cl = luaF_newLclosure ( L , tf -> nups , hvalue ( gt ( L ) ) ) ; //<S2SV> cl -> l . p = tf ; //<S2SV> for ( i = 0 ; i < tf -> nups ; i ++ ) //<S2SV> cl -> l . upvals [ i ] = luaF_newupval ( L ) ; //<S2SV> setclvalue ( L , L -> top , cl ) ; //<S2SV> incr_top ( L ) ; //<S2SV> } //<S2SV> 