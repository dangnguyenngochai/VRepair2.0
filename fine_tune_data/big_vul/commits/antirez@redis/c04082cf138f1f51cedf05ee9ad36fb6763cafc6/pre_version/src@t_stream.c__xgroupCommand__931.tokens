void xgroupCommand ( client * c ) { //<S2SV> const char * help [ ] = { //<S2SV> "CREATE<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><key><S2SV_blank><groupname><S2SV_blank><id<S2SV_blank>or<S2SV_blank>$><S2SV_blank><S2SV_blank>--<S2SV_blank>Create<S2SV_blank>a<S2SV_blank>new<S2SV_blank>consumer<S2SV_blank>group." , //<S2SV> "SETID<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><key><S2SV_blank><groupname><S2SV_blank><id<S2SV_blank>or<S2SV_blank>$><S2SV_blank><S2SV_blank>--<S2SV_blank>Set<S2SV_blank>the<S2SV_blank>current<S2SV_blank>group<S2SV_blank>ID." , //<S2SV> "DELGROUP<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><key><S2SV_blank><groupname><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>--<S2SV_blank>Remove<S2SV_blank>the<S2SV_blank>specified<S2SV_blank>group." , //<S2SV> "DELCONSUMER<S2SV_blank><key><S2SV_blank><groupname><S2SV_blank><consumer><S2SV_blank>--<S2SV_blank>Remove<S2SV_blank>the<S2SV_blank>specified<S2SV_blank>conusmer." , //<S2SV> "HELP<S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank><S2SV_blank>--<S2SV_blank>Prints<S2SV_blank>this<S2SV_blank>help." , //<S2SV> NULL //<S2SV> } ; //<S2SV> stream * s = NULL ; //<S2SV> sds grpname = NULL ; //<S2SV> streamCG * cg = NULL ; //<S2SV> char * opt = c -> argv [ 1 ] -> ptr ; //<S2SV> if ( c -> argc >= 4 ) { //<S2SV> robj * o = lookupKeyWriteOrReply ( c , c -> argv [ 2 ] , shared . nokeyerr ) ; //<S2SV> if ( o == NULL ) return ; //<S2SV> s = o -> ptr ; //<S2SV> grpname = c -> argv [ 3 ] -> ptr ; //<S2SV> if ( ( cg = streamLookupCG ( s , grpname ) ) == NULL && //<S2SV> ( ! strcasecmp ( opt , "SETID" ) || //<S2SV> ! strcasecmp ( opt , "DELCONSUMER" ) ) ) //<S2SV> { //<S2SV> addReplyErrorFormat ( c , "-NOGROUP<S2SV_blank>No<S2SV_blank>such<S2SV_blank>consumer<S2SV_blank>group<S2SV_blank>\'%s\'<S2SV_blank>" //<S2SV> "for<S2SV_blank>key<S2SV_blank>name<S2SV_blank>\'%s\'" , //<S2SV> ( char * ) grpname , ( char * ) c -> argv [ 2 ] -> ptr ) ; //<S2SV> return ; //<S2SV> } //<S2SV> } //<S2SV> if ( ! strcasecmp ( opt , "CREATE" ) && c -> argc == 5 ) { //<S2SV> streamID id ; //<S2SV> if ( ! strcmp ( c -> argv [ 4 ] -> ptr , "$" ) ) { //<S2SV> id = s -> last_id ; //<S2SV> } else if ( streamParseIDOrReply ( c , c -> argv [ 4 ] , & id , 0 ) != C_OK ) { //<S2SV> return ; //<S2SV> } //<S2SV> streamCG * cg = streamCreateCG ( s , grpname , sdslen ( grpname ) , & id ) ; //<S2SV> if ( cg ) { //<S2SV> addReply ( c , shared . ok ) ; //<S2SV> server . dirty ++ ; //<S2SV> } else { //<S2SV> addReplySds ( c , //<S2SV> sdsnew ( "-BUSYGROUP<S2SV_blank>Consumer<S2SV_blank>Group<S2SV_blank>name<S2SV_blank>already<S2SV_blank>exists\\r\\n" ) ) ; //<S2SV> } //<S2SV> } else if ( ! strcasecmp ( opt , "SETID" ) && c -> argc == 5 ) { //<S2SV> streamID id ; //<S2SV> if ( ! strcmp ( c -> argv [ 4 ] -> ptr , "$" ) ) { //<S2SV> id = s -> last_id ; //<S2SV> } else if ( streamParseIDOrReply ( c , c -> argv [ 4 ] , & id , 0 ) != C_OK ) { //<S2SV> return ; //<S2SV> } //<S2SV> cg -> last_id = id ; //<S2SV> addReply ( c , shared . ok ) ; //<S2SV> } else if ( ! strcasecmp ( opt , "DESTROY" ) && c -> argc == 4 ) { //<S2SV> if ( cg ) { //<S2SV> raxRemove ( s -> cgroups , ( unsigned char * ) grpname , sdslen ( grpname ) , NULL ) ; //<S2SV> streamFreeCG ( cg ) ; //<S2SV> addReply ( c , shared . cone ) ; //<S2SV> } else { //<S2SV> addReply ( c , shared . czero ) ; //<S2SV> } //<S2SV> } else if ( ! strcasecmp ( opt , "DELCONSUMER" ) && c -> argc == 5 ) { //<S2SV> long long pending = streamDelConsumer ( cg , c -> argv [ 4 ] -> ptr ) ; //<S2SV> addReplyLongLong ( c , pending ) ; //<S2SV> server . dirty ++ ; //<S2SV> } else if ( ! strcasecmp ( opt , "HELP" ) ) { //<S2SV> addReplyHelp ( c , help ) ; //<S2SV> } else { //<S2SV> addReply ( c , shared . syntaxerr ) ; //<S2SV> } //<S2SV> } //<S2SV> 