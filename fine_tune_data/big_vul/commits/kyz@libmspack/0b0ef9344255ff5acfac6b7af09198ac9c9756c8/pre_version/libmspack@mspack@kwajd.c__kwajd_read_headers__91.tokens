static int kwajd_read_headers ( struct mspack_system * sys , //<S2SV> struct mspack_file * fh , //<S2SV> struct mskwajd_header * hdr ) //<S2SV> { //<S2SV> unsigned char buf [ 16 ] ; //<S2SV> int i ; //<S2SV> if ( sys -> read ( fh , & buf [ 0 ] , kwajh_SIZEOF ) != kwajh_SIZEOF ) { //<S2SV> return MSPACK_ERR_READ ; //<S2SV> } //<S2SV> if ( ( ( unsigned int ) EndGetI32 ( & buf [ kwajh_Signature1 ] ) != 0x4A41574B ) || //<S2SV> ( ( unsigned int ) EndGetI32 ( & buf [ kwajh_Signature2 ] ) != 0xD127F088 ) ) //<S2SV> { //<S2SV> return MSPACK_ERR_SIGNATURE ; //<S2SV> } //<S2SV> hdr -> comp_type = EndGetI16 ( & buf [ kwajh_CompMethod ] ) ; //<S2SV> hdr -> data_offset = EndGetI16 ( & buf [ kwajh_DataOffset ] ) ; //<S2SV> hdr -> headers = EndGetI16 ( & buf [ kwajh_Flags ] ) ; //<S2SV> hdr -> length = 0 ; //<S2SV> hdr -> filename = NULL ; //<S2SV> hdr -> extra = NULL ; //<S2SV> hdr -> extra_length = 0 ; //<S2SV> if ( hdr -> headers & MSKWAJ_HDR_HASLENGTH ) { //<S2SV> if ( sys -> read ( fh , & buf [ 0 ] , 4 ) != 4 ) return MSPACK_ERR_READ ; //<S2SV> hdr -> length = EndGetI32 ( & buf [ 0 ] ) ; //<S2SV> } //<S2SV> if ( hdr -> headers & MSKWAJ_HDR_HASUNKNOWN1 ) { //<S2SV> if ( sys -> read ( fh , & buf [ 0 ] , 2 ) != 2 ) return MSPACK_ERR_READ ; //<S2SV> } //<S2SV> if ( hdr -> headers & MSKWAJ_HDR_HASUNKNOWN2 ) { //<S2SV> if ( sys -> read ( fh , & buf [ 0 ] , 2 ) != 2 ) return MSPACK_ERR_READ ; //<S2SV> i = EndGetI16 ( & buf [ 0 ] ) ; //<S2SV> if ( sys -> seek ( fh , ( off_t ) i , MSPACK_SYS_SEEK_CUR ) ) return MSPACK_ERR_SEEK ; //<S2SV> } //<S2SV> if ( hdr -> headers & ( MSKWAJ_HDR_HASFILENAME | MSKWAJ_HDR_HASFILEEXT ) ) { //<S2SV> off_t pos = sys -> tell ( fh ) ; //<S2SV> char * fn = ( char * ) sys -> alloc ( sys , ( size_t ) 13 ) ; //<S2SV> if ( ! fn ) return MSPACK_ERR_NOMEMORY ; //<S2SV> hdr -> filename = fn ; //<S2SV> if ( hdr -> headers & MSKWAJ_HDR_HASFILENAME ) { //<S2SV> if ( sys -> read ( fh , & buf [ 0 ] , 9 ) != 9 ) return MSPACK_ERR_READ ; //<S2SV> for ( i = 0 ; i < 9 ; i ++ , fn ++ ) if ( ! ( * fn = buf [ i ] ) ) break ; //<S2SV> pos += ( i < 9 ) ? i + 1 : 9 ; //<S2SV> if ( sys -> seek ( fh , pos , MSPACK_SYS_SEEK_START ) ) //<S2SV> return MSPACK_ERR_SEEK ; //<S2SV> } //<S2SV> if ( hdr -> headers & MSKWAJ_HDR_HASFILEEXT ) { //<S2SV> * fn ++ = '.' ; //<S2SV> if ( sys -> read ( fh , & buf [ 0 ] , 4 ) != 4 ) return MSPACK_ERR_READ ; //<S2SV> for ( i = 0 ; i < 4 ; i ++ , fn ++ ) if ( ! ( * fn = buf [ i ] ) ) break ; //<S2SV> pos += ( i < 4 ) ? i + 1 : 4 ; //<S2SV> if ( sys -> seek ( fh , pos , MSPACK_SYS_SEEK_START ) ) //<S2SV> return MSPACK_ERR_SEEK ; //<S2SV> } //<S2SV> * fn = '\\0' ; //<S2SV> } //<S2SV> if ( hdr -> headers & MSKWAJ_HDR_HASEXTRATEXT ) { //<S2SV> if ( sys -> read ( fh , & buf [ 0 ] , 2 ) != 2 ) return MSPACK_ERR_READ ; //<S2SV> i = EndGetI16 ( & buf [ 0 ] ) ; //<S2SV> hdr -> extra = ( char * ) sys -> alloc ( sys , ( size_t ) i + 1 ) ; //<S2SV> if ( ! hdr -> extra ) return MSPACK_ERR_NOMEMORY ; //<S2SV> if ( sys -> read ( fh , hdr -> extra , i ) != i ) return MSPACK_ERR_READ ; //<S2SV> hdr -> extra [ i ] = '\\0' ; //<S2SV> hdr -> extra_length = i ; //<S2SV> } //<S2SV> return MSPACK_ERR_OK ; //<S2SV> } //<S2SV> 