static unsigned char * read_chunk ( struct mschm_decompressor_p * self , //<S2SV> struct mschmd_header * chm , //<S2SV> struct mspack_file * fh , //<S2SV> unsigned int chunk_num ) //<S2SV> { //<S2SV> struct mspack_system * sys = self -> system ; //<S2SV> unsigned char * buf ; //<S2SV> if ( chunk_num >= chm -> num_chunks ) return NULL ; //<S2SV> if ( ! chm -> chunk_cache ) { //<S2SV> size_t size = sizeof ( unsigned char * ) * chm -> num_chunks ; //<S2SV> if ( ! ( chm -> chunk_cache = ( unsigned char * * ) sys -> alloc ( sys , size ) ) ) { //<S2SV> self -> error = MSPACK_ERR_NOMEMORY ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> memset ( chm -> chunk_cache , 0 , size ) ; //<S2SV> } //<S2SV> if ( chm -> chunk_cache [ chunk_num ] ) return chm -> chunk_cache [ chunk_num ] ; //<S2SV> if ( ! ( buf = ( unsigned char * ) sys -> alloc ( sys , chm -> chunk_size ) ) ) { //<S2SV> self -> error = MSPACK_ERR_NOMEMORY ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> if ( sys -> seek ( fh , ( off_t ) ( chm -> dir_offset + ( chunk_num * chm -> chunk_size ) ) , //<S2SV> MSPACK_SYS_SEEK_START ) ) //<S2SV> { //<S2SV> self -> error = MSPACK_ERR_SEEK ; //<S2SV> sys -> free ( buf ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> if ( sys -> read ( fh , buf , ( int ) chm -> chunk_size ) != ( int ) chm -> chunk_size ) { //<S2SV> self -> error = MSPACK_ERR_READ ; //<S2SV> sys -> free ( buf ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> if ( ! ( ( buf [ 0 ] == 0x50 ) && ( buf [ 1 ] == 0x4D ) && ( buf [ 2 ] == 0x47 ) && //<S2SV> ( ( buf [ 3 ] == 0x4C ) || ( buf [ 3 ] == 0x49 ) ) ) ) //<S2SV> { //<S2SV> self -> error = MSPACK_ERR_SEEK ; //<S2SV> sys -> free ( buf ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> return chm -> chunk_cache [ chunk_num ] = buf ; //<S2SV> } //<S2SV> 