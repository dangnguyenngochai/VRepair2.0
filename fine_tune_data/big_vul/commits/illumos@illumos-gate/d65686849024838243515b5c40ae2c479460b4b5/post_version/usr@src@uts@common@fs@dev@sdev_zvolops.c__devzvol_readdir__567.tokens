static int //<S2SV> devzvol_readdir ( struct vnode * dvp , struct uio * uiop , struct cred * cred , //<S2SV> int * eofp , caller_context_t * ct_unused , int flags_unused ) //<S2SV> { //<S2SV> struct sdev_node * sdvp = VTOSDEV ( dvp ) ; //<S2SV> char * ptr ; //<S2SV> sdcmn_err13 ( ( "zv<S2SV_blank>readdir<S2SV_blank>of<S2SV_blank>\'%s\'<S2SV_blank>%s\'" , sdvp -> sdev_path , //<S2SV> sdvp -> sdev_name ) ) ; //<S2SV> if ( strcmp ( sdvp -> sdev_path , ZVOL_DIR ) == 0 ) { //<S2SV> struct vnode * vp ; //<S2SV> rw_exit ( & sdvp -> sdev_contents ) ; //<S2SV> ( void ) devname_lookup_func ( sdvp , "dsk" , & vp , cred , //<S2SV> devzvol_create_dir , SDEV_VATTR ) ; //<S2SV> VN_RELE ( vp ) ; //<S2SV> ( void ) devname_lookup_func ( sdvp , "rdsk" , & vp , cred , //<S2SV> devzvol_create_dir , SDEV_VATTR ) ; //<S2SV> VN_RELE ( vp ) ; //<S2SV> rw_enter ( & sdvp -> sdev_contents , RW_READER ) ; //<S2SV> return ( devname_readdir_func ( dvp , uiop , cred , eofp , 0 ) ) ; //<S2SV> } //<S2SV> if ( uiop -> uio_offset == 0 ) //<S2SV> devzvol_prunedir ( sdvp ) ; //<S2SV> ptr = sdvp -> sdev_path + strlen ( ZVOL_DIR ) ; //<S2SV> if ( ( strcmp ( ptr , "/dsk" ) == 0 ) || ( strcmp ( ptr , "/rdsk" ) == 0 ) ) { //<S2SV> rw_exit ( & sdvp -> sdev_contents ) ; //<S2SV> devzvol_create_pool_dirs ( dvp ) ; //<S2SV> rw_enter ( & sdvp -> sdev_contents , RW_READER ) ; //<S2SV> return ( devname_readdir_func ( dvp , uiop , cred , eofp , 0 ) ) ; //<S2SV> } //<S2SV> ptr = strchr ( ptr + 1 , '/' ) ; //<S2SV> if ( ptr == NULL ) //<S2SV> return ( ENOENT ) ; //<S2SV> ptr ++ ; //<S2SV> rw_exit ( & sdvp -> sdev_contents ) ; //<S2SV> sdev_iter_datasets ( dvp , ZFS_IOC_DATASET_LIST_NEXT , ptr ) ; //<S2SV> rw_enter ( & sdvp -> sdev_contents , RW_READER ) ; //<S2SV> return ( devname_readdir_func ( dvp , uiop , cred , eofp , 0 ) ) ; //<S2SV> } //<S2SV> 