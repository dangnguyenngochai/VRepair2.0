smb_sdrc_t //<S2SV> smb_com_flush ( smb_request_t * sr ) //<S2SV> { //<S2SV> smb_ofile_t * file ; //<S2SV> smb_llist_t * flist ; //<S2SV> int rc ; //<S2SV> if ( smb_flush_required == 0 ) { //<S2SV> rc = smbsr_encode_empty_result ( sr ) ; //<S2SV> return ( ( rc == 0 ) ? SDRC_SUCCESS : SDRC_ERROR ) ; //<S2SV> } //<S2SV> if ( sr -> smb_fid != 0xffff ) { //<S2SV> smbsr_lookup_file ( sr ) ; //<S2SV> if ( sr -> fid_ofile == NULL ) { //<S2SV> smbsr_error ( sr , NT_STATUS_INVALID_HANDLE , //<S2SV> ERRDOS , ERRbadfid ) ; //<S2SV> return ( SDRC_ERROR ) ; //<S2SV> } //<S2SV> smb_flush_file ( sr , sr -> fid_ofile ) ; //<S2SV> } else { //<S2SV> flist = & sr -> tid_tree -> t_ofile_list ; //<S2SV> smb_llist_enter ( flist , RW_READER ) ; //<S2SV> file = smb_llist_head ( flist ) ; //<S2SV> while ( file ) { //<S2SV> mutex_enter ( & file -> f_mutex ) ; //<S2SV> smb_flush_file ( sr , file ) ; //<S2SV> mutex_exit ( & file -> f_mutex ) ; //<S2SV> file = smb_llist_next ( flist , file ) ; //<S2SV> } //<S2SV> smb_llist_exit ( flist ) ; //<S2SV> } //<S2SV> rc = smbsr_encode_empty_result ( sr ) ; //<S2SV> return ( ( rc == 0 ) ? SDRC_SUCCESS : SDRC_ERROR ) ; //<S2SV> } //<S2SV> 