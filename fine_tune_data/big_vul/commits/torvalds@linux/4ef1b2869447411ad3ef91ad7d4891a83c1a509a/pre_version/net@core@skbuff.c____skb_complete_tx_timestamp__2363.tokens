static void __skb_complete_tx_timestamp ( struct sk_buff * skb , //<S2SV> struct sock * sk , //<S2SV> int tstype ) //<S2SV> { //<S2SV> struct sock_exterr_skb * serr ; //<S2SV> int err ; //<S2SV> serr = SKB_EXT_ERR ( skb ) ; //<S2SV> memset ( serr , 0 , sizeof ( * serr ) ) ; //<S2SV> serr -> ee . ee_errno = ENOMSG ; //<S2SV> serr -> ee . ee_origin = SO_EE_ORIGIN_TIMESTAMPING ; //<S2SV> serr -> ee . ee_info = tstype ; //<S2SV> if ( sk -> sk_tsflags & SOF_TIMESTAMPING_OPT_ID ) { //<S2SV> serr -> ee . ee_data = skb_shinfo ( skb ) -> tskey ; //<S2SV> if ( sk -> sk_protocol == IPPROTO_TCP && //<S2SV> sk -> sk_type == SOCK_STREAM ) //<S2SV> serr -> ee . ee_data -= sk -> sk_tskey ; //<S2SV> } //<S2SV> err = sock_queue_err_skb ( sk , skb ) ; //<S2SV> if ( err ) //<S2SV> kfree_skb ( skb ) ; //<S2SV> } //<S2SV> 