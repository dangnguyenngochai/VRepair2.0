void build_ntlmssp_negotiate_blob ( unsigned char * pbuffer , //<S2SV> struct cifs_ses * ses ) //<S2SV> { //<S2SV> NEGOTIATE_MESSAGE * sec_blob = ( NEGOTIATE_MESSAGE * ) pbuffer ; //<S2SV> __u32 flags ; //<S2SV> memset ( pbuffer , 0 , sizeof ( NEGOTIATE_MESSAGE ) ) ; //<S2SV> memcpy ( sec_blob -> Signature , NTLMSSP_SIGNATURE , 8 ) ; //<S2SV> sec_blob -> MessageType = NtLmNegotiate ; //<S2SV> flags = NTLMSSP_NEGOTIATE_56 | NTLMSSP_REQUEST_TARGET | //<S2SV> NTLMSSP_NEGOTIATE_128 | NTLMSSP_NEGOTIATE_UNICODE | //<S2SV> NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC | //<S2SV> NTLMSSP_NEGOTIATE_SEAL ; //<S2SV> if ( ses -> server -> sign ) //<S2SV> flags |= NTLMSSP_NEGOTIATE_SIGN ; //<S2SV> if ( ! ses -> server -> session_estab || ses -> ntlmssp -> sesskey_per_smbsess ) //<S2SV> flags |= NTLMSSP_NEGOTIATE_KEY_XCH ; //<S2SV> sec_blob -> NegotiateFlags = cpu_to_le32 ( flags ) ; //<S2SV> sec_blob -> WorkstationName . BufferOffset = 0 ; //<S2SV> sec_blob -> WorkstationName . Length = 0 ; //<S2SV> sec_blob -> WorkstationName . MaximumLength = 0 ; //<S2SV> sec_blob -> DomainName . BufferOffset = 0 ; //<S2SV> sec_blob -> DomainName . Length = 0 ; //<S2SV> sec_blob -> DomainName . MaximumLength = 0 ; //<S2SV> } //<S2SV> 