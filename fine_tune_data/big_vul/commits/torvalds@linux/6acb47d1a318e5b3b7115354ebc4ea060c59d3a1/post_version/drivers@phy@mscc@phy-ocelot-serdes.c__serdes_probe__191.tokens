static int serdes_probe ( struct platform_device * pdev ) //<S2SV> { //<S2SV> struct phy_provider * provider ; //<S2SV> struct serdes_ctrl * ctrl ; //<S2SV> unsigned int i ; //<S2SV> int ret ; //<S2SV> ctrl = devm_kzalloc ( & pdev -> dev , sizeof ( * ctrl ) , GFP_KERNEL ) ; //<S2SV> if ( ! ctrl ) //<S2SV> return - ENOMEM ; //<S2SV> ctrl -> dev = & pdev -> dev ; //<S2SV> ctrl -> regs = syscon_node_to_regmap ( pdev -> dev . parent -> of_node ) ; //<S2SV> if ( IS_ERR ( ctrl -> regs ) ) //<S2SV> return PTR_ERR ( ctrl -> regs ) ; //<S2SV> for ( i = 0 ; i < SERDES_MAX ; i ++ ) { //<S2SV> ret = serdes_phy_create ( ctrl , i , & ctrl -> phys [ i ] ) ; //<S2SV> if ( ret ) //<S2SV> return ret ; //<S2SV> } //<S2SV> dev_set_drvdata ( & pdev -> dev , ctrl ) ; //<S2SV> provider = devm_of_phy_provider_register ( ctrl -> dev , //<S2SV> serdes_simple_xlate ) ; //<S2SV> return PTR_ERR_OR_ZERO ( provider ) ; //<S2SV> } //<S2SV> 