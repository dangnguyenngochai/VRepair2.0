int sanity_check_ckpt ( struct f2fs_sb_info * sbi ) //<S2SV> { //<S2SV> unsigned int total , fsmeta ; //<S2SV> struct f2fs_super_block * raw_super = F2FS_RAW_SUPER ( sbi ) ; //<S2SV> struct f2fs_checkpoint * ckpt = F2FS_CKPT ( sbi ) ; //<S2SV> unsigned int ovp_segments , reserved_segments ; //<S2SV> total = le32_to_cpu ( raw_super -> segment_count ) ; //<S2SV> fsmeta = le32_to_cpu ( raw_super -> segment_count_ckpt ) ; //<S2SV> fsmeta += le32_to_cpu ( raw_super -> segment_count_sit ) ; //<S2SV> fsmeta += le32_to_cpu ( raw_super -> segment_count_nat ) ; //<S2SV> fsmeta += le32_to_cpu ( ckpt -> rsvd_segment_count ) ; //<S2SV> fsmeta += le32_to_cpu ( raw_super -> segment_count_ssa ) ; //<S2SV> if ( unlikely ( fsmeta >= total ) ) //<S2SV> return 1 ; //<S2SV> ovp_segments = le32_to_cpu ( ckpt -> overprov_segment_count ) ; //<S2SV> reserved_segments = le32_to_cpu ( ckpt -> rsvd_segment_count ) ; //<S2SV> if ( unlikely ( fsmeta < F2FS_MIN_SEGMENTS || //<S2SV> ovp_segments == 0 || reserved_segments == 0 ) ) { //<S2SV> f2fs_msg ( sbi -> sb , KERN_ERR , //<S2SV> "Wrong<S2SV_blank>layout:<S2SV_blank>check<S2SV_blank>mkfs.f2fs<S2SV_blank>version" ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> if ( unlikely ( f2fs_cp_error ( sbi ) ) ) { //<S2SV> f2fs_msg ( sbi -> sb , KERN_ERR , "A<S2SV_blank>bug<S2SV_blank>case:<S2SV_blank>need<S2SV_blank>to<S2SV_blank>run<S2SV_blank>fsck" ) ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 