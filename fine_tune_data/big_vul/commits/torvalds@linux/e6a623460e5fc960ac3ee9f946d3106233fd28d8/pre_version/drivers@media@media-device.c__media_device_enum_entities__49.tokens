static long media_device_enum_entities ( struct media_device * mdev , //<S2SV> struct media_entity_desc __user * uent ) //<S2SV> { //<S2SV> struct media_entity * ent ; //<S2SV> struct media_entity_desc u_ent ; //<S2SV> if ( copy_from_user ( & u_ent . id , & uent -> id , sizeof ( u_ent . id ) ) ) //<S2SV> return - EFAULT ; //<S2SV> ent = find_entity ( mdev , u_ent . id ) ; //<S2SV> if ( ent == NULL ) //<S2SV> return - EINVAL ; //<S2SV> u_ent . id = ent -> id ; //<S2SV> if ( ent -> name ) { //<S2SV> strncpy ( u_ent . name , ent -> name , sizeof ( u_ent . name ) ) ; //<S2SV> u_ent . name [ sizeof ( u_ent . name ) - 1 ] = '\\0' ; //<S2SV> } else { //<S2SV> memset ( u_ent . name , 0 , sizeof ( u_ent . name ) ) ; //<S2SV> } //<S2SV> u_ent . type = ent -> type ; //<S2SV> u_ent . revision = ent -> revision ; //<S2SV> u_ent . flags = ent -> flags ; //<S2SV> u_ent . group_id = ent -> group_id ; //<S2SV> u_ent . pads = ent -> num_pads ; //<S2SV> u_ent . links = ent -> num_links - ent -> num_backlinks ; //<S2SV> memcpy ( & u_ent . raw , & ent -> info , sizeof ( ent -> info ) ) ; //<S2SV> if ( copy_to_user ( uent , & u_ent , sizeof ( u_ent ) ) ) //<S2SV> return - EFAULT ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 