static void mincore_pmd_range ( struct vm_area_struct * vma , pud_t * pud , //<S2SV> unsigned long addr , unsigned long end , //<S2SV> unsigned char * vec ) //<S2SV> { //<S2SV> unsigned long next ; //<S2SV> pmd_t * pmd ; //<S2SV> pmd = pmd_offset ( pud , addr ) ; //<S2SV> do { //<S2SV> next = pmd_addr_end ( addr , end ) ; //<S2SV> if ( pmd_trans_huge ( * pmd ) ) { //<S2SV> if ( mincore_huge_pmd ( vma , pmd , addr , next , vec ) ) { //<S2SV> vec += ( next - addr ) >> PAGE_SHIFT ; //<S2SV> continue ; //<S2SV> } //<S2SV> } //<S2SV> if ( pmd_none_or_trans_huge_or_clear_bad ( pmd ) ) //<S2SV> mincore_unmapped_range ( vma , addr , next , vec ) ; //<S2SV> else //<S2SV> mincore_pte_range ( vma , pmd , addr , next , vec ) ; //<S2SV> vec += ( next - addr ) >> PAGE_SHIFT ; //<S2SV> } while ( pmd ++ , addr = next , addr != end ) ; //<S2SV> } //<S2SV> 