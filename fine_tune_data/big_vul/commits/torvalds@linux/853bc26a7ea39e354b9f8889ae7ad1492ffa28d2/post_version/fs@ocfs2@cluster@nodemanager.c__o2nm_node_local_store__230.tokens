static ssize_t o2nm_node_local_store ( struct config_item * item , const char * page , //<S2SV> size_t count ) //<S2SV> { //<S2SV> struct o2nm_node * node = to_o2nm_node ( item ) ; //<S2SV> struct o2nm_cluster * cluster ; //<S2SV> unsigned long tmp ; //<S2SV> char * p = ( char * ) page ; //<S2SV> ssize_t ret ; //<S2SV> tmp = simple_strtoul ( p , & p , 0 ) ; //<S2SV> if ( ! p || ( * p && ( * p != '\\n' ) ) ) //<S2SV> return - EINVAL ; //<S2SV> tmp = ! ! tmp ; //<S2SV> if ( ! test_bit ( O2NM_NODE_ATTR_ADDRESS , & node -> nd_set_attributes ) || //<S2SV> ! test_bit ( O2NM_NODE_ATTR_NUM , & node -> nd_set_attributes ) || //<S2SV> ! test_bit ( O2NM_NODE_ATTR_PORT , & node -> nd_set_attributes ) ) //<S2SV> return - EINVAL ; //<S2SV> o2nm_lock_subsystem ( ) ; //<S2SV> cluster = to_o2nm_cluster_from_node ( node ) ; //<S2SV> if ( ! cluster ) { //<S2SV> ret = - EINVAL ; //<S2SV> goto out ; //<S2SV> } //<S2SV> if ( tmp && tmp == cluster -> cl_has_local && //<S2SV> cluster -> cl_local_node != node -> nd_num ) { //<S2SV> ret = - EBUSY ; //<S2SV> goto out ; //<S2SV> } //<S2SV> if ( tmp && ! cluster -> cl_has_local ) { //<S2SV> ret = o2net_start_listening ( node ) ; //<S2SV> if ( ret ) //<S2SV> goto out ; //<S2SV> } //<S2SV> if ( ! tmp && cluster -> cl_has_local && //<S2SV> cluster -> cl_local_node == node -> nd_num ) { //<S2SV> o2net_stop_listening ( node ) ; //<S2SV> cluster -> cl_local_node = O2NM_INVALID_NODE_NUM ; //<S2SV> } //<S2SV> node -> nd_local = tmp ; //<S2SV> if ( node -> nd_local ) { //<S2SV> cluster -> cl_has_local = tmp ; //<S2SV> cluster -> cl_local_node = node -> nd_num ; //<S2SV> } //<S2SV> ret = count ; //<S2SV> out : //<S2SV> o2nm_unlock_subsystem ( ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 