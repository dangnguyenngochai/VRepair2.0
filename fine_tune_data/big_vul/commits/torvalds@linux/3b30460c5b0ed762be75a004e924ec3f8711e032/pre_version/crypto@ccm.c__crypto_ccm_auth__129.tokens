static int crypto_ccm_auth ( struct aead_request * req , struct scatterlist * plain , //<S2SV> unsigned int cryptlen ) //<S2SV> { //<S2SV> struct crypto_ccm_req_priv_ctx * pctx = crypto_ccm_reqctx ( req ) ; //<S2SV> struct crypto_aead * aead = crypto_aead_reqtfm ( req ) ; //<S2SV> struct crypto_ccm_ctx * ctx = crypto_aead_ctx ( aead ) ; //<S2SV> AHASH_REQUEST_ON_STACK ( ahreq , ctx -> mac ) ; //<S2SV> unsigned int assoclen = req -> assoclen ; //<S2SV> struct scatterlist sg [ 3 ] ; //<S2SV> u8 odata [ 16 ] ; //<S2SV> u8 idata [ 16 ] ; //<S2SV> int ilen , err ; //<S2SV> err = format_input ( odata , req , cryptlen ) ; //<S2SV> if ( err ) //<S2SV> goto out ; //<S2SV> sg_init_table ( sg , 3 ) ; //<S2SV> sg_set_buf ( & sg [ 0 ] , odata , 16 ) ; //<S2SV> if ( assoclen ) { //<S2SV> ilen = format_adata ( idata , assoclen ) ; //<S2SV> sg_set_buf ( & sg [ 1 ] , idata , ilen ) ; //<S2SV> sg_chain ( sg , 3 , req -> src ) ; //<S2SV> } else { //<S2SV> ilen = 0 ; //<S2SV> sg_chain ( sg , 2 , req -> src ) ; //<S2SV> } //<S2SV> ahash_request_set_tfm ( ahreq , ctx -> mac ) ; //<S2SV> ahash_request_set_callback ( ahreq , pctx -> flags , NULL , NULL ) ; //<S2SV> ahash_request_set_crypt ( ahreq , sg , NULL , assoclen + ilen + 16 ) ; //<S2SV> err = crypto_ahash_init ( ahreq ) ; //<S2SV> if ( err ) //<S2SV> goto out ; //<S2SV> err = crypto_ahash_update ( ahreq ) ; //<S2SV> if ( err ) //<S2SV> goto out ; //<S2SV> ilen = 16 - ( assoclen + ilen ) % 16 ; //<S2SV> if ( ilen < 16 ) { //<S2SV> memset ( idata , 0 , ilen ) ; //<S2SV> sg_init_table ( sg , 2 ) ; //<S2SV> sg_set_buf ( & sg [ 0 ] , idata , ilen ) ; //<S2SV> if ( plain ) //<S2SV> sg_chain ( sg , 2 , plain ) ; //<S2SV> plain = sg ; //<S2SV> cryptlen += ilen ; //<S2SV> } //<S2SV> ahash_request_set_crypt ( ahreq , plain , pctx -> odata , cryptlen ) ; //<S2SV> err = crypto_ahash_finup ( ahreq ) ; //<S2SV> out : //<S2SV> return err ; //<S2SV> } //<S2SV> 