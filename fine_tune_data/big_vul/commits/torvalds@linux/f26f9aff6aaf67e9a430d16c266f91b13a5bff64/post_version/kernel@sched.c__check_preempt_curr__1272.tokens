static void check_preempt_curr ( struct rq * rq , struct task_struct * p , int flags ) //<S2SV> { //<S2SV> const struct sched_class * class ; //<S2SV> if ( p -> sched_class == rq -> curr -> sched_class ) { //<S2SV> rq -> curr -> sched_class -> check_preempt_curr ( rq , p , flags ) ; //<S2SV> } else { //<S2SV> for_each_class ( class ) { //<S2SV> if ( class == rq -> curr -> sched_class ) //<S2SV> break ; //<S2SV> if ( class == p -> sched_class ) { //<S2SV> resched_task ( rq -> curr ) ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> } //<S2SV> if ( rq -> curr -> se . on_rq && test_tsk_need_resched ( rq -> curr ) ) //<S2SV> rq -> skip_clock_update = 1 ; //<S2SV> } //<S2SV> 