static int iwl_process_add_sta_resp ( struct iwl_priv * priv , //<S2SV> struct iwl_addsta_cmd * addsta , //<S2SV> struct iwl_rx_packet * pkt ) //<S2SV> { //<S2SV> u8 sta_id = addsta -> sta . sta_id ; //<S2SV> unsigned long flags ; //<S2SV> int ret = - EIO ; //<S2SV> if ( pkt -> hdr . flags & IWL_CMD_FAILED_MSK ) { //<S2SV> IWL_ERR ( priv , "Bad<S2SV_blank>return<S2SV_blank>from<S2SV_blank>REPLY_ADD_STA<S2SV_blank>(0x%08X)\\n" , //<S2SV> pkt -> hdr . flags ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> IWL_DEBUG_INFO ( priv , "Processing<S2SV_blank>response<S2SV_blank>for<S2SV_blank>adding<S2SV_blank>station<S2SV_blank>%u\\n" , //<S2SV> sta_id ) ; //<S2SV> spin_lock_irqsave ( & priv -> shrd -> sta_lock , flags ) ; //<S2SV> switch ( pkt -> u . add_sta . status ) { //<S2SV> case ADD_STA_SUCCESS_MSK : //<S2SV> IWL_DEBUG_INFO ( priv , "REPLY_ADD_STA<S2SV_blank>PASSED\\n" ) ; //<S2SV> iwl_sta_ucode_activate ( priv , sta_id ) ; //<S2SV> ret = 0 ; //<S2SV> break ; //<S2SV> case ADD_STA_NO_ROOM_IN_TABLE : //<S2SV> IWL_ERR ( priv , "Adding<S2SV_blank>station<S2SV_blank>%d<S2SV_blank>failed,<S2SV_blank>no<S2SV_blank>room<S2SV_blank>in<S2SV_blank>table.\\n" , //<S2SV> sta_id ) ; //<S2SV> break ; //<S2SV> case ADD_STA_NO_BLOCK_ACK_RESOURCE : //<S2SV> IWL_ERR ( priv , "Adding<S2SV_blank>station<S2SV_blank>%d<S2SV_blank>failed,<S2SV_blank>no<S2SV_blank>block<S2SV_blank>ack<S2SV_blank>" //<S2SV> "resource.\\n" , sta_id ) ; //<S2SV> break ; //<S2SV> case ADD_STA_MODIFY_NON_EXIST_STA : //<S2SV> IWL_ERR ( priv , "Attempting<S2SV_blank>to<S2SV_blank>modify<S2SV_blank>non-existing<S2SV_blank>station<S2SV_blank>%d\\n" , //<S2SV> sta_id ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> IWL_DEBUG_ASSOC ( priv , "Received<S2SV_blank>REPLY_ADD_STA:(0x%08X)\\n" , //<S2SV> pkt -> u . add_sta . status ) ; //<S2SV> break ; //<S2SV> } //<S2SV> IWL_DEBUG_INFO ( priv , "%s<S2SV_blank>station<S2SV_blank>id<S2SV_blank>%u<S2SV_blank>addr<S2SV_blank>%pM\\n" , //<S2SV> priv -> stations [ sta_id ] . sta . mode == //<S2SV> STA_CONTROL_MODIFY_MSK ? "Modified" : "Added" , //<S2SV> sta_id , priv -> stations [ sta_id ] . sta . sta . addr ) ; //<S2SV> IWL_DEBUG_INFO ( priv , "%s<S2SV_blank>station<S2SV_blank>according<S2SV_blank>to<S2SV_blank>cmd<S2SV_blank>buffer<S2SV_blank>%pM\\n" , //<S2SV> priv -> stations [ sta_id ] . sta . mode == //<S2SV> STA_CONTROL_MODIFY_MSK ? "Modified" : "Added" , //<S2SV> addsta -> sta . addr ) ; //<S2SV> spin_unlock_irqrestore ( & priv -> shrd -> sta_lock , flags ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 