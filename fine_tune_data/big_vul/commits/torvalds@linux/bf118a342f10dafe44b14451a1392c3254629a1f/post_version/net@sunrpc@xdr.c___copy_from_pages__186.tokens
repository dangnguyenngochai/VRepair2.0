void //<S2SV> _copy_from_pages ( char * p , struct page * * pages , size_t pgbase , size_t len ) //<S2SV> { //<S2SV> struct page * * pgfrom ; //<S2SV> char * vfrom ; //<S2SV> size_t copy ; //<S2SV> pgfrom = pages + ( pgbase >> PAGE_CACHE_SHIFT ) ; //<S2SV> pgbase &= ~ PAGE_CACHE_MASK ; //<S2SV> do { //<S2SV> copy = PAGE_CACHE_SIZE - pgbase ; //<S2SV> if ( copy > len ) //<S2SV> copy = len ; //<S2SV> vfrom = kmap_atomic ( * pgfrom , KM_USER0 ) ; //<S2SV> memcpy ( p , vfrom + pgbase , copy ) ; //<S2SV> kunmap_atomic ( vfrom , KM_USER0 ) ; //<S2SV> pgbase += copy ; //<S2SV> if ( pgbase == PAGE_CACHE_SIZE ) { //<S2SV> pgbase = 0 ; //<S2SV> pgfrom ++ ; //<S2SV> } //<S2SV> p += copy ; //<S2SV> } while ( ( len -= copy ) != 0 ) ; //<S2SV> } //<S2SV> 