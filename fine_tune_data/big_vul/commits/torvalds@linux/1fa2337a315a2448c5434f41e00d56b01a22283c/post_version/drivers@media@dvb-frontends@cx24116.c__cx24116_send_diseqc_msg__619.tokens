static int cx24116_send_diseqc_msg ( struct dvb_frontend * fe , //<S2SV> struct dvb_diseqc_master_cmd * d ) //<S2SV> { //<S2SV> struct cx24116_state * state = fe -> demodulator_priv ; //<S2SV> int i , ret ; //<S2SV> if ( d -> msg_len > sizeof ( d -> msg ) ) //<S2SV> return - EINVAL ; //<S2SV> if ( debug ) { //<S2SV> printk ( KERN_INFO "cx24116:<S2SV_blank>%s(" , __func__ ) ; //<S2SV> for ( i = 0 ; i < d -> msg_len ; ) { //<S2SV> printk ( KERN_INFO "0x%02x" , d -> msg [ i ] ) ; //<S2SV> if ( ++ i < d -> msg_len ) //<S2SV> printk ( KERN_INFO ",<S2SV_blank>" ) ; //<S2SV> } //<S2SV> printk ( ")<S2SV_blank>toneburst=%d\\n" , toneburst ) ; //<S2SV> } //<S2SV> for ( i = 0 ; i < d -> msg_len ; i ++ ) //<S2SV> state -> dsec_cmd . args [ CX24116_DISEQC_MSGOFS + i ] = d -> msg [ i ] ; //<S2SV> state -> dsec_cmd . args [ CX24116_DISEQC_MSGLEN ] = d -> msg_len ; //<S2SV> state -> dsec_cmd . len = CX24116_DISEQC_MSGOFS + //<S2SV> state -> dsec_cmd . args [ CX24116_DISEQC_MSGLEN ] ; //<S2SV> if ( toneburst == CX24116_DISEQC_MESGCACHE ) //<S2SV> return 0 ; //<S2SV> else if ( toneburst == CX24116_DISEQC_TONEOFF ) //<S2SV> state -> dsec_cmd . args [ CX24116_DISEQC_BURST ] = 0 ; //<S2SV> else if ( toneburst == CX24116_DISEQC_TONECACHE ) { //<S2SV> if ( d -> msg_len >= 4 && d -> msg [ 2 ] == 0x38 ) //<S2SV> state -> dsec_cmd . args [ CX24116_DISEQC_BURST ] = //<S2SV> ( ( d -> msg [ 3 ] & 4 ) >> 2 ) ; //<S2SV> if ( debug ) //<S2SV> dprintk ( "%s<S2SV_blank>burst=%d\\n" , __func__ , //<S2SV> state -> dsec_cmd . args [ CX24116_DISEQC_BURST ] ) ; //<S2SV> } //<S2SV> ret = cx24116_wait_for_lnb ( fe ) ; //<S2SV> if ( ret != 0 ) //<S2SV> return ret ; //<S2SV> msleep ( 100 ) ; //<S2SV> ret = cx24116_cmd_execute ( fe , & state -> dsec_cmd ) ; //<S2SV> if ( ret != 0 ) //<S2SV> return ret ; //<S2SV> msleep ( ( state -> dsec_cmd . args [ CX24116_DISEQC_MSGLEN ] << 4 ) + //<S2SV> ( ( toneburst == CX24116_DISEQC_TONEOFF ) ? 30 : 60 ) ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 