static struct file * path_openat ( int dfd , struct filename * pathname , //<S2SV> struct nameidata * nd , const struct open_flags * op , int flags ) //<S2SV> { //<S2SV> struct file * file ; //<S2SV> struct path path ; //<S2SV> int opened = 0 ; //<S2SV> int error ; //<S2SV> file = get_empty_filp ( ) ; //<S2SV> if ( IS_ERR ( file ) ) //<S2SV> return file ; //<S2SV> file -> f_flags = op -> open_flag ; //<S2SV> if ( unlikely ( file -> f_flags & __O_TMPFILE ) ) { //<S2SV> error = do_tmpfile ( dfd , pathname , nd , flags , op , file , & opened ) ; //<S2SV> goto out ; //<S2SV> } //<S2SV> error = path_init ( dfd , pathname , flags , nd ) ; //<S2SV> if ( unlikely ( error ) ) //<S2SV> goto out ; //<S2SV> error = do_last ( nd , & path , file , op , & opened , pathname ) ; //<S2SV> while ( unlikely ( error > 0 ) ) { //<S2SV> struct path link = path ; //<S2SV> void * cookie ; //<S2SV> if ( ! ( nd -> flags & LOOKUP_FOLLOW ) ) { //<S2SV> path_put_conditional ( & path , nd ) ; //<S2SV> path_put ( & nd -> path ) ; //<S2SV> error = - ELOOP ; //<S2SV> break ; //<S2SV> } //<S2SV> error = may_follow_link ( & link , nd ) ; //<S2SV> if ( unlikely ( error ) ) //<S2SV> break ; //<S2SV> nd -> flags |= LOOKUP_PARENT ; //<S2SV> nd -> flags &= ~ ( LOOKUP_OPEN | LOOKUP_CREATE | LOOKUP_EXCL ) ; //<S2SV> error = follow_link ( & link , nd , & cookie ) ; //<S2SV> if ( unlikely ( error ) ) //<S2SV> break ; //<S2SV> error = do_last ( nd , & path , file , op , & opened , pathname ) ; //<S2SV> put_link ( nd , & link , cookie ) ; //<S2SV> } //<S2SV> out : //<S2SV> path_cleanup ( nd ) ; //<S2SV> if ( ! ( opened & FILE_OPENED ) ) { //<S2SV> BUG_ON ( ! error ) ; //<S2SV> put_filp ( file ) ; //<S2SV> } //<S2SV> if ( unlikely ( error ) ) { //<S2SV> if ( error == - EOPENSTALE ) { //<S2SV> if ( flags & LOOKUP_RCU ) //<S2SV> error = - ECHILD ; //<S2SV> else //<S2SV> error = - ESTALE ; //<S2SV> } //<S2SV> file = ERR_PTR ( error ) ; //<S2SV> } //<S2SV> return file ; //<S2SV> } //<S2SV> 