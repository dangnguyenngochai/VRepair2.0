static int tipc_nl_compat_link_dump ( struct tipc_nl_compat_msg * msg , //<S2SV> struct nlattr * * attrs ) //<S2SV> { //<S2SV> struct nlattr * link [ TIPC_NLA_LINK_MAX + 1 ] ; //<S2SV> struct tipc_link_info link_info ; //<S2SV> int err ; //<S2SV> if ( ! attrs [ TIPC_NLA_LINK ] ) //<S2SV> return - EINVAL ; //<S2SV> err = nla_parse_nested ( link , TIPC_NLA_LINK_MAX , attrs [ TIPC_NLA_LINK ] , //<S2SV> NULL ) ; //<S2SV> if ( err ) //<S2SV> return err ; //<S2SV> link_info . dest = nla_get_flag ( link [ TIPC_NLA_LINK_DEST ] ) ; //<S2SV> link_info . up = htonl ( nla_get_flag ( link [ TIPC_NLA_LINK_UP ] ) ) ; //<S2SV> nla_strlcpy ( link_info . str , nla_data ( link [ TIPC_NLA_LINK_NAME ] ) , //<S2SV> TIPC_MAX_LINK_NAME ) ; //<S2SV> return tipc_add_tlv ( msg -> rep , TIPC_TLV_LINK_INFO , //<S2SV> & link_info , sizeof ( link_info ) ) ; //<S2SV> } //<S2SV> 