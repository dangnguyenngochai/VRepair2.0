static ssize_t driver_override_store ( struct device * dev , //<S2SV> struct device_attribute * attr , //<S2SV> const char * buf , size_t count ) //<S2SV> { //<S2SV> struct platform_device * pdev = to_platform_device ( dev ) ; //<S2SV> char * driver_override , * old = pdev -> driver_override , * cp ; //<S2SV> if ( count > PATH_MAX ) //<S2SV> return - EINVAL ; //<S2SV> driver_override = kstrndup ( buf , count , GFP_KERNEL ) ; //<S2SV> if ( ! driver_override ) //<S2SV> return - ENOMEM ; //<S2SV> cp = strchr ( driver_override , '\\n' ) ; //<S2SV> if ( cp ) //<S2SV> * cp = '\\0' ; //<S2SV> if ( strlen ( driver_override ) ) { //<S2SV> pdev -> driver_override = driver_override ; //<S2SV> } else { //<S2SV> kfree ( driver_override ) ; //<S2SV> pdev -> driver_override = NULL ; //<S2SV> } //<S2SV> kfree ( old ) ; //<S2SV> return count ; //<S2SV> } //<S2SV> 