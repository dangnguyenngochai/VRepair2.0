static int asn1_find_indefinite_length ( const unsigned char * data , size_t datalen , //<S2SV> size_t * _dp , size_t * _len , //<S2SV> const char * * _errmsg ) //<S2SV> { //<S2SV> unsigned char tag , tmp ; //<S2SV> size_t dp = * _dp , len , n ; //<S2SV> int indef_level = 1 ; //<S2SV> next_tag : //<S2SV> if ( unlikely ( datalen - dp < 2 ) ) { //<S2SV> if ( datalen == dp ) //<S2SV> goto missing_eoc ; //<S2SV> goto data_overrun_error ; //<S2SV> } //<S2SV> tag = data [ dp ++ ] ; //<S2SV> if ( tag == ASN1_EOC ) { //<S2SV> if ( data [ dp ++ ] != 0 ) //<S2SV> goto invalid_eoc ; //<S2SV> if ( -- indef_level <= 0 ) { //<S2SV> * _len = dp - * _dp ; //<S2SV> * _dp = dp ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> goto next_tag ; //<S2SV> } //<S2SV> if ( unlikely ( ( tag & 0x1f ) == ASN1_LONG_TAG ) ) { //<S2SV> do { //<S2SV> if ( unlikely ( datalen - dp < 2 ) ) //<S2SV> goto data_overrun_error ; //<S2SV> tmp = data [ dp ++ ] ; //<S2SV> } while ( tmp & 0x80 ) ; //<S2SV> } //<S2SV> len = data [ dp ++ ] ; //<S2SV> if ( len <= 0x7f ) //<S2SV> goto check_length ; //<S2SV> if ( unlikely ( len == ASN1_INDEFINITE_LENGTH ) ) { //<S2SV> if ( unlikely ( ( tag & ASN1_CONS_BIT ) == ASN1_PRIM << 5 ) ) //<S2SV> goto indefinite_len_primitive ; //<S2SV> indef_level ++ ; //<S2SV> goto next_tag ; //<S2SV> } //<S2SV> n = len - 0x80 ; //<S2SV> if ( unlikely ( n > sizeof ( len ) - 1 ) ) //<S2SV> goto length_too_long ; //<S2SV> if ( unlikely ( n > datalen - dp ) ) //<S2SV> goto data_overrun_error ; //<S2SV> len = 0 ; //<S2SV> for ( ; n > 0 ; n -- ) { //<S2SV> len <<= 8 ; //<S2SV> len |= data [ dp ++ ] ; //<S2SV> } //<S2SV> check_length : //<S2SV> if ( len > datalen - dp ) //<S2SV> goto data_overrun_error ; //<S2SV> dp += len ; //<S2SV> goto next_tag ; //<S2SV> length_too_long : //<S2SV> * _errmsg = "Unsupported<S2SV_blank>length" ; //<S2SV> goto error ; //<S2SV> indefinite_len_primitive : //<S2SV> * _errmsg = "Indefinite<S2SV_blank>len<S2SV_blank>primitive<S2SV_blank>not<S2SV_blank>permitted" ; //<S2SV> goto error ; //<S2SV> invalid_eoc : //<S2SV> * _errmsg = "Invalid<S2SV_blank>length<S2SV_blank>EOC" ; //<S2SV> goto error ; //<S2SV> data_overrun_error : //<S2SV> * _errmsg = "Data<S2SV_blank>overrun<S2SV_blank>error" ; //<S2SV> goto error ; //<S2SV> missing_eoc : //<S2SV> * _errmsg = "Missing<S2SV_blank>EOC<S2SV_blank>in<S2SV_blank>indefinite<S2SV_blank>len<S2SV_blank>cons" ; //<S2SV> error : //<S2SV> * _dp = dp ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> 