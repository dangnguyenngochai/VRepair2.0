static int do_setxattr ( struct btrfs_trans_handle * trans , //<S2SV> struct inode * inode , const char * name , //<S2SV> const void * value , size_t size , int flags ) //<S2SV> { //<S2SV> struct btrfs_dir_item * di ; //<S2SV> struct btrfs_root * root = BTRFS_I ( inode ) -> root ; //<S2SV> struct btrfs_path * path ; //<S2SV> size_t name_len = strlen ( name ) ; //<S2SV> int ret = 0 ; //<S2SV> if ( name_len + size > BTRFS_MAX_XATTR_SIZE ( root ) ) //<S2SV> return - ENOSPC ; //<S2SV> path = btrfs_alloc_path ( ) ; //<S2SV> if ( ! path ) //<S2SV> return - ENOMEM ; //<S2SV> if ( flags & XATTR_REPLACE ) { //<S2SV> di = btrfs_lookup_xattr ( trans , root , path , btrfs_ino ( inode ) , name , //<S2SV> name_len , - 1 ) ; //<S2SV> if ( IS_ERR ( di ) ) { //<S2SV> ret = PTR_ERR ( di ) ; //<S2SV> goto out ; //<S2SV> } else if ( ! di ) { //<S2SV> ret = - ENODATA ; //<S2SV> goto out ; //<S2SV> } //<S2SV> ret = btrfs_delete_one_dir_name ( trans , root , path , di ) ; //<S2SV> if ( ret ) //<S2SV> goto out ; //<S2SV> btrfs_release_path ( path ) ; //<S2SV> if ( ! value ) //<S2SV> goto out ; //<S2SV> } else { //<S2SV> di = btrfs_lookup_xattr ( NULL , root , path , btrfs_ino ( inode ) , //<S2SV> name , name_len , 0 ) ; //<S2SV> if ( IS_ERR ( di ) ) { //<S2SV> ret = PTR_ERR ( di ) ; //<S2SV> goto out ; //<S2SV> } //<S2SV> if ( ! di && ! value ) //<S2SV> goto out ; //<S2SV> btrfs_release_path ( path ) ; //<S2SV> } //<S2SV> again : //<S2SV> ret = btrfs_insert_xattr_item ( trans , root , path , btrfs_ino ( inode ) , //<S2SV> name , name_len , value , size ) ; //<S2SV> if ( ret == - EOVERFLOW ) //<S2SV> ret = - EEXIST ; //<S2SV> if ( ret == - EEXIST ) { //<S2SV> if ( flags & XATTR_CREATE ) //<S2SV> goto out ; //<S2SV> btrfs_release_path ( path ) ; //<S2SV> di = btrfs_lookup_xattr ( trans , root , path , btrfs_ino ( inode ) , //<S2SV> name , name_len , - 1 ) ; //<S2SV> if ( IS_ERR ( di ) ) { //<S2SV> ret = PTR_ERR ( di ) ; //<S2SV> goto out ; //<S2SV> } else if ( ! di ) { //<S2SV> btrfs_release_path ( path ) ; //<S2SV> goto again ; //<S2SV> } //<S2SV> ret = btrfs_delete_one_dir_name ( trans , root , path , di ) ; //<S2SV> if ( ret ) //<S2SV> goto out ; //<S2SV> if ( value ) { //<S2SV> btrfs_release_path ( path ) ; //<S2SV> goto again ; //<S2SV> } //<S2SV> } //<S2SV> out : //<S2SV> btrfs_free_path ( path ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 