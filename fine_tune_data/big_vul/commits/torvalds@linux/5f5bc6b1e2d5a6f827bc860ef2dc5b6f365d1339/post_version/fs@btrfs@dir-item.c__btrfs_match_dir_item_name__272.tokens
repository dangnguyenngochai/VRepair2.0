struct btrfs_dir_item * btrfs_match_dir_item_name ( struct btrfs_root * root , //<S2SV> struct btrfs_path * path , //<S2SV> const char * name , int name_len ) //<S2SV> { //<S2SV> struct btrfs_dir_item * dir_item ; //<S2SV> unsigned long name_ptr ; //<S2SV> u32 total_len ; //<S2SV> u32 cur = 0 ; //<S2SV> u32 this_len ; //<S2SV> struct extent_buffer * leaf ; //<S2SV> leaf = path -> nodes [ 0 ] ; //<S2SV> dir_item = btrfs_item_ptr ( leaf , path -> slots [ 0 ] , struct btrfs_dir_item ) ; //<S2SV> if ( verify_dir_item ( root , leaf , dir_item ) ) //<S2SV> return NULL ; //<S2SV> total_len = btrfs_item_size_nr ( leaf , path -> slots [ 0 ] ) ; //<S2SV> while ( cur < total_len ) { //<S2SV> this_len = sizeof ( * dir_item ) + //<S2SV> btrfs_dir_name_len ( leaf , dir_item ) + //<S2SV> btrfs_dir_data_len ( leaf , dir_item ) ; //<S2SV> name_ptr = ( unsigned long ) ( dir_item + 1 ) ; //<S2SV> if ( btrfs_dir_name_len ( leaf , dir_item ) == name_len && //<S2SV> memcmp_extent_buffer ( leaf , name , name_ptr , name_len ) == 0 ) //<S2SV> return dir_item ; //<S2SV> cur += this_len ; //<S2SV> dir_item = ( struct btrfs_dir_item * ) ( ( char * ) dir_item + //<S2SV> this_len ) ; //<S2SV> } //<S2SV> return NULL ; //<S2SV> } //<S2SV> 