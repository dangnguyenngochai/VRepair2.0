static int hash_accept ( struct socket * sock , struct socket * newsock , int flags ) //<S2SV> { //<S2SV> struct sock * sk = sock -> sk ; //<S2SV> struct alg_sock * ask = alg_sk ( sk ) ; //<S2SV> struct hash_ctx * ctx = ask -> private ; //<S2SV> struct ahash_request * req = & ctx -> req ; //<S2SV> char state [ crypto_ahash_statesize ( crypto_ahash_reqtfm ( req ) ) ] ; //<S2SV> struct sock * sk2 ; //<S2SV> struct alg_sock * ask2 ; //<S2SV> struct hash_ctx * ctx2 ; //<S2SV> int err ; //<S2SV> err = crypto_ahash_export ( req , state ) ; //<S2SV> if ( err ) //<S2SV> return err ; //<S2SV> err = af_alg_accept ( ask -> parent , newsock ) ; //<S2SV> if ( err ) //<S2SV> return err ; //<S2SV> sk2 = newsock -> sk ; //<S2SV> ask2 = alg_sk ( sk2 ) ; //<S2SV> ctx2 = ask2 -> private ; //<S2SV> ctx2 -> more = 1 ; //<S2SV> err = crypto_ahash_import ( & ctx2 -> req , state ) ; //<S2SV> if ( err ) { //<S2SV> sock_orphan ( sk2 ) ; //<S2SV> sock_put ( sk2 ) ; //<S2SV> } //<S2SV> return err ; //<S2SV> } //<S2SV> 