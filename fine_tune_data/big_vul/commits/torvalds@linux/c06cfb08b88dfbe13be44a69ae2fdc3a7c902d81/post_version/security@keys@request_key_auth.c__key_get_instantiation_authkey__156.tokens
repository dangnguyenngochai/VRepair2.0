struct key * key_get_instantiation_authkey ( key_serial_t target_id ) //<S2SV> { //<S2SV> char description [ 16 ] ; //<S2SV> struct keyring_search_context ctx = { //<S2SV> . index_key . type = & key_type_request_key_auth , //<S2SV> . index_key . description = description , //<S2SV> . cred = current_cred ( ) , //<S2SV> . match_data . cmp = key_default_cmp , //<S2SV> . match_data . raw_data = description , //<S2SV> . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT , //<S2SV> } ; //<S2SV> struct key * authkey ; //<S2SV> key_ref_t authkey_ref ; //<S2SV> sprintf ( description , "%x" , target_id ) ; //<S2SV> authkey_ref = search_process_keyrings ( & ctx ) ; //<S2SV> if ( IS_ERR ( authkey_ref ) ) { //<S2SV> authkey = ERR_CAST ( authkey_ref ) ; //<S2SV> if ( authkey == ERR_PTR ( - EAGAIN ) ) //<S2SV> authkey = ERR_PTR ( - ENOKEY ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> authkey = key_ref_to_ptr ( authkey_ref ) ; //<S2SV> if ( test_bit ( KEY_FLAG_REVOKED , & authkey -> flags ) ) { //<S2SV> key_put ( authkey ) ; //<S2SV> authkey = ERR_PTR ( - EKEYREVOKED ) ; //<S2SV> } //<S2SV> error : //<S2SV> return authkey ; //<S2SV> } //<S2SV> 