static int set_register ( pegasus_t * pegasus , __u16 indx , __u8 data ) //<S2SV> { //<S2SV> int ret ; //<S2SV> ret = usb_control_msg ( pegasus -> usb , usb_sndctrlpipe ( pegasus -> usb , 0 ) , //<S2SV> PEGASUS_REQ_SET_REG , PEGASUS_REQT_WRITE , data , //<S2SV> indx , & data , 1 , 1000 ) ; //<S2SV> if ( ret < 0 ) //<S2SV> netif_dbg ( pegasus , drv , pegasus -> net , //<S2SV> "%s<S2SV_blank>returned<S2SV_blank>%d\\n" , __func__ , ret ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 