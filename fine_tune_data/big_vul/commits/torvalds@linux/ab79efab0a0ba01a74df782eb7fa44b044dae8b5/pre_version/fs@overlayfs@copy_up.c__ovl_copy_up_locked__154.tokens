static int ovl_copy_up_locked ( struct dentry * workdir , struct dentry * upperdir , //<S2SV> struct dentry * dentry , struct path * lowerpath , //<S2SV> struct kstat * stat , struct iattr * attr , //<S2SV> const char * link ) //<S2SV> { //<S2SV> struct inode * wdir = workdir -> d_inode ; //<S2SV> struct inode * udir = upperdir -> d_inode ; //<S2SV> struct dentry * newdentry = NULL ; //<S2SV> struct dentry * upper = NULL ; //<S2SV> umode_t mode = stat -> mode ; //<S2SV> int err ; //<S2SV> newdentry = ovl_lookup_temp ( workdir , dentry ) ; //<S2SV> err = PTR_ERR ( newdentry ) ; //<S2SV> if ( IS_ERR ( newdentry ) ) //<S2SV> goto out ; //<S2SV> upper = lookup_one_len ( dentry -> d_name . name , upperdir , //<S2SV> dentry -> d_name . len ) ; //<S2SV> err = PTR_ERR ( upper ) ; //<S2SV> if ( IS_ERR ( upper ) ) //<S2SV> goto out1 ; //<S2SV> stat -> mode &= S_IFMT ; //<S2SV> err = ovl_create_real ( wdir , newdentry , stat , link , NULL , true ) ; //<S2SV> stat -> mode = mode ; //<S2SV> if ( err ) //<S2SV> goto out2 ; //<S2SV> if ( S_ISREG ( stat -> mode ) ) { //<S2SV> struct path upperpath ; //<S2SV> ovl_path_upper ( dentry , & upperpath ) ; //<S2SV> BUG_ON ( upperpath . dentry != NULL ) ; //<S2SV> upperpath . dentry = newdentry ; //<S2SV> err = ovl_copy_up_data ( lowerpath , & upperpath , stat -> size ) ; //<S2SV> if ( err ) //<S2SV> goto out_cleanup ; //<S2SV> } //<S2SV> err = ovl_copy_xattr ( lowerpath -> dentry , newdentry ) ; //<S2SV> if ( err ) //<S2SV> goto out_cleanup ; //<S2SV> mutex_lock ( & newdentry -> d_inode -> i_mutex ) ; //<S2SV> err = ovl_set_attr ( newdentry , stat ) ; //<S2SV> if ( ! err && attr ) //<S2SV> err = notify_change ( newdentry , attr , NULL ) ; //<S2SV> mutex_unlock ( & newdentry -> d_inode -> i_mutex ) ; //<S2SV> if ( err ) //<S2SV> goto out_cleanup ; //<S2SV> err = ovl_do_rename ( wdir , newdentry , udir , upper , 0 ) ; //<S2SV> if ( err ) //<S2SV> goto out_cleanup ; //<S2SV> ovl_dentry_update ( dentry , newdentry ) ; //<S2SV> newdentry = NULL ; //<S2SV> if ( ! S_ISDIR ( stat -> mode ) ) //<S2SV> ovl_dentry_set_opaque ( dentry , true ) ; //<S2SV> out2 : //<S2SV> dput ( upper ) ; //<S2SV> out1 : //<S2SV> dput ( newdentry ) ; //<S2SV> out : //<S2SV> return err ; //<S2SV> out_cleanup : //<S2SV> ovl_cleanup ( wdir , newdentry ) ; //<S2SV> goto out ; //<S2SV> } //<S2SV> 