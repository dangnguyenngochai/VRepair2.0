static ssize_t yurex_read ( struct file * file , char __user * buffer , size_t count , //<S2SV> loff_t * ppos ) //<S2SV> { //<S2SV> struct usb_yurex * dev ; //<S2SV> int len = 0 ; //<S2SV> char in_buffer [ 20 ] ; //<S2SV> unsigned long flags ; //<S2SV> dev = file -> private_data ; //<S2SV> mutex_lock ( & dev -> io_mutex ) ; //<S2SV> if ( ! dev -> interface ) { //<S2SV> mutex_unlock ( & dev -> io_mutex ) ; //<S2SV> return - ENODEV ; //<S2SV> } //<S2SV> spin_lock_irqsave ( & dev -> lock , flags ) ; //<S2SV> len = snprintf ( in_buffer , 20 , "%lld\\n" , dev -> bbu ) ; //<S2SV> spin_unlock_irqrestore ( & dev -> lock , flags ) ; //<S2SV> mutex_unlock ( & dev -> io_mutex ) ; //<S2SV> return simple_read_from_buffer ( buffer , count , ppos , in_buffer , len ) ; //<S2SV> } //<S2SV> 