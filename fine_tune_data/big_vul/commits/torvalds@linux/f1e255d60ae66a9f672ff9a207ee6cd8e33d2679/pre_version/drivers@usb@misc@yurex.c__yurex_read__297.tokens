static ssize_t yurex_read ( struct file * file , char __user * buffer , size_t count , //<S2SV> loff_t * ppos ) //<S2SV> { //<S2SV> struct usb_yurex * dev ; //<S2SV> int retval = 0 ; //<S2SV> int bytes_read = 0 ; //<S2SV> char in_buffer [ 20 ] ; //<S2SV> unsigned long flags ; //<S2SV> dev = file -> private_data ; //<S2SV> mutex_lock ( & dev -> io_mutex ) ; //<S2SV> if ( ! dev -> interface ) { //<S2SV> retval = - ENODEV ; //<S2SV> goto exit ; //<S2SV> } //<S2SV> spin_lock_irqsave ( & dev -> lock , flags ) ; //<S2SV> bytes_read = snprintf ( in_buffer , 20 , "%lld\\n" , dev -> bbu ) ; //<S2SV> spin_unlock_irqrestore ( & dev -> lock , flags ) ; //<S2SV> if ( * ppos < bytes_read ) { //<S2SV> if ( copy_to_user ( buffer , in_buffer + * ppos , bytes_read - * ppos ) ) //<S2SV> retval = - EFAULT ; //<S2SV> else { //<S2SV> retval = bytes_read - * ppos ; //<S2SV> * ppos += bytes_read ; //<S2SV> } //<S2SV> } //<S2SV> exit : //<S2SV> mutex_unlock ( & dev -> io_mutex ) ; //<S2SV> return retval ; //<S2SV> } //<S2SV> 