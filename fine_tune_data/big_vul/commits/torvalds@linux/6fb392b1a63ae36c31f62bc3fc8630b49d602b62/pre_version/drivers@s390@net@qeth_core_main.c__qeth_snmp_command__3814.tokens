int qeth_snmp_command ( struct qeth_card * card , char __user * udata ) //<S2SV> { //<S2SV> struct qeth_cmd_buffer * iob ; //<S2SV> struct qeth_ipa_cmd * cmd ; //<S2SV> struct qeth_snmp_ureq * ureq ; //<S2SV> int req_len ; //<S2SV> struct qeth_arp_query_info qinfo = { 0 , } ; //<S2SV> int rc = 0 ; //<S2SV> QETH_CARD_TEXT ( card , 3 , "snmpcmd" ) ; //<S2SV> if ( card -> info . guestlan ) //<S2SV> return - EOPNOTSUPP ; //<S2SV> if ( ( ! qeth_adp_supported ( card , IPA_SETADP_SET_SNMP_CONTROL ) ) && //<S2SV> ( ! card -> options . layer2 ) ) { //<S2SV> return - EOPNOTSUPP ; //<S2SV> } //<S2SV> if ( copy_from_user ( & req_len , udata + sizeof ( int ) , sizeof ( int ) ) ) //<S2SV> return - EFAULT ; //<S2SV> ureq = memdup_user ( udata , req_len + sizeof ( struct qeth_snmp_ureq_hdr ) ) ; //<S2SV> if ( IS_ERR ( ureq ) ) { //<S2SV> QETH_CARD_TEXT ( card , 2 , "snmpnome" ) ; //<S2SV> return PTR_ERR ( ureq ) ; //<S2SV> } //<S2SV> qinfo . udata_len = ureq -> hdr . data_len ; //<S2SV> qinfo . udata = kzalloc ( qinfo . udata_len , GFP_KERNEL ) ; //<S2SV> if ( ! qinfo . udata ) { //<S2SV> kfree ( ureq ) ; //<S2SV> return - ENOMEM ; //<S2SV> } //<S2SV> qinfo . udata_offset = sizeof ( struct qeth_snmp_ureq_hdr ) ; //<S2SV> iob = qeth_get_adapter_cmd ( card , IPA_SETADP_SET_SNMP_CONTROL , //<S2SV> QETH_SNMP_SETADP_CMDLENGTH + req_len ) ; //<S2SV> cmd = ( struct qeth_ipa_cmd * ) ( iob -> data + IPA_PDU_HEADER_SIZE ) ; //<S2SV> memcpy ( & cmd -> data . setadapterparms . data . snmp , & ureq -> cmd , req_len ) ; //<S2SV> rc = qeth_send_ipa_snmp_cmd ( card , iob , QETH_SETADP_BASE_LEN + req_len , //<S2SV> qeth_snmp_command_cb , ( void * ) & qinfo ) ; //<S2SV> if ( rc ) //<S2SV> QETH_DBF_MESSAGE ( 2 , "SNMP<S2SV_blank>command<S2SV_blank>failed<S2SV_blank>on<S2SV_blank>%s:<S2SV_blank>(0x%x)\\n" , //<S2SV> QETH_CARD_IFNAME ( card ) , rc ) ; //<S2SV> else { //<S2SV> if ( copy_to_user ( udata , qinfo . udata , qinfo . udata_len ) ) //<S2SV> rc = - EFAULT ; //<S2SV> } //<S2SV> kfree ( ureq ) ; //<S2SV> kfree ( qinfo . udata ) ; //<S2SV> return rc ; //<S2SV> } //<S2SV> 