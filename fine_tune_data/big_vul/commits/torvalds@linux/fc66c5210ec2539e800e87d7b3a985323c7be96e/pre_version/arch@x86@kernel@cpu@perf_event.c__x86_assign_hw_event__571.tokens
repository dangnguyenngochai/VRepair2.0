static inline void x86_assign_hw_event ( struct perf_event * event , //<S2SV> struct cpu_hw_events * cpuc , int i ) //<S2SV> { //<S2SV> struct hw_perf_event * hwc = & event -> hw ; //<S2SV> hwc -> idx = cpuc -> assign [ i ] ; //<S2SV> hwc -> last_cpu = smp_processor_id ( ) ; //<S2SV> hwc -> last_tag = ++ cpuc -> tags [ i ] ; //<S2SV> if ( hwc -> idx == X86_PMC_IDX_FIXED_BTS ) { //<S2SV> hwc -> config_base = 0 ; //<S2SV> hwc -> event_base = 0 ; //<S2SV> } else if ( hwc -> idx >= X86_PMC_IDX_FIXED ) { //<S2SV> hwc -> config_base = MSR_ARCH_PERFMON_FIXED_CTR_CTRL ; //<S2SV> hwc -> event_base = MSR_ARCH_PERFMON_FIXED_CTR0 ; //<S2SV> } else { //<S2SV> hwc -> config_base = x86_pmu_config_addr ( hwc -> idx ) ; //<S2SV> hwc -> event_base = x86_pmu_event_addr ( hwc -> idx ) ; //<S2SV> } //<S2SV> } //<S2SV> 