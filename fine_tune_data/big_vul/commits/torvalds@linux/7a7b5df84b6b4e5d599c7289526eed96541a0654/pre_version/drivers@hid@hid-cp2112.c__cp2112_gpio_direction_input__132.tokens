static int cp2112_gpio_direction_input ( struct gpio_chip * chip , unsigned offset ) //<S2SV> { //<S2SV> struct cp2112_device * dev = gpiochip_get_data ( chip ) ; //<S2SV> struct hid_device * hdev = dev -> hdev ; //<S2SV> u8 * buf = dev -> in_out_buffer ; //<S2SV> unsigned long flags ; //<S2SV> int ret ; //<S2SV> spin_lock_irqsave ( & dev -> lock , flags ) ; //<S2SV> ret = hid_hw_raw_request ( hdev , CP2112_GPIO_CONFIG , buf , //<S2SV> CP2112_GPIO_CONFIG_LENGTH , HID_FEATURE_REPORT , //<S2SV> HID_REQ_GET_REPORT ) ; //<S2SV> if ( ret != CP2112_GPIO_CONFIG_LENGTH ) { //<S2SV> hid_err ( hdev , "error<S2SV_blank>requesting<S2SV_blank>GPIO<S2SV_blank>config:<S2SV_blank>%d\\n" , ret ) ; //<S2SV> goto exit ; //<S2SV> } //<S2SV> buf [ 1 ] &= ~ ( 1 << offset ) ; //<S2SV> buf [ 2 ] = gpio_push_pull ; //<S2SV> ret = hid_hw_raw_request ( hdev , CP2112_GPIO_CONFIG , buf , //<S2SV> CP2112_GPIO_CONFIG_LENGTH , HID_FEATURE_REPORT , //<S2SV> HID_REQ_SET_REPORT ) ; //<S2SV> if ( ret < 0 ) { //<S2SV> hid_err ( hdev , "error<S2SV_blank>setting<S2SV_blank>GPIO<S2SV_blank>config:<S2SV_blank>%d\\n" , ret ) ; //<S2SV> goto exit ; //<S2SV> } //<S2SV> ret = 0 ; //<S2SV> exit : //<S2SV> spin_unlock_irqrestore ( & dev -> lock , flags ) ; //<S2SV> return ret <= 0 ? ret : - EIO ; //<S2SV> } //<S2SV> 