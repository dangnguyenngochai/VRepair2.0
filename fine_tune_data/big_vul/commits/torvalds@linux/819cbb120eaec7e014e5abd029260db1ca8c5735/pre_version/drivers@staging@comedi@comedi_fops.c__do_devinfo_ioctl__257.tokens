static int do_devinfo_ioctl ( struct comedi_device * dev , //<S2SV> struct comedi_devinfo __user * arg , //<S2SV> struct file * file ) //<S2SV> { //<S2SV> struct comedi_devinfo devinfo ; //<S2SV> const unsigned minor = iminor ( file -> f_dentry -> d_inode ) ; //<S2SV> struct comedi_device_file_info * dev_file_info = //<S2SV> comedi_get_device_file_info ( minor ) ; //<S2SV> struct comedi_subdevice * read_subdev = //<S2SV> comedi_get_read_subdevice ( dev_file_info ) ; //<S2SV> struct comedi_subdevice * write_subdev = //<S2SV> comedi_get_write_subdevice ( dev_file_info ) ; //<S2SV> memset ( & devinfo , 0 , sizeof ( devinfo ) ) ; //<S2SV> devinfo . version_code = COMEDI_VERSION_CODE ; //<S2SV> devinfo . n_subdevs = dev -> n_subdevices ; //<S2SV> memcpy ( devinfo . driver_name , dev -> driver -> driver_name , COMEDI_NAMELEN ) ; //<S2SV> memcpy ( devinfo . board_name , dev -> board_name , COMEDI_NAMELEN ) ; //<S2SV> if ( read_subdev ) //<S2SV> devinfo . read_subdevice = read_subdev - dev -> subdevices ; //<S2SV> else //<S2SV> devinfo . read_subdevice = - 1 ; //<S2SV> if ( write_subdev ) //<S2SV> devinfo . write_subdevice = write_subdev - dev -> subdevices ; //<S2SV> else //<S2SV> devinfo . write_subdevice = - 1 ; //<S2SV> if ( copy_to_user ( arg , & devinfo , sizeof ( struct comedi_devinfo ) ) ) //<S2SV> return - EFAULT ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 