int inet6_csk_xmit ( struct sock * sk , struct sk_buff * skb , struct flowi * fl_unused ) //<S2SV> { //<S2SV> struct ipv6_pinfo * np = inet6_sk ( sk ) ; //<S2SV> struct flowi6 fl6 ; //<S2SV> struct dst_entry * dst ; //<S2SV> int res ; //<S2SV> dst = inet6_csk_route_socket ( sk , & fl6 ) ; //<S2SV> if ( IS_ERR ( dst ) ) { //<S2SV> sk -> sk_err_soft = - PTR_ERR ( dst ) ; //<S2SV> sk -> sk_route_caps = 0 ; //<S2SV> kfree_skb ( skb ) ; //<S2SV> return PTR_ERR ( dst ) ; //<S2SV> } //<S2SV> rcu_read_lock ( ) ; //<S2SV> skb_dst_set_noref ( skb , dst ) ; //<S2SV> fl6 . daddr = sk -> sk_v6_daddr ; //<S2SV> res = ip6_xmit ( sk , skb , & fl6 , rcu_dereference ( np -> opt ) , //<S2SV> np -> tclass ) ; //<S2SV> rcu_read_unlock ( ) ; //<S2SV> return res ; //<S2SV> } //<S2SV> 