static void lo_release ( struct gendisk * disk , fmode_t mode ) //<S2SV> { //<S2SV> struct loop_device * lo = disk -> private_data ; //<S2SV> int err ; //<S2SV> if ( atomic_dec_return ( & lo -> lo_refcnt ) ) //<S2SV> return ; //<S2SV> mutex_lock ( & lo -> lo_ctl_mutex ) ; //<S2SV> if ( lo -> lo_flags & LO_FLAGS_AUTOCLEAR ) { //<S2SV> err = loop_clr_fd ( lo ) ; //<S2SV> if ( ! err ) //<S2SV> return ; //<S2SV> } else if ( lo -> lo_state == Lo_bound ) { //<S2SV> blk_mq_freeze_queue ( lo -> lo_queue ) ; //<S2SV> blk_mq_unfreeze_queue ( lo -> lo_queue ) ; //<S2SV> } //<S2SV> mutex_unlock ( & lo -> lo_ctl_mutex ) ; //<S2SV> } //<S2SV> 