static int netbk_count_requests ( struct xenvif * vif , //<S2SV> struct xen_netif_tx_request * first , //<S2SV> struct xen_netif_tx_request * txp , //<S2SV> int work_to_do ) //<S2SV> { //<S2SV> RING_IDX cons = vif -> tx . req_cons ; //<S2SV> int frags = 0 ; //<S2SV> if ( ! ( first -> flags & XEN_NETTXF_more_data ) ) //<S2SV> return 0 ; //<S2SV> do { //<S2SV> if ( frags >= work_to_do ) { //<S2SV> netdev_err ( vif -> dev , "Need<S2SV_blank>more<S2SV_blank>frags\\n" ) ; //<S2SV> netbk_fatal_tx_err ( vif ) ; //<S2SV> return - frags ; //<S2SV> } //<S2SV> if ( unlikely ( frags >= MAX_SKB_FRAGS ) ) { //<S2SV> netdev_err ( vif -> dev , "Too<S2SV_blank>many<S2SV_blank>frags\\n" ) ; //<S2SV> netbk_fatal_tx_err ( vif ) ; //<S2SV> return - frags ; //<S2SV> } //<S2SV> memcpy ( txp , RING_GET_REQUEST ( & vif -> tx , cons + frags ) , //<S2SV> sizeof ( * txp ) ) ; //<S2SV> if ( txp -> size > first -> size ) { //<S2SV> netdev_err ( vif -> dev , "Frag<S2SV_blank>is<S2SV_blank>bigger<S2SV_blank>than<S2SV_blank>frame.\\n" ) ; //<S2SV> netbk_fatal_tx_err ( vif ) ; //<S2SV> return - frags ; //<S2SV> } //<S2SV> first -> size -= txp -> size ; //<S2SV> frags ++ ; //<S2SV> if ( unlikely ( ( txp -> offset + txp -> size ) > PAGE_SIZE ) ) { //<S2SV> netdev_err ( vif -> dev , "txp->offset:<S2SV_blank>%x,<S2SV_blank>size:<S2SV_blank>%u\\n" , //<S2SV> txp -> offset , txp -> size ) ; //<S2SV> netbk_fatal_tx_err ( vif ) ; //<S2SV> return - frags ; //<S2SV> } //<S2SV> } while ( ( txp ++ ) -> flags & XEN_NETTXF_more_data ) ; //<S2SV> return frags ; //<S2SV> } //<S2SV> 