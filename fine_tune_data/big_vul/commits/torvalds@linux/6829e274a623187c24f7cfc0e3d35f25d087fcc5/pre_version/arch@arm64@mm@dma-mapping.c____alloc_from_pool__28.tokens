static void * __alloc_from_pool ( size_t size , struct page * * ret_page , gfp_t flags ) //<S2SV> { //<S2SV> unsigned long val ; //<S2SV> void * ptr = NULL ; //<S2SV> if ( ! atomic_pool ) { //<S2SV> WARN ( 1 , "coherent<S2SV_blank>pool<S2SV_blank>not<S2SV_blank>initialised!\\n" ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> val = gen_pool_alloc ( atomic_pool , size ) ; //<S2SV> if ( val ) { //<S2SV> phys_addr_t phys = gen_pool_virt_to_phys ( atomic_pool , val ) ; //<S2SV> * ret_page = phys_to_page ( phys ) ; //<S2SV> ptr = ( void * ) val ; //<S2SV> if ( flags & __GFP_ZERO ) //<S2SV> memset ( ptr , 0 , size ) ; //<S2SV> } //<S2SV> return ptr ; //<S2SV> } //<S2SV> 