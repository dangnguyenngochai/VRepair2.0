SYSCALL_DEFINE5 ( osf_getsysinfo , unsigned long , op , void __user * , buffer , //<S2SV> unsigned long , nbytes , int __user * , start , void __user * , arg ) //<S2SV> { //<S2SV> unsigned long w ; //<S2SV> struct percpu_struct * cpu ; //<S2SV> switch ( op ) { //<S2SV> case GSI_IEEE_FP_CONTROL : //<S2SV> w = current_thread_info ( ) -> ieee_state & IEEE_SW_MASK ; //<S2SV> w = swcr_update_status ( w , rdfpcr ( ) ) ; //<S2SV> if ( put_user ( w , ( unsigned long __user * ) buffer ) ) //<S2SV> return - EFAULT ; //<S2SV> return 0 ; //<S2SV> case GSI_IEEE_STATE_AT_SIGNAL : //<S2SV> break ; //<S2SV> case GSI_UACPROC : //<S2SV> if ( nbytes < sizeof ( unsigned int ) ) //<S2SV> return - EINVAL ; //<S2SV> w = ( current_thread_info ( ) -> flags >> UAC_SHIFT ) & UAC_BITMASK ; //<S2SV> if ( put_user ( w , ( unsigned int __user * ) buffer ) ) //<S2SV> return - EFAULT ; //<S2SV> return 1 ; //<S2SV> case GSI_PROC_TYPE : //<S2SV> if ( nbytes < sizeof ( unsigned long ) ) //<S2SV> return - EINVAL ; //<S2SV> cpu = ( struct percpu_struct * ) //<S2SV> ( ( char * ) hwrpb + hwrpb -> processor_offset ) ; //<S2SV> w = cpu -> type ; //<S2SV> if ( put_user ( w , ( unsigned long __user * ) buffer ) ) //<S2SV> return - EFAULT ; //<S2SV> return 1 ; //<S2SV> case GSI_GET_HWRPB : //<S2SV> if ( nbytes < sizeof ( * hwrpb ) ) //<S2SV> return - EINVAL ; //<S2SV> if ( copy_to_user ( buffer , hwrpb , nbytes ) != 0 ) //<S2SV> return - EFAULT ; //<S2SV> return 1 ; //<S2SV> default : //<S2SV> break ; //<S2SV> } //<S2SV> return - EOPNOTSUPP ; //<S2SV> } //<S2SV> 