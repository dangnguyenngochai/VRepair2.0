static int //<S2SV> sg_common_write ( Sg_fd * sfp , Sg_request * srp , //<S2SV> unsigned char * cmnd , int timeout , int blocking ) //<S2SV> { //<S2SV> int k , at_head ; //<S2SV> Sg_device * sdp = sfp -> parentdp ; //<S2SV> sg_io_hdr_t * hp = & srp -> header ; //<S2SV> srp -> data . cmd_opcode = cmnd [ 0 ] ; //<S2SV> hp -> status = 0 ; //<S2SV> hp -> masked_status = 0 ; //<S2SV> hp -> msg_status = 0 ; //<S2SV> hp -> info = 0 ; //<S2SV> hp -> host_status = 0 ; //<S2SV> hp -> driver_status = 0 ; //<S2SV> hp -> resid = 0 ; //<S2SV> SCSI_LOG_TIMEOUT ( 4 , sg_printk ( KERN_INFO , sfp -> parentdp , //<S2SV> "sg_common_write:<S2SV_blank><S2SV_blank>scsi<S2SV_blank>opcode=0x%02x,<S2SV_blank>cmd_size=%d\\n" , //<S2SV> ( int ) cmnd [ 0 ] , ( int ) hp -> cmd_len ) ) ; //<S2SV> k = sg_start_req ( srp , cmnd ) ; //<S2SV> if ( k ) { //<S2SV> SCSI_LOG_TIMEOUT ( 1 , sg_printk ( KERN_INFO , sfp -> parentdp , //<S2SV> "sg_common_write:<S2SV_blank>start_req<S2SV_blank>err=%d\\n" , k ) ) ; //<S2SV> sg_finish_rem_req ( srp ) ; //<S2SV> return k ; //<S2SV> } //<S2SV> if ( atomic_read ( & sdp -> detaching ) ) { //<S2SV> if ( srp -> bio ) { //<S2SV> if ( srp -> rq -> cmd != srp -> rq -> __cmd ) //<S2SV> kfree ( srp -> rq -> cmd ) ; //<S2SV> blk_end_request_all ( srp -> rq , - EIO ) ; //<S2SV> srp -> rq = NULL ; //<S2SV> } //<S2SV> sg_finish_rem_req ( srp ) ; //<S2SV> return - ENODEV ; //<S2SV> } //<S2SV> hp -> duration = jiffies_to_msecs ( jiffies ) ; //<S2SV> if ( hp -> interface_id != '\\0' && //<S2SV> ( SG_FLAG_Q_AT_TAIL & hp -> flags ) ) //<S2SV> at_head = 0 ; //<S2SV> else //<S2SV> at_head = 1 ; //<S2SV> srp -> rq -> timeout = timeout ; //<S2SV> kref_get ( & sfp -> f_ref ) ; //<S2SV> blk_execute_rq_nowait ( sdp -> device -> request_queue , sdp -> disk , //<S2SV> srp -> rq , at_head , sg_rq_end_io ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 