static int //<S2SV> smb_send_rqst ( struct TCP_Server_Info * server , struct smb_rqst * rqst ) //<S2SV> { //<S2SV> int rc ; //<S2SV> struct kvec * iov = rqst -> rq_iov ; //<S2SV> int n_vec = rqst -> rq_nvec ; //<S2SV> unsigned int smb_buf_length = get_rfc1002_length ( iov [ 0 ] . iov_base ) ; //<S2SV> unsigned int i ; //<S2SV> size_t total_len = 0 , sent ; //<S2SV> struct socket * ssocket = server -> ssocket ; //<S2SV> int val = 1 ; //<S2SV> if ( ssocket == NULL ) //<S2SV> return - ENOTSOCK ; //<S2SV> cFYI ( 1 , "Sending<S2SV_blank>smb:<S2SV_blank>smb_len=%u" , smb_buf_length ) ; //<S2SV> dump_smb ( iov [ 0 ] . iov_base , iov [ 0 ] . iov_len ) ; //<S2SV> kernel_setsockopt ( ssocket , SOL_TCP , TCP_CORK , //<S2SV> ( char * ) & val , sizeof ( val ) ) ; //<S2SV> rc = smb_send_kvec ( server , iov , n_vec , & sent ) ; //<S2SV> if ( rc < 0 ) //<S2SV> goto uncork ; //<S2SV> total_len += sent ; //<S2SV> for ( i = 0 ; i < rqst -> rq_npages ; i ++ ) { //<S2SV> struct kvec p_iov ; //<S2SV> cifs_rqst_page_to_kvec ( rqst , i , & p_iov ) ; //<S2SV> rc = smb_send_kvec ( server , & p_iov , 1 , & sent ) ; //<S2SV> kunmap ( rqst -> rq_pages [ i ] ) ; //<S2SV> if ( rc < 0 ) //<S2SV> break ; //<S2SV> total_len += sent ; //<S2SV> } //<S2SV> uncork : //<S2SV> val = 0 ; //<S2SV> kernel_setsockopt ( ssocket , SOL_TCP , TCP_CORK , //<S2SV> ( char * ) & val , sizeof ( val ) ) ; //<S2SV> if ( ( total_len > 0 ) && ( total_len != smb_buf_length + 4 ) ) { //<S2SV> cFYI ( 1 , "partial<S2SV_blank>send<S2SV_blank>(wanted=%u<S2SV_blank>sent=%zu):<S2SV_blank>terminating<S2SV_blank>" //<S2SV> "session" , smb_buf_length + 4 , total_len ) ; //<S2SV> server -> tcpStatus = CifsNeedReconnect ; //<S2SV> } //<S2SV> if ( rc < 0 && rc != - EINTR ) //<S2SV> cERROR ( 1 , "Error<S2SV_blank>%d<S2SV_blank>sending<S2SV_blank>data<S2SV_blank>on<S2SV_blank>socket<S2SV_blank>to<S2SV_blank>server" , rc ) ; //<S2SV> else //<S2SV> rc = 0 ; //<S2SV> return rc ; //<S2SV> } //<S2SV> 