void ip4_datagram_release_cb ( struct sock * sk ) //<S2SV> { //<S2SV> const struct inet_sock * inet = inet_sk ( sk ) ; //<S2SV> const struct ip_options_rcu * inet_opt ; //<S2SV> __be32 daddr = inet -> inet_daddr ; //<S2SV> struct flowi4 fl4 ; //<S2SV> struct rtable * rt ; //<S2SV> if ( ! __sk_dst_get ( sk ) || __sk_dst_check ( sk , 0 ) ) //<S2SV> return ; //<S2SV> rcu_read_lock ( ) ; //<S2SV> inet_opt = rcu_dereference ( inet -> inet_opt ) ; //<S2SV> if ( inet_opt && inet_opt -> opt . srr ) //<S2SV> daddr = inet_opt -> opt . faddr ; //<S2SV> rt = ip_route_output_ports ( sock_net ( sk ) , & fl4 , sk , daddr , //<S2SV> inet -> inet_saddr , inet -> inet_dport , //<S2SV> inet -> inet_sport , sk -> sk_protocol , //<S2SV> RT_CONN_FLAGS ( sk ) , sk -> sk_bound_dev_if ) ; //<S2SV> if ( ! IS_ERR ( rt ) ) //<S2SV> __sk_dst_set ( sk , & rt -> dst ) ; //<S2SV> rcu_read_unlock ( ) ; //<S2SV> } //<S2SV> 