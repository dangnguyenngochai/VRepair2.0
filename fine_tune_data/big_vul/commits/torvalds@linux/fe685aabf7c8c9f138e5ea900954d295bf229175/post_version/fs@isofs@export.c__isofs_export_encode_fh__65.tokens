static int //<S2SV> isofs_export_encode_fh ( struct inode * inode , //<S2SV> __u32 * fh32 , //<S2SV> int * max_len , //<S2SV> struct inode * parent ) //<S2SV> { //<S2SV> struct iso_inode_info * ei = ISOFS_I ( inode ) ; //<S2SV> int len = * max_len ; //<S2SV> int type = 1 ; //<S2SV> __u16 * fh16 = ( __u16 * ) fh32 ; //<S2SV> if ( parent && ( len < 5 ) ) { //<S2SV> * max_len = 5 ; //<S2SV> return 255 ; //<S2SV> } else if ( len < 3 ) { //<S2SV> * max_len = 3 ; //<S2SV> return 255 ; //<S2SV> } //<S2SV> len = 3 ; //<S2SV> fh32 [ 0 ] = ei -> i_iget5_block ; //<S2SV> fh16 [ 2 ] = ( __u16 ) ei -> i_iget5_offset ; //<S2SV> fh16 [ 3 ] = 0 ; //<S2SV> fh32 [ 2 ] = inode -> i_generation ; //<S2SV> if ( parent ) { //<S2SV> struct iso_inode_info * eparent ; //<S2SV> eparent = ISOFS_I ( parent ) ; //<S2SV> fh32 [ 3 ] = eparent -> i_iget5_block ; //<S2SV> fh16 [ 3 ] = ( __u16 ) eparent -> i_iget5_offset ; //<S2SV> fh32 [ 4 ] = parent -> i_generation ; //<S2SV> len = 5 ; //<S2SV> type = 2 ; //<S2SV> } //<S2SV> * max_len = len ; //<S2SV> return type ; //<S2SV> } //<S2SV> 