static int do_remount ( struct path * path , int flags , int mnt_flags , //<S2SV> void * data ) //<S2SV> { //<S2SV> int err ; //<S2SV> struct super_block * sb = path -> mnt -> mnt_sb ; //<S2SV> struct mount * mnt = real_mount ( path -> mnt ) ; //<S2SV> if ( ! check_mnt ( mnt ) ) //<S2SV> return - EINVAL ; //<S2SV> if ( path -> dentry != path -> mnt -> mnt_root ) //<S2SV> return - EINVAL ; //<S2SV> if ( ( mnt -> mnt . mnt_flags & MNT_LOCK_READONLY ) && //<S2SV> ! ( mnt_flags & MNT_READONLY ) ) { //<S2SV> return - EPERM ; //<S2SV> } //<S2SV> err = security_sb_remount ( sb , data ) ; //<S2SV> if ( err ) //<S2SV> return err ; //<S2SV> down_write ( & sb -> s_umount ) ; //<S2SV> if ( flags & MS_BIND ) //<S2SV> err = change_mount_flags ( path -> mnt , flags ) ; //<S2SV> else if ( ! capable ( CAP_SYS_ADMIN ) ) //<S2SV> err = - EPERM ; //<S2SV> else //<S2SV> err = do_remount_sb ( sb , flags , data , 0 ) ; //<S2SV> if ( ! err ) { //<S2SV> lock_mount_hash ( ) ; //<S2SV> mnt_flags |= mnt -> mnt . mnt_flags & ~ MNT_USER_SETTABLE_MASK ; //<S2SV> mnt -> mnt . mnt_flags = mnt_flags ; //<S2SV> touch_mnt_namespace ( mnt -> mnt_ns ) ; //<S2SV> unlock_mount_hash ( ) ; //<S2SV> } //<S2SV> up_write ( & sb -> s_umount ) ; //<S2SV> return err ; //<S2SV> } //<S2SV> 