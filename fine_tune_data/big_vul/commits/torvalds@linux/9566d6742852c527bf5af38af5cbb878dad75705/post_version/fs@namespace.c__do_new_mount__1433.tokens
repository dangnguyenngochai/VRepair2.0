static int do_new_mount ( struct path * path , const char * fstype , int flags , //<S2SV> int mnt_flags , const char * name , void * data ) //<S2SV> { //<S2SV> struct file_system_type * type ; //<S2SV> struct user_namespace * user_ns = current -> nsproxy -> mnt_ns -> user_ns ; //<S2SV> struct vfsmount * mnt ; //<S2SV> int err ; //<S2SV> if ( ! fstype ) //<S2SV> return - EINVAL ; //<S2SV> type = get_fs_type ( fstype ) ; //<S2SV> if ( ! type ) //<S2SV> return - ENODEV ; //<S2SV> if ( user_ns != & init_user_ns ) { //<S2SV> if ( ! ( type -> fs_flags & FS_USERNS_MOUNT ) ) { //<S2SV> put_filesystem ( type ) ; //<S2SV> return - EPERM ; //<S2SV> } //<S2SV> if ( ! ( type -> fs_flags & FS_USERNS_DEV_MOUNT ) ) { //<S2SV> flags |= MS_NODEV ; //<S2SV> mnt_flags |= MNT_NODEV | MNT_LOCK_NODEV ; //<S2SV> } //<S2SV> } //<S2SV> mnt = vfs_kern_mount ( type , flags , name , data ) ; //<S2SV> if ( ! IS_ERR ( mnt ) && ( type -> fs_flags & FS_HAS_SUBTYPE ) && //<S2SV> ! mnt -> mnt_sb -> s_subtype ) //<S2SV> mnt = fs_set_subtype ( mnt , fstype ) ; //<S2SV> put_filesystem ( type ) ; //<S2SV> if ( IS_ERR ( mnt ) ) //<S2SV> return PTR_ERR ( mnt ) ; //<S2SV> err = do_add_mount ( real_mount ( mnt ) , path , mnt_flags ) ; //<S2SV> if ( err ) //<S2SV> mntput ( mnt ) ; //<S2SV> return err ; //<S2SV> } //<S2SV> 