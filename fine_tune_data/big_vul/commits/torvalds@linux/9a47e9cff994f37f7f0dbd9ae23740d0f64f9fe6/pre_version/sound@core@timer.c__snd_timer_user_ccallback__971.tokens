static void snd_timer_user_ccallback ( struct snd_timer_instance * timeri , //<S2SV> int event , //<S2SV> struct timespec * tstamp , //<S2SV> unsigned long resolution ) //<S2SV> { //<S2SV> struct snd_timer_user * tu = timeri -> callback_data ; //<S2SV> struct snd_timer_tread r1 ; //<S2SV> unsigned long flags ; //<S2SV> if ( event >= SNDRV_TIMER_EVENT_START && //<S2SV> event <= SNDRV_TIMER_EVENT_PAUSE ) //<S2SV> tu -> tstamp = * tstamp ; //<S2SV> if ( ( tu -> filter & ( 1 << event ) ) == 0 || ! tu -> tread ) //<S2SV> return ; //<S2SV> r1 . event = event ; //<S2SV> r1 . tstamp = * tstamp ; //<S2SV> r1 . val = resolution ; //<S2SV> spin_lock_irqsave ( & tu -> qlock , flags ) ; //<S2SV> snd_timer_user_append_to_tqueue ( tu , & r1 ) ; //<S2SV> spin_unlock_irqrestore ( & tu -> qlock , flags ) ; //<S2SV> kill_fasync ( & tu -> fasync , SIGIO , POLL_IN ) ; //<S2SV> wake_up ( & tu -> qchange_sleep ) ; //<S2SV> } //<S2SV> 