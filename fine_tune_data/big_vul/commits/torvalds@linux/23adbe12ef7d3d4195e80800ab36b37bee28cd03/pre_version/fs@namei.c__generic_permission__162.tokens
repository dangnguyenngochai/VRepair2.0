int generic_permission ( struct inode * inode , int mask ) //<S2SV> { //<S2SV> int ret ; //<S2SV> ret = acl_permission_check ( inode , mask ) ; //<S2SV> if ( ret != - EACCES ) //<S2SV> return ret ; //<S2SV> if ( S_ISDIR ( inode -> i_mode ) ) { //<S2SV> if ( inode_capable ( inode , CAP_DAC_OVERRIDE ) ) //<S2SV> return 0 ; //<S2SV> if ( ! ( mask & MAY_WRITE ) ) //<S2SV> if ( inode_capable ( inode , CAP_DAC_READ_SEARCH ) ) //<S2SV> return 0 ; //<S2SV> return - EACCES ; //<S2SV> } //<S2SV> if ( ! ( mask & MAY_EXEC ) || ( inode -> i_mode & S_IXUGO ) ) //<S2SV> if ( inode_capable ( inode , CAP_DAC_OVERRIDE ) ) //<S2SV> return 0 ; //<S2SV> mask &= MAY_READ | MAY_WRITE | MAY_EXEC ; //<S2SV> if ( mask == MAY_READ ) //<S2SV> if ( inode_capable ( inode , CAP_DAC_READ_SEARCH ) ) //<S2SV> return 0 ; //<S2SV> return - EACCES ; //<S2SV> } //<S2SV> 