void fput ( struct file * file ) //<S2SV> { //<S2SV> if ( atomic_long_dec_and_test ( & file -> f_count ) ) { //<S2SV> struct task_struct * task = current ; //<S2SV> file_sb_list_del ( file ) ; //<S2SV> if ( likely ( ! in_interrupt ( ) && ! ( task -> flags & PF_KTHREAD ) ) ) { //<S2SV> init_task_work ( & file -> f_u . fu_rcuhead , ____fput ) ; //<S2SV> if ( ! task_work_add ( task , & file -> f_u . fu_rcuhead , true ) ) //<S2SV> return ; //<S2SV> } //<S2SV> if ( llist_add ( & file -> f_u . fu_llist , & delayed_fput_list ) ) //<S2SV> schedule_work ( & delayed_fput_work ) ; //<S2SV> } //<S2SV> } //<S2SV> 