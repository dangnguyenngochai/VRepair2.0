bool f2fs_init_extent_tree ( struct inode * inode , struct f2fs_extent * i_ext ) //<S2SV> { //<S2SV> struct f2fs_sb_info * sbi = F2FS_I_SB ( inode ) ; //<S2SV> struct extent_tree * et ; //<S2SV> struct extent_node * en ; //<S2SV> struct extent_info ei ; //<S2SV> if ( ! f2fs_may_extent_tree ( inode ) ) { //<S2SV> if ( i_ext && i_ext -> len ) { //<S2SV> i_ext -> len = 0 ; //<S2SV> return true ; //<S2SV> } //<S2SV> return false ; //<S2SV> } //<S2SV> et = __grab_extent_tree ( inode ) ; //<S2SV> if ( ! i_ext || ! i_ext -> len ) //<S2SV> return false ; //<S2SV> get_extent_info ( & ei , i_ext ) ; //<S2SV> write_lock ( & et -> lock ) ; //<S2SV> if ( atomic_read ( & et -> node_cnt ) ) //<S2SV> goto out ; //<S2SV> en = __init_extent_tree ( sbi , et , & ei ) ; //<S2SV> if ( en ) { //<S2SV> spin_lock ( & sbi -> extent_lock ) ; //<S2SV> list_add_tail ( & en -> list , & sbi -> extent_list ) ; //<S2SV> spin_unlock ( & sbi -> extent_lock ) ; //<S2SV> } //<S2SV> out : //<S2SV> write_unlock ( & et -> lock ) ; //<S2SV> return false ; //<S2SV> } //<S2SV> 