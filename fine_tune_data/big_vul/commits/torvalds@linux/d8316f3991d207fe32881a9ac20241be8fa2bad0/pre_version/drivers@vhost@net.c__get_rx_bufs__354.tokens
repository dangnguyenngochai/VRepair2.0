static int get_rx_bufs ( struct vhost_virtqueue * vq , //<S2SV> struct vring_used_elem * heads , //<S2SV> int datalen , //<S2SV> unsigned * iovcount , //<S2SV> struct vhost_log * log , //<S2SV> unsigned * log_num , //<S2SV> unsigned int quota ) //<S2SV> { //<S2SV> unsigned int out , in ; //<S2SV> int seg = 0 ; //<S2SV> int headcount = 0 ; //<S2SV> unsigned d ; //<S2SV> int r , nlogs = 0 ; //<S2SV> while ( datalen > 0 && headcount < quota ) { //<S2SV> if ( unlikely ( seg >= UIO_MAXIOV ) ) { //<S2SV> r = - ENOBUFS ; //<S2SV> goto err ; //<S2SV> } //<S2SV> d = vhost_get_vq_desc ( vq -> dev , vq , vq -> iov + seg , //<S2SV> ARRAY_SIZE ( vq -> iov ) - seg , & out , //<S2SV> & in , log , log_num ) ; //<S2SV> if ( d == vq -> num ) { //<S2SV> r = 0 ; //<S2SV> goto err ; //<S2SV> } //<S2SV> if ( unlikely ( out || in <= 0 ) ) { //<S2SV> vq_err ( vq , "unexpected<S2SV_blank>descriptor<S2SV_blank>format<S2SV_blank>for<S2SV_blank>RX:<S2SV_blank>" //<S2SV> "out<S2SV_blank>%d,<S2SV_blank>in<S2SV_blank>%d\\n" , out , in ) ; //<S2SV> r = - EINVAL ; //<S2SV> goto err ; //<S2SV> } //<S2SV> if ( unlikely ( log ) ) { //<S2SV> nlogs += * log_num ; //<S2SV> log += * log_num ; //<S2SV> } //<S2SV> heads [ headcount ] . id = d ; //<S2SV> heads [ headcount ] . len = iov_length ( vq -> iov + seg , in ) ; //<S2SV> datalen -= heads [ headcount ] . len ; //<S2SV> ++ headcount ; //<S2SV> seg += in ; //<S2SV> } //<S2SV> heads [ headcount - 1 ] . len += datalen ; //<S2SV> * iovcount = seg ; //<S2SV> if ( unlikely ( log ) ) //<S2SV> * log_num = nlogs ; //<S2SV> return headcount ; //<S2SV> err : //<S2SV> vhost_discard_vq_desc ( vq , headcount ) ; //<S2SV> return r ; //<S2SV> } //<S2SV> 