void inode_init_owner ( struct inode * inode , const struct inode * dir , //<S2SV> umode_t mode ) //<S2SV> { //<S2SV> inode -> i_uid = current_fsuid ( ) ; //<S2SV> if ( dir && dir -> i_mode & S_ISGID ) { //<S2SV> inode -> i_gid = dir -> i_gid ; //<S2SV> if ( S_ISDIR ( mode ) ) //<S2SV> mode |= S_ISGID ; //<S2SV> else if ( ( mode & ( S_ISGID | S_IXGRP ) ) == ( S_ISGID | S_IXGRP ) && //<S2SV> ! in_group_p ( inode -> i_gid ) && //<S2SV> ! capable_wrt_inode_uidgid ( dir , CAP_FSETID ) ) //<S2SV> mode &= ~ S_ISGID ; //<S2SV> } else //<S2SV> inode -> i_gid = current_fsgid ( ) ; //<S2SV> inode -> i_mode = mode ; //<S2SV> } //<S2SV> 