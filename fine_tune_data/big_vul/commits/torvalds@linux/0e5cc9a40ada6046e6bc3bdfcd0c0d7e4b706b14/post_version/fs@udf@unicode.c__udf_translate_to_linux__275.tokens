static int udf_translate_to_linux ( uint8_t * newName , int newLen , //<S2SV> uint8_t * udfName , int udfLen , //<S2SV> uint8_t * fidName , int fidNameLen ) //<S2SV> { //<S2SV> int index , newIndex = 0 , needsCRC = 0 ; //<S2SV> int extIndex = 0 , newExtIndex = 0 , hasExt = 0 ; //<S2SV> unsigned short valueCRC ; //<S2SV> uint8_t curr ; //<S2SV> if ( udfName [ 0 ] == '.' && //<S2SV> ( udfLen == 1 || ( udfLen == 2 && udfName [ 1 ] == '.' ) ) ) { //<S2SV> needsCRC = 1 ; //<S2SV> newIndex = udfLen ; //<S2SV> memcpy ( newName , udfName , udfLen ) ; //<S2SV> } else { //<S2SV> for ( index = 0 ; index < udfLen ; index ++ ) { //<S2SV> curr = udfName [ index ] ; //<S2SV> if ( curr == '/' || curr == 0 ) { //<S2SV> needsCRC = 1 ; //<S2SV> curr = ILLEGAL_CHAR_MARK ; //<S2SV> while ( index + 1 < udfLen && //<S2SV> ( udfName [ index + 1 ] == '/' || //<S2SV> udfName [ index + 1 ] == 0 ) ) //<S2SV> index ++ ; //<S2SV> } //<S2SV> if ( curr == EXT_MARK && //<S2SV> ( udfLen - index - 1 ) <= EXT_SIZE ) { //<S2SV> if ( udfLen == index + 1 ) //<S2SV> hasExt = 0 ; //<S2SV> else { //<S2SV> hasExt = 1 ; //<S2SV> extIndex = index ; //<S2SV> newExtIndex = newIndex ; //<S2SV> } //<S2SV> } //<S2SV> if ( newIndex < newLen ) //<S2SV> newName [ newIndex ++ ] = curr ; //<S2SV> else //<S2SV> needsCRC = 1 ; //<S2SV> } //<S2SV> } //<S2SV> if ( needsCRC ) { //<S2SV> uint8_t ext [ EXT_SIZE ] ; //<S2SV> int localExtIndex = 0 ; //<S2SV> if ( hasExt ) { //<S2SV> int maxFilenameLen ; //<S2SV> for ( index = 0 ; //<S2SV> index < EXT_SIZE && extIndex + index + 1 < udfLen ; //<S2SV> index ++ ) { //<S2SV> curr = udfName [ extIndex + index + 1 ] ; //<S2SV> if ( curr == '/' || curr == 0 ) { //<S2SV> needsCRC = 1 ; //<S2SV> curr = ILLEGAL_CHAR_MARK ; //<S2SV> while ( extIndex + index + 2 < udfLen && //<S2SV> ( index + 1 < EXT_SIZE && //<S2SV> ( udfName [ extIndex + index + 2 ] == '/' || //<S2SV> udfName [ extIndex + index + 2 ] == 0 ) ) ) //<S2SV> index ++ ; //<S2SV> } //<S2SV> ext [ localExtIndex ++ ] = curr ; //<S2SV> } //<S2SV> maxFilenameLen = newLen - CRC_LEN - localExtIndex ; //<S2SV> if ( newIndex > maxFilenameLen ) //<S2SV> newIndex = maxFilenameLen ; //<S2SV> else //<S2SV> newIndex = newExtIndex ; //<S2SV> } else if ( newIndex > newLen - CRC_LEN ) //<S2SV> newIndex = newLen - CRC_LEN ; //<S2SV> newName [ newIndex ++ ] = CRC_MARK ; //<S2SV> valueCRC = crc_itu_t ( 0 , fidName , fidNameLen ) ; //<S2SV> newName [ newIndex ++ ] = hex_asc_upper_hi ( valueCRC >> 8 ) ; //<S2SV> newName [ newIndex ++ ] = hex_asc_upper_lo ( valueCRC >> 8 ) ; //<S2SV> newName [ newIndex ++ ] = hex_asc_upper_hi ( valueCRC ) ; //<S2SV> newName [ newIndex ++ ] = hex_asc_upper_lo ( valueCRC ) ; //<S2SV> if ( hasExt ) { //<S2SV> newName [ newIndex ++ ] = EXT_MARK ; //<S2SV> for ( index = 0 ; index < localExtIndex ; index ++ ) //<S2SV> newName [ newIndex ++ ] = ext [ index ] ; //<S2SV> } //<S2SV> } //<S2SV> return newIndex ; //<S2SV> } //<S2SV> 