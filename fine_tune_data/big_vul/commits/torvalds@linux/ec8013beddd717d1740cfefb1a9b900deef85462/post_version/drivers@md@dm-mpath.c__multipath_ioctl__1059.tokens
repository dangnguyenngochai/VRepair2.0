static int multipath_ioctl ( struct dm_target * ti , unsigned int cmd , //<S2SV> unsigned long arg ) //<S2SV> { //<S2SV> struct multipath * m = ( struct multipath * ) ti -> private ; //<S2SV> struct block_device * bdev = NULL ; //<S2SV> fmode_t mode = 0 ; //<S2SV> unsigned long flags ; //<S2SV> int r = 0 ; //<S2SV> spin_lock_irqsave ( & m -> lock , flags ) ; //<S2SV> if ( ! m -> current_pgpath ) //<S2SV> __choose_pgpath ( m , 0 ) ; //<S2SV> if ( m -> current_pgpath ) { //<S2SV> bdev = m -> current_pgpath -> path . dev -> bdev ; //<S2SV> mode = m -> current_pgpath -> path . dev -> mode ; //<S2SV> } //<S2SV> if ( m -> queue_io ) //<S2SV> r = - EAGAIN ; //<S2SV> else if ( ! bdev ) //<S2SV> r = - EIO ; //<S2SV> spin_unlock_irqrestore ( & m -> lock , flags ) ; //<S2SV> if ( ! r && ti -> len != i_size_read ( bdev -> bd_inode ) >> SECTOR_SHIFT ) //<S2SV> r = scsi_verify_blk_ioctl ( NULL , cmd ) ; //<S2SV> return r ? : __blkdev_driver_ioctl ( bdev , mode , cmd , arg ) ; //<S2SV> } //<S2SV> 