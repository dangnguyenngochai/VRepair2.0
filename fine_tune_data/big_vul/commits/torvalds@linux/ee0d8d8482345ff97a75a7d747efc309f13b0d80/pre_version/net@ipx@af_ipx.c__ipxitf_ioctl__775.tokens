static int ipxitf_ioctl ( unsigned int cmd , void __user * arg ) //<S2SV> { //<S2SV> int rc = - EINVAL ; //<S2SV> struct ifreq ifr ; //<S2SV> int val ; //<S2SV> switch ( cmd ) { //<S2SV> case SIOCSIFADDR : { //<S2SV> struct sockaddr_ipx * sipx ; //<S2SV> struct ipx_interface_definition f ; //<S2SV> rc = - EFAULT ; //<S2SV> if ( copy_from_user ( & ifr , arg , sizeof ( ifr ) ) ) //<S2SV> break ; //<S2SV> sipx = ( struct sockaddr_ipx * ) & ifr . ifr_addr ; //<S2SV> rc = - EINVAL ; //<S2SV> if ( sipx -> sipx_family != AF_IPX ) //<S2SV> break ; //<S2SV> f . ipx_network = sipx -> sipx_network ; //<S2SV> memcpy ( f . ipx_device , ifr . ifr_name , //<S2SV> sizeof ( f . ipx_device ) ) ; //<S2SV> memcpy ( f . ipx_node , sipx -> sipx_node , IPX_NODE_LEN ) ; //<S2SV> f . ipx_dlink_type = sipx -> sipx_type ; //<S2SV> f . ipx_special = sipx -> sipx_special ; //<S2SV> if ( sipx -> sipx_action == IPX_DLTITF ) //<S2SV> rc = ipxitf_delete ( & f ) ; //<S2SV> else //<S2SV> rc = ipxitf_create ( & f ) ; //<S2SV> break ; //<S2SV> } //<S2SV> case SIOCGIFADDR : { //<S2SV> struct sockaddr_ipx * sipx ; //<S2SV> struct ipx_interface * ipxif ; //<S2SV> struct net_device * dev ; //<S2SV> rc = - EFAULT ; //<S2SV> if ( copy_from_user ( & ifr , arg , sizeof ( ifr ) ) ) //<S2SV> break ; //<S2SV> sipx = ( struct sockaddr_ipx * ) & ifr . ifr_addr ; //<S2SV> dev = __dev_get_by_name ( & init_net , ifr . ifr_name ) ; //<S2SV> rc = - ENODEV ; //<S2SV> if ( ! dev ) //<S2SV> break ; //<S2SV> ipxif = ipxitf_find_using_phys ( dev , //<S2SV> ipx_map_frame_type ( sipx -> sipx_type ) ) ; //<S2SV> rc = - EADDRNOTAVAIL ; //<S2SV> if ( ! ipxif ) //<S2SV> break ; //<S2SV> sipx -> sipx_family = AF_IPX ; //<S2SV> sipx -> sipx_network = ipxif -> if_netnum ; //<S2SV> memcpy ( sipx -> sipx_node , ipxif -> if_node , //<S2SV> sizeof ( sipx -> sipx_node ) ) ; //<S2SV> rc = - EFAULT ; //<S2SV> if ( copy_to_user ( arg , & ifr , sizeof ( ifr ) ) ) //<S2SV> break ; //<S2SV> ipxitf_put ( ipxif ) ; //<S2SV> rc = 0 ; //<S2SV> break ; //<S2SV> } //<S2SV> case SIOCAIPXITFCRT : //<S2SV> rc = - EFAULT ; //<S2SV> if ( get_user ( val , ( unsigned char __user * ) arg ) ) //<S2SV> break ; //<S2SV> rc = 0 ; //<S2SV> ipxcfg_auto_create_interfaces = val ; //<S2SV> break ; //<S2SV> case SIOCAIPXPRISLT : //<S2SV> rc = - EFAULT ; //<S2SV> if ( get_user ( val , ( unsigned char __user * ) arg ) ) //<S2SV> break ; //<S2SV> rc = 0 ; //<S2SV> ipxcfg_set_auto_select ( val ) ; //<S2SV> break ; //<S2SV> } //<S2SV> return rc ; //<S2SV> } //<S2SV> 