int cipso_v4_validate ( const struct sk_buff * skb , unsigned char * * option ) //<S2SV> { //<S2SV> unsigned char * opt = * option ; //<S2SV> unsigned char * tag ; //<S2SV> unsigned char opt_iter ; //<S2SV> unsigned char err_offset = 0 ; //<S2SV> u8 opt_len ; //<S2SV> u8 tag_len ; //<S2SV> struct cipso_v4_doi * doi_def = NULL ; //<S2SV> u32 tag_iter ; //<S2SV> opt_len = opt [ 1 ] ; //<S2SV> if ( opt_len < 8 ) { //<S2SV> err_offset = 1 ; //<S2SV> goto validate_return ; //<S2SV> } //<S2SV> rcu_read_lock ( ) ; //<S2SV> doi_def = cipso_v4_doi_search ( get_unaligned_be32 ( & opt [ 2 ] ) ) ; //<S2SV> if ( doi_def == NULL ) { //<S2SV> err_offset = 2 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> opt_iter = CIPSO_V4_HDR_LEN ; //<S2SV> tag = opt + opt_iter ; //<S2SV> while ( opt_iter < opt_len ) { //<S2SV> for ( tag_iter = 0 ; doi_def -> tags [ tag_iter ] != tag [ 0 ] ; ) //<S2SV> if ( doi_def -> tags [ tag_iter ] == CIPSO_V4_TAG_INVALID || //<S2SV> ++ tag_iter == CIPSO_V4_TAG_MAXCNT ) { //<S2SV> err_offset = opt_iter ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> tag_len = tag [ 1 ] ; //<S2SV> if ( tag_len > ( opt_len - opt_iter ) ) { //<S2SV> err_offset = opt_iter + 1 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> switch ( tag [ 0 ] ) { //<S2SV> case CIPSO_V4_TAG_RBITMAP : //<S2SV> if ( tag_len < CIPSO_V4_TAG_RBM_BLEN ) { //<S2SV> err_offset = opt_iter + 1 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> if ( cipso_v4_rbm_strictvalid ) { //<S2SV> if ( cipso_v4_map_lvl_valid ( doi_def , //<S2SV> tag [ 3 ] ) < 0 ) { //<S2SV> err_offset = opt_iter + 3 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> if ( tag_len > CIPSO_V4_TAG_RBM_BLEN && //<S2SV> cipso_v4_map_cat_rbm_valid ( doi_def , //<S2SV> & tag [ 4 ] , //<S2SV> tag_len - 4 ) < 0 ) { //<S2SV> err_offset = opt_iter + 4 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case CIPSO_V4_TAG_ENUM : //<S2SV> if ( tag_len < CIPSO_V4_TAG_ENUM_BLEN ) { //<S2SV> err_offset = opt_iter + 1 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> if ( cipso_v4_map_lvl_valid ( doi_def , //<S2SV> tag [ 3 ] ) < 0 ) { //<S2SV> err_offset = opt_iter + 3 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> if ( tag_len > CIPSO_V4_TAG_ENUM_BLEN && //<S2SV> cipso_v4_map_cat_enum_valid ( doi_def , //<S2SV> & tag [ 4 ] , //<S2SV> tag_len - 4 ) < 0 ) { //<S2SV> err_offset = opt_iter + 4 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> break ; //<S2SV> case CIPSO_V4_TAG_RANGE : //<S2SV> if ( tag_len < CIPSO_V4_TAG_RNG_BLEN ) { //<S2SV> err_offset = opt_iter + 1 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> if ( cipso_v4_map_lvl_valid ( doi_def , //<S2SV> tag [ 3 ] ) < 0 ) { //<S2SV> err_offset = opt_iter + 3 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> if ( tag_len > CIPSO_V4_TAG_RNG_BLEN && //<S2SV> cipso_v4_map_cat_rng_valid ( doi_def , //<S2SV> & tag [ 4 ] , //<S2SV> tag_len - 4 ) < 0 ) { //<S2SV> err_offset = opt_iter + 4 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> break ; //<S2SV> case CIPSO_V4_TAG_LOCAL : //<S2SV> if ( ! ( skb -> dev -> flags & IFF_LOOPBACK ) ) { //<S2SV> err_offset = opt_iter ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> if ( tag_len != CIPSO_V4_TAG_LOC_BLEN ) { //<S2SV> err_offset = opt_iter + 1 ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> break ; //<S2SV> default : //<S2SV> err_offset = opt_iter ; //<S2SV> goto validate_return_locked ; //<S2SV> } //<S2SV> tag += tag_len ; //<S2SV> opt_iter += tag_len ; //<S2SV> } //<S2SV> validate_return_locked : //<S2SV> rcu_read_unlock ( ) ; //<S2SV> validate_return : //<S2SV> * option = opt + err_offset ; //<S2SV> return err_offset ; //<S2SV> } //<S2SV> 