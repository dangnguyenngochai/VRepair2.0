int ppp_register_net_channel ( struct net * net , struct ppp_channel * chan ) //<S2SV> { //<S2SV> struct channel * pch ; //<S2SV> struct ppp_net * pn ; //<S2SV> pch = kzalloc ( sizeof ( struct channel ) , GFP_KERNEL ) ; //<S2SV> if ( ! pch ) //<S2SV> return - ENOMEM ; //<S2SV> pn = ppp_pernet ( net ) ; //<S2SV> pch -> ppp = NULL ; //<S2SV> pch -> chan = chan ; //<S2SV> pch -> chan_net = get_net ( net ) ; //<S2SV> chan -> ppp = pch ; //<S2SV> init_ppp_file ( & pch -> file , CHANNEL ) ; //<S2SV> pch -> file . hdrlen = chan -> hdrlen ; //<S2SV> # ifdef CONFIG_PPP_MULTILINK //<S2SV> pch -> lastseq = - 1 ; //<S2SV> # endif //<S2SV> init_rwsem ( & pch -> chan_sem ) ; //<S2SV> spin_lock_init ( & pch -> downl ) ; //<S2SV> rwlock_init ( & pch -> upl ) ; //<S2SV> spin_lock_bh ( & pn -> all_channels_lock ) ; //<S2SV> pch -> file . index = ++ pn -> last_channel_index ; //<S2SV> list_add ( & pch -> list , & pn -> new_channels ) ; //<S2SV> atomic_inc ( & channel_count ) ; //<S2SV> spin_unlock_bh ( & pn -> all_channels_lock ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 