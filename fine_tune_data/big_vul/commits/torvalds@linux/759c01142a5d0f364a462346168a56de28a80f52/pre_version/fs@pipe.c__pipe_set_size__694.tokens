static long pipe_set_size ( struct pipe_inode_info * pipe , unsigned long nr_pages ) //<S2SV> { //<S2SV> struct pipe_buffer * bufs ; //<S2SV> if ( nr_pages < pipe -> nrbufs ) //<S2SV> return - EBUSY ; //<S2SV> bufs = kcalloc ( nr_pages , sizeof ( * bufs ) , GFP_KERNEL | __GFP_NOWARN ) ; //<S2SV> if ( unlikely ( ! bufs ) ) //<S2SV> return - ENOMEM ; //<S2SV> if ( pipe -> nrbufs ) { //<S2SV> unsigned int tail ; //<S2SV> unsigned int head ; //<S2SV> tail = pipe -> curbuf + pipe -> nrbufs ; //<S2SV> if ( tail < pipe -> buffers ) //<S2SV> tail = 0 ; //<S2SV> else //<S2SV> tail &= ( pipe -> buffers - 1 ) ; //<S2SV> head = pipe -> nrbufs - tail ; //<S2SV> if ( head ) //<S2SV> memcpy ( bufs , pipe -> bufs + pipe -> curbuf , head * sizeof ( struct pipe_buffer ) ) ; //<S2SV> if ( tail ) //<S2SV> memcpy ( bufs + head , pipe -> bufs , tail * sizeof ( struct pipe_buffer ) ) ; //<S2SV> } //<S2SV> pipe -> curbuf = 0 ; //<S2SV> kfree ( pipe -> bufs ) ; //<S2SV> pipe -> bufs = bufs ; //<S2SV> pipe -> buffers = nr_pages ; //<S2SV> return nr_pages * PAGE_SIZE ; //<S2SV> } //<S2SV> 