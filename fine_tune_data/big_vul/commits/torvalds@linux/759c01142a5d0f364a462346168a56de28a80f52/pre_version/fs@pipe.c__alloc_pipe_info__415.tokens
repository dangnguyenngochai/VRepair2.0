struct pipe_inode_info * alloc_pipe_info ( void ) //<S2SV> { //<S2SV> struct pipe_inode_info * pipe ; //<S2SV> pipe = kzalloc ( sizeof ( struct pipe_inode_info ) , GFP_KERNEL ) ; //<S2SV> if ( pipe ) { //<S2SV> pipe -> bufs = kzalloc ( sizeof ( struct pipe_buffer ) * PIPE_DEF_BUFFERS , GFP_KERNEL ) ; //<S2SV> if ( pipe -> bufs ) { //<S2SV> init_waitqueue_head ( & pipe -> wait ) ; //<S2SV> pipe -> r_counter = pipe -> w_counter = 1 ; //<S2SV> pipe -> buffers = PIPE_DEF_BUFFERS ; //<S2SV> mutex_init ( & pipe -> mutex ) ; //<S2SV> return pipe ; //<S2SV> } //<S2SV> kfree ( pipe ) ; //<S2SV> } //<S2SV> return NULL ; //<S2SV> } //<S2SV> 