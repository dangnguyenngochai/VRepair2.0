static int follow_dotdot_rcu ( struct nameidata * nd ) //<S2SV> { //<S2SV> struct inode * inode = nd -> inode ; //<S2SV> if ( ! nd -> root . mnt ) //<S2SV> set_root_rcu ( nd ) ; //<S2SV> while ( 1 ) { //<S2SV> if ( path_equal ( & nd -> path , & nd -> root ) ) //<S2SV> break ; //<S2SV> if ( nd -> path . dentry != nd -> path . mnt -> mnt_root ) { //<S2SV> struct dentry * old = nd -> path . dentry ; //<S2SV> struct dentry * parent = old -> d_parent ; //<S2SV> unsigned seq ; //<S2SV> inode = parent -> d_inode ; //<S2SV> seq = read_seqcount_begin ( & parent -> d_seq ) ; //<S2SV> if ( unlikely ( read_seqcount_retry ( & old -> d_seq , nd -> seq ) ) ) //<S2SV> return - ECHILD ; //<S2SV> nd -> path . dentry = parent ; //<S2SV> nd -> seq = seq ; //<S2SV> if ( unlikely ( ! path_connected ( & nd -> path ) ) ) //<S2SV> return - ENOENT ; //<S2SV> break ; //<S2SV> } else { //<S2SV> struct mount * mnt = real_mount ( nd -> path . mnt ) ; //<S2SV> struct mount * mparent = mnt -> mnt_parent ; //<S2SV> struct dentry * mountpoint = mnt -> mnt_mountpoint ; //<S2SV> struct inode * inode2 = mountpoint -> d_inode ; //<S2SV> unsigned seq = read_seqcount_begin ( & mountpoint -> d_seq ) ; //<S2SV> if ( unlikely ( read_seqretry ( & mount_lock , nd -> m_seq ) ) ) //<S2SV> return - ECHILD ; //<S2SV> if ( & mparent -> mnt == nd -> path . mnt ) //<S2SV> break ; //<S2SV> nd -> path . dentry = mountpoint ; //<S2SV> nd -> path . mnt = & mparent -> mnt ; //<S2SV> inode = inode2 ; //<S2SV> nd -> seq = seq ; //<S2SV> } //<S2SV> } //<S2SV> while ( unlikely ( d_mountpoint ( nd -> path . dentry ) ) ) { //<S2SV> struct mount * mounted ; //<S2SV> mounted = __lookup_mnt ( nd -> path . mnt , nd -> path . dentry ) ; //<S2SV> if ( unlikely ( read_seqretry ( & mount_lock , nd -> m_seq ) ) ) //<S2SV> return - ECHILD ; //<S2SV> if ( ! mounted ) //<S2SV> break ; //<S2SV> nd -> path . mnt = & mounted -> mnt ; //<S2SV> nd -> path . dentry = mounted -> mnt . mnt_root ; //<S2SV> inode = nd -> path . dentry -> d_inode ; //<S2SV> nd -> seq = read_seqcount_begin ( & nd -> path . dentry -> d_seq ) ; //<S2SV> } //<S2SV> nd -> inode = inode ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 