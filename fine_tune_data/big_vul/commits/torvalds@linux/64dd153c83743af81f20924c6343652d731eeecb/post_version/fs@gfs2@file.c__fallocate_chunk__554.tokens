static int fallocate_chunk ( struct inode * inode , loff_t offset , loff_t len , //<S2SV> int mode ) //<S2SV> { //<S2SV> struct gfs2_inode * ip = GFS2_I ( inode ) ; //<S2SV> struct buffer_head * dibh ; //<S2SV> int error ; //<S2SV> unsigned int nr_blks ; //<S2SV> sector_t lblock = offset >> inode -> i_blkbits ; //<S2SV> error = gfs2_meta_inode_buffer ( ip , & dibh ) ; //<S2SV> if ( unlikely ( error ) ) //<S2SV> return error ; //<S2SV> gfs2_trans_add_bh ( ip -> i_gl , dibh , 1 ) ; //<S2SV> if ( gfs2_is_stuffed ( ip ) ) { //<S2SV> error = gfs2_unstuff_dinode ( ip , NULL ) ; //<S2SV> if ( unlikely ( error ) ) //<S2SV> goto out ; //<S2SV> } //<S2SV> while ( len ) { //<S2SV> struct buffer_head bh_map = { . b_state = 0 , . b_blocknr = 0 } ; //<S2SV> bh_map . b_size = len ; //<S2SV> set_buffer_zeronew ( & bh_map ) ; //<S2SV> error = gfs2_block_map ( inode , lblock , & bh_map , 1 ) ; //<S2SV> if ( unlikely ( error ) ) //<S2SV> goto out ; //<S2SV> len -= bh_map . b_size ; //<S2SV> nr_blks = bh_map . b_size >> inode -> i_blkbits ; //<S2SV> lblock += nr_blks ; //<S2SV> if ( ! buffer_new ( & bh_map ) ) //<S2SV> continue ; //<S2SV> if ( unlikely ( ! buffer_zeronew ( & bh_map ) ) ) { //<S2SV> error = - EIO ; //<S2SV> goto out ; //<S2SV> } //<S2SV> } //<S2SV> if ( offset + len > inode -> i_size && ! ( mode & FALLOC_FL_KEEP_SIZE ) ) //<S2SV> i_size_write ( inode , offset + len ) ; //<S2SV> mark_inode_dirty ( inode ) ; //<S2SV> out : //<S2SV> brelse ( dibh ) ; //<S2SV> return error ; //<S2SV> } //<S2SV> 