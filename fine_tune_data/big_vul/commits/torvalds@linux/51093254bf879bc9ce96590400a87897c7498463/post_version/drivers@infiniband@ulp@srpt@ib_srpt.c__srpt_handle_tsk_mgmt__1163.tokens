static void srpt_handle_tsk_mgmt ( struct srpt_rdma_ch * ch , //<S2SV> struct srpt_recv_ioctx * recv_ioctx , //<S2SV> struct srpt_send_ioctx * send_ioctx ) //<S2SV> { //<S2SV> struct srp_tsk_mgmt * srp_tsk ; //<S2SV> struct se_cmd * cmd ; //<S2SV> struct se_session * sess = ch -> sess ; //<S2SV> uint64_t unpacked_lun ; //<S2SV> int tcm_tmr ; //<S2SV> int rc ; //<S2SV> BUG_ON ( ! send_ioctx ) ; //<S2SV> srp_tsk = recv_ioctx -> ioctx . buf ; //<S2SV> cmd = & send_ioctx -> cmd ; //<S2SV> pr_debug ( "recv<S2SV_blank>tsk_mgmt<S2SV_blank>fn<S2SV_blank>%d<S2SV_blank>for<S2SV_blank>task_tag<S2SV_blank>%lld<S2SV_blank>and<S2SV_blank>cmd<S2SV_blank>tag<S2SV_blank>%lld" //<S2SV> "<S2SV_blank>cm_id<S2SV_blank>%p<S2SV_blank>sess<S2SV_blank>%p\\n" , srp_tsk -> tsk_mgmt_func , //<S2SV> srp_tsk -> task_tag , srp_tsk -> tag , ch -> cm_id , ch -> sess ) ; //<S2SV> srpt_set_cmd_state ( send_ioctx , SRPT_STATE_MGMT ) ; //<S2SV> send_ioctx -> cmd . tag = srp_tsk -> tag ; //<S2SV> tcm_tmr = srp_tmr_to_tcm ( srp_tsk -> tsk_mgmt_func ) ; //<S2SV> unpacked_lun = srpt_unpack_lun ( ( uint8_t * ) & srp_tsk -> lun , //<S2SV> sizeof ( srp_tsk -> lun ) ) ; //<S2SV> rc = target_submit_tmr ( & send_ioctx -> cmd , sess , NULL , unpacked_lun , //<S2SV> srp_tsk , tcm_tmr , GFP_KERNEL , srp_tsk -> task_tag , //<S2SV> TARGET_SCF_ACK_KREF ) ; //<S2SV> if ( rc != 0 ) { //<S2SV> send_ioctx -> cmd . se_tmr_req -> response = TMR_FUNCTION_REJECTED ; //<S2SV> goto fail ; //<S2SV> } //<S2SV> return ; //<S2SV> fail : //<S2SV> transport_send_check_condition_and_sense ( cmd , 0 , 0 ) ; //<S2SV> } //<S2SV> 