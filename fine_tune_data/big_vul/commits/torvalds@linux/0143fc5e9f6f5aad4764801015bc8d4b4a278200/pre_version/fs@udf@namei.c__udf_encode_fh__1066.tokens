static int udf_encode_fh ( struct inode * inode , __u32 * fh , int * lenp , //<S2SV> struct inode * parent ) //<S2SV> { //<S2SV> int len = * lenp ; //<S2SV> struct kernel_lb_addr location = UDF_I ( inode ) -> i_location ; //<S2SV> struct fid * fid = ( struct fid * ) fh ; //<S2SV> int type = FILEID_UDF_WITHOUT_PARENT ; //<S2SV> if ( parent && ( len < 5 ) ) { //<S2SV> * lenp = 5 ; //<S2SV> return 255 ; //<S2SV> } else if ( len < 3 ) { //<S2SV> * lenp = 3 ; //<S2SV> return 255 ; //<S2SV> } //<S2SV> * lenp = 3 ; //<S2SV> fid -> udf . block = location . logicalBlockNum ; //<S2SV> fid -> udf . partref = location . partitionReferenceNum ; //<S2SV> fid -> udf . generation = inode -> i_generation ; //<S2SV> if ( parent ) { //<S2SV> location = UDF_I ( parent ) -> i_location ; //<S2SV> fid -> udf . parent_block = location . logicalBlockNum ; //<S2SV> fid -> udf . parent_partref = location . partitionReferenceNum ; //<S2SV> fid -> udf . parent_generation = inode -> i_generation ; //<S2SV> * lenp = 5 ; //<S2SV> type = FILEID_UDF_WITH_PARENT ; //<S2SV> } //<S2SV> return type ; //<S2SV> } //<S2SV> 