static int hci_uart_set_proto ( struct hci_uart * hu , int id ) //<S2SV> { //<S2SV> const struct hci_uart_proto * p ; //<S2SV> int err ; //<S2SV> p = hci_uart_get_proto ( id ) ; //<S2SV> if ( ! p ) //<S2SV> return - EPROTONOSUPPORT ; //<S2SV> hu -> proto = p ; //<S2SV> set_bit ( HCI_UART_PROTO_READY , & hu -> flags ) ; //<S2SV> err = hci_uart_register_dev ( hu ) ; //<S2SV> if ( err ) { //<S2SV> clear_bit ( HCI_UART_PROTO_READY , & hu -> flags ) ; //<S2SV> return err ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 