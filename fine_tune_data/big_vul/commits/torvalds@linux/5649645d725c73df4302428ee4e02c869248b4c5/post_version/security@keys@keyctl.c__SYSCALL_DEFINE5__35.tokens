SYSCALL_DEFINE5 ( add_key , const char __user * , _type , //<S2SV> const char __user * , _description , //<S2SV> const void __user * , _payload , //<S2SV> size_t , plen , //<S2SV> key_serial_t , ringid ) //<S2SV> { //<S2SV> key_ref_t keyring_ref , key_ref ; //<S2SV> char type [ 32 ] , * description ; //<S2SV> void * payload ; //<S2SV> long ret ; //<S2SV> ret = - EINVAL ; //<S2SV> if ( plen > 1024 * 1024 - 1 ) //<S2SV> goto error ; //<S2SV> ret = key_get_type_from_user ( type , _type , sizeof ( type ) ) ; //<S2SV> if ( ret < 0 ) //<S2SV> goto error ; //<S2SV> description = NULL ; //<S2SV> if ( _description ) { //<S2SV> description = strndup_user ( _description , KEY_MAX_DESC_SIZE ) ; //<S2SV> if ( IS_ERR ( description ) ) { //<S2SV> ret = PTR_ERR ( description ) ; //<S2SV> goto error ; //<S2SV> } //<S2SV> if ( ! * description ) { //<S2SV> kfree ( description ) ; //<S2SV> description = NULL ; //<S2SV> } else if ( ( description [ 0 ] == '.' ) && //<S2SV> ( strncmp ( type , "keyring" , 7 ) == 0 ) ) { //<S2SV> ret = - EPERM ; //<S2SV> goto error2 ; //<S2SV> } //<S2SV> } //<S2SV> payload = NULL ; //<S2SV> if ( plen ) { //<S2SV> ret = - ENOMEM ; //<S2SV> payload = kvmalloc ( plen , GFP_KERNEL ) ; //<S2SV> if ( ! payload ) //<S2SV> goto error2 ; //<S2SV> ret = - EFAULT ; //<S2SV> if ( copy_from_user ( payload , _payload , plen ) != 0 ) //<S2SV> goto error3 ; //<S2SV> } //<S2SV> keyring_ref = lookup_user_key ( ringid , KEY_LOOKUP_CREATE , KEY_NEED_WRITE ) ; //<S2SV> if ( IS_ERR ( keyring_ref ) ) { //<S2SV> ret = PTR_ERR ( keyring_ref ) ; //<S2SV> goto error3 ; //<S2SV> } //<S2SV> key_ref = key_create_or_update ( keyring_ref , type , description , //<S2SV> payload , plen , KEY_PERM_UNDEF , //<S2SV> KEY_ALLOC_IN_QUOTA ) ; //<S2SV> if ( ! IS_ERR ( key_ref ) ) { //<S2SV> ret = key_ref_to_ptr ( key_ref ) -> serial ; //<S2SV> key_ref_put ( key_ref ) ; //<S2SV> } //<S2SV> else { //<S2SV> ret = PTR_ERR ( key_ref ) ; //<S2SV> } //<S2SV> key_ref_put ( keyring_ref ) ; //<S2SV> error3 : //<S2SV> kvfree ( payload ) ; //<S2SV> error2 : //<S2SV> kfree ( description ) ; //<S2SV> error : //<S2SV> return ret ; //<S2SV> } //<S2SV> 