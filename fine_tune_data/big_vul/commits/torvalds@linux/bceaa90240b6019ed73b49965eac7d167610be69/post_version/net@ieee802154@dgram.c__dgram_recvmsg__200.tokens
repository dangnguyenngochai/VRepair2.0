static int dgram_recvmsg ( struct kiocb * iocb , struct sock * sk , //<S2SV> struct msghdr * msg , size_t len , int noblock , int flags , //<S2SV> int * addr_len ) //<S2SV> { //<S2SV> size_t copied = 0 ; //<S2SV> int err = - EOPNOTSUPP ; //<S2SV> struct sk_buff * skb ; //<S2SV> struct sockaddr_ieee802154 * saddr ; //<S2SV> saddr = ( struct sockaddr_ieee802154 * ) msg -> msg_name ; //<S2SV> skb = skb_recv_datagram ( sk , flags , noblock , & err ) ; //<S2SV> if ( ! skb ) //<S2SV> goto out ; //<S2SV> copied = skb -> len ; //<S2SV> if ( len < copied ) { //<S2SV> msg -> msg_flags |= MSG_TRUNC ; //<S2SV> copied = len ; //<S2SV> } //<S2SV> err = skb_copy_datagram_iovec ( skb , 0 , msg -> msg_iov , copied ) ; //<S2SV> if ( err ) //<S2SV> goto done ; //<S2SV> sock_recv_ts_and_drops ( msg , sk , skb ) ; //<S2SV> if ( saddr ) { //<S2SV> saddr -> family = AF_IEEE802154 ; //<S2SV> saddr -> addr = mac_cb ( skb ) -> sa ; //<S2SV> * addr_len = sizeof ( * saddr ) ; //<S2SV> } //<S2SV> if ( flags & MSG_TRUNC ) //<S2SV> copied = skb -> len ; //<S2SV> done : //<S2SV> skb_free_datagram ( sk , skb ) ; //<S2SV> out : //<S2SV> if ( err ) //<S2SV> return err ; //<S2SV> return copied ; //<S2SV> } //<S2SV> 