static void //<S2SV> ext4_xattr_cache_insert ( struct mb_cache * ext4_mb_cache , struct buffer_head * bh ) //<S2SV> { //<S2SV> __u32 hash = le32_to_cpu ( BHDR ( bh ) -> h_hash ) ; //<S2SV> struct mb_cache_entry * ce ; //<S2SV> int error ; //<S2SV> ce = mb_cache_entry_alloc ( ext4_mb_cache , GFP_NOFS ) ; //<S2SV> if ( ! ce ) { //<S2SV> ea_bdebug ( bh , "out<S2SV_blank>of<S2SV_blank>memory" ) ; //<S2SV> return ; //<S2SV> } //<S2SV> error = mb_cache_entry_insert ( ce , bh -> b_bdev , bh -> b_blocknr , hash ) ; //<S2SV> if ( error ) { //<S2SV> mb_cache_entry_free ( ce ) ; //<S2SV> if ( error == - EBUSY ) { //<S2SV> ea_bdebug ( bh , "already<S2SV_blank>in<S2SV_blank>cache" ) ; //<S2SV> error = 0 ; //<S2SV> } //<S2SV> } else { //<S2SV> ea_bdebug ( bh , "inserting<S2SV_blank>[%x]" , ( int ) hash ) ; //<S2SV> mb_cache_entry_release ( ce ) ; //<S2SV> } //<S2SV> } //<S2SV> 