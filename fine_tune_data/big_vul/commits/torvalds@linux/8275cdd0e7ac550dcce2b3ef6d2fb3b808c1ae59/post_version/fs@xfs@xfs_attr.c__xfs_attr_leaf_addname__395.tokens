STATIC int //<S2SV> xfs_attr_leaf_addname ( xfs_da_args_t * args ) //<S2SV> { //<S2SV> xfs_inode_t * dp ; //<S2SV> struct xfs_buf * bp ; //<S2SV> int retval , error , committed , forkoff ; //<S2SV> trace_xfs_attr_leaf_addname ( args ) ; //<S2SV> dp = args -> dp ; //<S2SV> args -> blkno = 0 ; //<S2SV> error = xfs_attr3_leaf_read ( args -> trans , args -> dp , args -> blkno , - 1 , & bp ) ; //<S2SV> if ( error ) //<S2SV> return error ; //<S2SV> retval = xfs_attr3_leaf_lookup_int ( bp , args ) ; //<S2SV> if ( ( args -> flags & ATTR_REPLACE ) && ( retval == ENOATTR ) ) { //<S2SV> xfs_trans_brelse ( args -> trans , bp ) ; //<S2SV> return retval ; //<S2SV> } else if ( retval == EEXIST ) { //<S2SV> if ( args -> flags & ATTR_CREATE ) { //<S2SV> xfs_trans_brelse ( args -> trans , bp ) ; //<S2SV> return retval ; //<S2SV> } //<S2SV> trace_xfs_attr_leaf_replace ( args ) ; //<S2SV> args -> op_flags |= XFS_DA_OP_RENAME ; //<S2SV> args -> blkno2 = args -> blkno ; //<S2SV> args -> index2 = args -> index ; //<S2SV> args -> rmtblkno2 = args -> rmtblkno ; //<S2SV> args -> rmtblkcnt2 = args -> rmtblkcnt ; //<S2SV> args -> rmtvaluelen2 = args -> rmtvaluelen ; //<S2SV> args -> rmtblkno = 0 ; //<S2SV> args -> rmtblkcnt = 0 ; //<S2SV> args -> rmtvaluelen = 0 ; //<S2SV> } //<S2SV> retval = xfs_attr3_leaf_add ( bp , args ) ; //<S2SV> if ( retval == ENOSPC ) { //<S2SV> xfs_bmap_init ( args -> flist , args -> firstblock ) ; //<S2SV> error = xfs_attr3_leaf_to_node ( args ) ; //<S2SV> if ( ! error ) { //<S2SV> error = xfs_bmap_finish ( & args -> trans , args -> flist , //<S2SV> & committed ) ; //<S2SV> } //<S2SV> if ( error ) { //<S2SV> ASSERT ( committed ) ; //<S2SV> args -> trans = NULL ; //<S2SV> xfs_bmap_cancel ( args -> flist ) ; //<S2SV> return ( error ) ; //<S2SV> } //<S2SV> if ( committed ) //<S2SV> xfs_trans_ijoin ( args -> trans , dp , 0 ) ; //<S2SV> error = xfs_trans_roll ( & args -> trans , dp ) ; //<S2SV> if ( error ) //<S2SV> return ( error ) ; //<S2SV> error = xfs_attr_node_addname ( args ) ; //<S2SV> return ( error ) ; //<S2SV> } //<S2SV> error = xfs_trans_roll ( & args -> trans , dp ) ; //<S2SV> if ( error ) //<S2SV> return ( error ) ; //<S2SV> if ( args -> rmtblkno > 0 ) { //<S2SV> error = xfs_attr_rmtval_set ( args ) ; //<S2SV> if ( error ) //<S2SV> return ( error ) ; //<S2SV> } //<S2SV> if ( args -> op_flags & XFS_DA_OP_RENAME ) { //<S2SV> error = xfs_attr3_leaf_flipflags ( args ) ; //<S2SV> if ( error ) //<S2SV> return ( error ) ; //<S2SV> args -> index = args -> index2 ; //<S2SV> args -> blkno = args -> blkno2 ; //<S2SV> args -> rmtblkno = args -> rmtblkno2 ; //<S2SV> args -> rmtblkcnt = args -> rmtblkcnt2 ; //<S2SV> args -> rmtvaluelen = args -> rmtvaluelen2 ; //<S2SV> if ( args -> rmtblkno ) { //<S2SV> error = xfs_attr_rmtval_remove ( args ) ; //<S2SV> if ( error ) //<S2SV> return ( error ) ; //<S2SV> } //<S2SV> error = xfs_attr3_leaf_read ( args -> trans , args -> dp , args -> blkno , //<S2SV> - 1 , & bp ) ; //<S2SV> if ( error ) //<S2SV> return error ; //<S2SV> xfs_attr3_leaf_remove ( bp , args ) ; //<S2SV> if ( ( forkoff = xfs_attr_shortform_allfit ( bp , dp ) ) ) { //<S2SV> xfs_bmap_init ( args -> flist , args -> firstblock ) ; //<S2SV> error = xfs_attr3_leaf_to_shortform ( bp , args , forkoff ) ; //<S2SV> if ( ! error ) { //<S2SV> error = xfs_bmap_finish ( & args -> trans , //<S2SV> args -> flist , //<S2SV> & committed ) ; //<S2SV> } //<S2SV> if ( error ) { //<S2SV> ASSERT ( committed ) ; //<S2SV> args -> trans = NULL ; //<S2SV> xfs_bmap_cancel ( args -> flist ) ; //<S2SV> return ( error ) ; //<S2SV> } //<S2SV> if ( committed ) //<S2SV> xfs_trans_ijoin ( args -> trans , dp , 0 ) ; //<S2SV> } //<S2SV> error = xfs_trans_roll ( & args -> trans , dp ) ; //<S2SV> } else if ( args -> rmtblkno > 0 ) { //<S2SV> error = xfs_attr3_leaf_clearflag ( args ) ; //<S2SV> } //<S2SV> return error ; //<S2SV> } //<S2SV> 