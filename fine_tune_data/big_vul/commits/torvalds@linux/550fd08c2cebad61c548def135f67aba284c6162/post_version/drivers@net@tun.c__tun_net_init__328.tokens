static void tun_net_init ( struct net_device * dev ) //<S2SV> { //<S2SV> struct tun_struct * tun = netdev_priv ( dev ) ; //<S2SV> switch ( tun -> flags & TUN_TYPE_MASK ) { //<S2SV> case TUN_TUN_DEV : //<S2SV> dev -> netdev_ops = & tun_netdev_ops ; //<S2SV> dev -> hard_header_len = 0 ; //<S2SV> dev -> addr_len = 0 ; //<S2SV> dev -> mtu = 1500 ; //<S2SV> dev -> type = ARPHRD_NONE ; //<S2SV> dev -> flags = IFF_POINTOPOINT | IFF_NOARP | IFF_MULTICAST ; //<S2SV> dev -> tx_queue_len = TUN_READQ_SIZE ; //<S2SV> break ; //<S2SV> case TUN_TAP_DEV : //<S2SV> dev -> netdev_ops = & tap_netdev_ops ; //<S2SV> ether_setup ( dev ) ; //<S2SV> dev -> priv_flags &= ~ IFF_TX_SKB_SHARING ; //<S2SV> random_ether_addr ( dev -> dev_addr ) ; //<S2SV> dev -> tx_queue_len = TUN_READQ_SIZE ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> 