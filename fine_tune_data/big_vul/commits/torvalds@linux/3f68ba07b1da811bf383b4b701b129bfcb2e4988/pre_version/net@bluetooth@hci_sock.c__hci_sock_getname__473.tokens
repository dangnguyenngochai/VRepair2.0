static int hci_sock_getname ( struct socket * sock , struct sockaddr * addr , //<S2SV> int * addr_len , int peer ) //<S2SV> { //<S2SV> struct sockaddr_hci * haddr = ( struct sockaddr_hci * ) addr ; //<S2SV> struct sock * sk = sock -> sk ; //<S2SV> struct hci_dev * hdev = hci_pi ( sk ) -> hdev ; //<S2SV> BT_DBG ( "sock<S2SV_blank>%p<S2SV_blank>sk<S2SV_blank>%p" , sock , sk ) ; //<S2SV> if ( ! hdev ) //<S2SV> return - EBADFD ; //<S2SV> lock_sock ( sk ) ; //<S2SV> * addr_len = sizeof ( * haddr ) ; //<S2SV> haddr -> hci_family = AF_BLUETOOTH ; //<S2SV> haddr -> hci_dev = hdev -> id ; //<S2SV> release_sock ( sk ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 