static void //<S2SV> videobuf_vm_close ( struct vm_area_struct * vma ) //<S2SV> { //<S2SV> struct videobuf_mapping * map = vma -> vm_private_data ; //<S2SV> struct videobuf_queue * q = map -> q ; //<S2SV> int i ; //<S2SV> dprintk ( 2 , "vm_close<S2SV_blank>%p<S2SV_blank>[count=%d,vma=%08lx-%08lx]\\n" , map , //<S2SV> map -> count , vma -> vm_start , vma -> vm_end ) ; //<S2SV> map -> count -- ; //<S2SV> if ( 0 == map -> count ) { //<S2SV> dprintk ( 1 , "munmap<S2SV_blank>%p<S2SV_blank>q=%p\\n" , map , q ) ; //<S2SV> mutex_lock ( & q -> lock ) ; //<S2SV> for ( i = 0 ; i < VIDEO_MAX_FRAME ; i ++ ) { //<S2SV> if ( NULL == q -> bufs [ i ] ) //<S2SV> continue ; //<S2SV> if ( q -> bufs [ i ] -> map != map ) //<S2SV> continue ; //<S2SV> q -> ops -> buf_release ( q , q -> bufs [ i ] ) ; //<S2SV> q -> bufs [ i ] -> map = NULL ; //<S2SV> q -> bufs [ i ] -> baddr = 0 ; //<S2SV> } //<S2SV> mutex_unlock ( & q -> lock ) ; //<S2SV> kfree ( map ) ; //<S2SV> } //<S2SV> return ; //<S2SV> } //<S2SV> 