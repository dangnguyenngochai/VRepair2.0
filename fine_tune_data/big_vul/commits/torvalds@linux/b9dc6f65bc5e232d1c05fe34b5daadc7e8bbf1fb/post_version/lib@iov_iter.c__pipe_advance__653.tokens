static void pipe_advance ( struct iov_iter * i , size_t size ) //<S2SV> { //<S2SV> struct pipe_inode_info * pipe = i -> pipe ; //<S2SV> if ( unlikely ( i -> count < size ) ) //<S2SV> size = i -> count ; //<S2SV> if ( size ) { //<S2SV> struct pipe_buffer * buf ; //<S2SV> size_t off = i -> iov_offset , left = size ; //<S2SV> int idx = i -> idx ; //<S2SV> if ( off ) //<S2SV> left += off - pipe -> bufs [ idx ] . offset ; //<S2SV> while ( 1 ) { //<S2SV> buf = & pipe -> bufs [ idx ] ; //<S2SV> if ( left <= buf -> len ) //<S2SV> break ; //<S2SV> left -= buf -> len ; //<S2SV> idx = next_idx ( idx , pipe ) ; //<S2SV> } //<S2SV> i -> idx = idx ; //<S2SV> i -> iov_offset = buf -> offset + left ; //<S2SV> } //<S2SV> i -> count -= size ; //<S2SV> pipe_truncate ( i ) ; //<S2SV> } //<S2SV> 