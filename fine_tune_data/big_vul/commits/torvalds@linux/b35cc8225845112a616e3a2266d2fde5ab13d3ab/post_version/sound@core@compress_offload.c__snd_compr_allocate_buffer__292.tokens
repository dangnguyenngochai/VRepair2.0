static int snd_compr_allocate_buffer ( struct snd_compr_stream * stream , //<S2SV> struct snd_compr_params * params ) //<S2SV> { //<S2SV> unsigned int buffer_size ; //<S2SV> void * buffer ; //<S2SV> if ( params -> buffer . fragment_size == 0 || //<S2SV> params -> buffer . fragments > SIZE_MAX / params -> buffer . fragment_size ) //<S2SV> return - EINVAL ; //<S2SV> buffer_size = params -> buffer . fragment_size * params -> buffer . fragments ; //<S2SV> if ( stream -> ops -> copy ) { //<S2SV> buffer = NULL ; //<S2SV> } else { //<S2SV> buffer = kmalloc ( buffer_size , GFP_KERNEL ) ; //<S2SV> if ( ! buffer ) //<S2SV> return - ENOMEM ; //<S2SV> } //<S2SV> stream -> runtime -> fragment_size = params -> buffer . fragment_size ; //<S2SV> stream -> runtime -> fragments = params -> buffer . fragments ; //<S2SV> stream -> runtime -> buffer = buffer ; //<S2SV> stream -> runtime -> buffer_size = buffer_size ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 