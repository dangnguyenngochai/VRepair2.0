static void br_multicast_del_pg ( struct net_bridge * br , //<S2SV> struct net_bridge_port_group * pg ) //<S2SV> { //<S2SV> struct net_bridge_mdb_htable * mdb ; //<S2SV> struct net_bridge_mdb_entry * mp ; //<S2SV> struct net_bridge_port_group * p ; //<S2SV> struct net_bridge_port_group __rcu * * pp ; //<S2SV> mdb = mlock_dereference ( br -> mdb , br ) ; //<S2SV> mp = br_mdb_ip_get ( mdb , & pg -> addr ) ; //<S2SV> if ( WARN_ON ( ! mp ) ) //<S2SV> return ; //<S2SV> for ( pp = & mp -> ports ; //<S2SV> ( p = mlock_dereference ( * pp , br ) ) != NULL ; //<S2SV> pp = & p -> next ) { //<S2SV> if ( p != pg ) //<S2SV> continue ; //<S2SV> rcu_assign_pointer ( * pp , p -> next ) ; //<S2SV> hlist_del_init ( & p -> mglist ) ; //<S2SV> del_timer ( & p -> timer ) ; //<S2SV> call_rcu_bh ( & p -> rcu , br_multicast_free_pg ) ; //<S2SV> if ( ! mp -> ports && ! mp -> mglist && mp -> timer_armed && //<S2SV> netif_running ( br -> dev ) ) //<S2SV> mod_timer ( & mp -> timer , jiffies ) ; //<S2SV> return ; //<S2SV> } //<S2SV> WARN_ON ( 1 ) ; //<S2SV> } //<S2SV> 