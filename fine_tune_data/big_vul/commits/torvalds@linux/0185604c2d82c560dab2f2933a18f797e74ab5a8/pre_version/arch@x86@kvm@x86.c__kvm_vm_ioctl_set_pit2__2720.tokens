static int kvm_vm_ioctl_set_pit2 ( struct kvm * kvm , struct kvm_pit_state2 * ps ) //<S2SV> { //<S2SV> int start = 0 ; //<S2SV> u32 prev_legacy , cur_legacy ; //<S2SV> mutex_lock ( & kvm -> arch . vpit -> pit_state . lock ) ; //<S2SV> prev_legacy = kvm -> arch . vpit -> pit_state . flags & KVM_PIT_FLAGS_HPET_LEGACY ; //<S2SV> cur_legacy = ps -> flags & KVM_PIT_FLAGS_HPET_LEGACY ; //<S2SV> if ( ! prev_legacy && cur_legacy ) //<S2SV> start = 1 ; //<S2SV> memcpy ( & kvm -> arch . vpit -> pit_state . channels , & ps -> channels , //<S2SV> sizeof ( kvm -> arch . vpit -> pit_state . channels ) ) ; //<S2SV> kvm -> arch . vpit -> pit_state . flags = ps -> flags ; //<S2SV> kvm_pit_load_count ( kvm , 0 , kvm -> arch . vpit -> pit_state . channels [ 0 ] . count , start ) ; //<S2SV> mutex_unlock ( & kvm -> arch . vpit -> pit_state . lock ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 