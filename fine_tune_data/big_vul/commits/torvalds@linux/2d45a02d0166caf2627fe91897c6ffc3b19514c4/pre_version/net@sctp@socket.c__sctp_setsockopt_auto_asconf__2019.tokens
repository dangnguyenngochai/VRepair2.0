static int sctp_setsockopt_auto_asconf ( struct sock * sk , char __user * optval , //<S2SV> unsigned int optlen ) //<S2SV> { //<S2SV> int val ; //<S2SV> struct sctp_sock * sp = sctp_sk ( sk ) ; //<S2SV> if ( optlen < sizeof ( int ) ) //<S2SV> return - EINVAL ; //<S2SV> if ( get_user ( val , ( int __user * ) optval ) ) //<S2SV> return - EFAULT ; //<S2SV> if ( ! sctp_is_ep_boundall ( sk ) && val ) //<S2SV> return - EINVAL ; //<S2SV> if ( ( val && sp -> do_auto_asconf ) || ( ! val && ! sp -> do_auto_asconf ) ) //<S2SV> return 0 ; //<S2SV> if ( val == 0 && sp -> do_auto_asconf ) { //<S2SV> list_del ( & sp -> auto_asconf_list ) ; //<S2SV> sp -> do_auto_asconf = 0 ; //<S2SV> } else if ( val && ! sp -> do_auto_asconf ) { //<S2SV> list_add_tail ( & sp -> auto_asconf_list , //<S2SV> & sock_net ( sk ) -> sctp . auto_asconf_splist ) ; //<S2SV> sp -> do_auto_asconf = 1 ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 