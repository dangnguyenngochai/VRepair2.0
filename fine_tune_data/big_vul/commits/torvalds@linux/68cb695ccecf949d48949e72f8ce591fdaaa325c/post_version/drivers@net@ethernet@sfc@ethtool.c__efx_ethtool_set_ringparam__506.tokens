static int efx_ethtool_set_ringparam ( struct net_device * net_dev , //<S2SV> struct ethtool_ringparam * ring ) //<S2SV> { //<S2SV> struct efx_nic * efx = netdev_priv ( net_dev ) ; //<S2SV> u32 txq_entries ; //<S2SV> if ( ring -> rx_mini_pending || ring -> rx_jumbo_pending || //<S2SV> ring -> rx_pending > EFX_MAX_DMAQ_SIZE || //<S2SV> ring -> tx_pending > EFX_MAX_DMAQ_SIZE ) //<S2SV> return - EINVAL ; //<S2SV> if ( ring -> rx_pending < EFX_RXQ_MIN_ENT ) { //<S2SV> netif_err ( efx , drv , efx -> net_dev , //<S2SV> "RX<S2SV_blank>queues<S2SV_blank>cannot<S2SV_blank>be<S2SV_blank>smaller<S2SV_blank>than<S2SV_blank>%u\\n" , //<S2SV> EFX_RXQ_MIN_ENT ) ; //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> txq_entries = max ( ring -> tx_pending , EFX_TXQ_MIN_ENT ( efx ) ) ; //<S2SV> if ( txq_entries != ring -> tx_pending ) //<S2SV> netif_warn ( efx , drv , efx -> net_dev , //<S2SV> "increasing<S2SV_blank>TX<S2SV_blank>queue<S2SV_blank>size<S2SV_blank>to<S2SV_blank>minimum<S2SV_blank>of<S2SV_blank>%u\\n" , //<S2SV> txq_entries ) ; //<S2SV> return efx_realloc_channels ( efx , ring -> rx_pending , txq_entries ) ; //<S2SV> } //<S2SV> 