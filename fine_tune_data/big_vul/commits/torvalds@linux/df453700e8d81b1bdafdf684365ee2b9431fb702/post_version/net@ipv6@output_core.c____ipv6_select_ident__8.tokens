static u32 __ipv6_select_ident ( struct net * net , //<S2SV> const struct in6_addr * dst , //<S2SV> const struct in6_addr * src ) //<S2SV> { //<S2SV> const struct { //<S2SV> struct in6_addr dst ; //<S2SV> struct in6_addr src ; //<S2SV> } __aligned ( SIPHASH_ALIGNMENT ) combined = { //<S2SV> . dst = * dst , //<S2SV> . src = * src , //<S2SV> } ; //<S2SV> u32 hash , id ; //<S2SV> if ( unlikely ( siphash_key_is_zero ( & net -> ipv4 . ip_id_key ) ) ) //<S2SV> get_random_bytes ( & net -> ipv4 . ip_id_key , //<S2SV> sizeof ( net -> ipv4 . ip_id_key ) ) ; //<S2SV> hash = siphash ( & combined , sizeof ( combined ) , & net -> ipv4 . ip_id_key ) ; //<S2SV> id = ip_idents_reserve ( hash , 1 ) ; //<S2SV> if ( unlikely ( ! id ) ) //<S2SV> id = 1 << 31 ; //<S2SV> return id ; //<S2SV> } //<S2SV> 