void __ip_select_ident ( struct net * net , struct iphdr * iph , int segs ) //<S2SV> { //<S2SV> u32 hash , id ; //<S2SV> if ( unlikely ( siphash_key_is_zero ( & net -> ipv4 . ip_id_key ) ) ) //<S2SV> get_random_bytes ( & net -> ipv4 . ip_id_key , //<S2SV> sizeof ( net -> ipv4 . ip_id_key ) ) ; //<S2SV> hash = siphash_3u32 ( ( __force u32 ) iph -> daddr , //<S2SV> ( __force u32 ) iph -> saddr , //<S2SV> iph -> protocol , //<S2SV> & net -> ipv4 . ip_id_key ) ; //<S2SV> id = ip_idents_reserve ( hash , segs ) ; //<S2SV> iph -> id = htons ( id ) ; //<S2SV> } //<S2SV> 