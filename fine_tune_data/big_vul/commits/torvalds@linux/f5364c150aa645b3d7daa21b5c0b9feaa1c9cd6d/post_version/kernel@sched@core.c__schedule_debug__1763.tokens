static inline void schedule_debug ( struct task_struct * prev ) //<S2SV> { //<S2SV> # ifdef CONFIG_SCHED_STACK_END_CHECK //<S2SV> if ( task_stack_end_corrupted ( prev ) ) //<S2SV> panic ( "corrupted<S2SV_blank>stack<S2SV_blank>end<S2SV_blank>detected<S2SV_blank>inside<S2SV_blank>scheduler\\n" ) ; //<S2SV> # endif //<S2SV> if ( unlikely ( in_atomic_preempt_off ( ) ) ) { //<S2SV> __schedule_bug ( prev ) ; //<S2SV> preempt_count_set ( PREEMPT_DISABLED ) ; //<S2SV> } //<S2SV> rcu_sleep_check ( ) ; //<S2SV> profile_hit ( SCHED_PROFILING , __builtin_return_address ( 0 ) ) ; //<S2SV> schedstat_inc ( this_rq ( ) , sched_count ) ; //<S2SV> } //<S2SV> 