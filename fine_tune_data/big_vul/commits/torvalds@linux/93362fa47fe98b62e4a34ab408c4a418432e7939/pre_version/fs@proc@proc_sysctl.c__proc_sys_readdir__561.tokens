static int proc_sys_readdir ( struct file * file , struct dir_context * ctx ) //<S2SV> { //<S2SV> struct ctl_table_header * head = grab_header ( file_inode ( file ) ) ; //<S2SV> struct ctl_table_header * h = NULL ; //<S2SV> struct ctl_table * entry ; //<S2SV> struct ctl_dir * ctl_dir ; //<S2SV> unsigned long pos ; //<S2SV> if ( IS_ERR ( head ) ) //<S2SV> return PTR_ERR ( head ) ; //<S2SV> ctl_dir = container_of ( head , struct ctl_dir , header ) ; //<S2SV> if ( ! dir_emit_dots ( file , ctx ) ) //<S2SV> return 0 ; //<S2SV> pos = 2 ; //<S2SV> for ( first_entry ( ctl_dir , & h , & entry ) ; h ; next_entry ( & h , & entry ) ) { //<S2SV> if ( ! scan ( h , entry , & pos , file , ctx ) ) { //<S2SV> sysctl_head_finish ( h ) ; //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> sysctl_head_finish ( head ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 