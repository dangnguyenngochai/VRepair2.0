static int l2cap_sock_getname ( struct socket * sock , struct sockaddr * addr , int * len , int peer ) //<S2SV> { //<S2SV> struct sockaddr_l2 * la = ( struct sockaddr_l2 * ) addr ; //<S2SV> struct sock * sk = sock -> sk ; //<S2SV> struct l2cap_chan * chan = l2cap_pi ( sk ) -> chan ; //<S2SV> BT_DBG ( "sock<S2SV_blank>%p,<S2SV_blank>sk<S2SV_blank>%p" , sock , sk ) ; //<S2SV> addr -> sa_family = AF_BLUETOOTH ; //<S2SV> * len = sizeof ( struct sockaddr_l2 ) ; //<S2SV> if ( peer ) { //<S2SV> la -> l2_psm = chan -> psm ; //<S2SV> bacpy ( & la -> l2_bdaddr , & bt_sk ( sk ) -> dst ) ; //<S2SV> la -> l2_cid = cpu_to_le16 ( chan -> dcid ) ; //<S2SV> } else { //<S2SV> la -> l2_psm = chan -> sport ; //<S2SV> bacpy ( & la -> l2_bdaddr , & bt_sk ( sk ) -> src ) ; //<S2SV> la -> l2_cid = cpu_to_le16 ( chan -> scid ) ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 