static struct key * construct_key_and_link ( struct keyring_search_context * ctx , //<S2SV> const char * callout_info , //<S2SV> size_t callout_len , //<S2SV> void * aux , //<S2SV> struct key * dest_keyring , //<S2SV> unsigned long flags ) //<S2SV> { //<S2SV> struct key_user * user ; //<S2SV> struct key * key ; //<S2SV> int ret ; //<S2SV> kenter ( "" ) ; //<S2SV> if ( ctx -> index_key . type == & key_type_keyring ) //<S2SV> return ERR_PTR ( - EPERM ) ; //<S2SV> ret = construct_get_dest_keyring ( & dest_keyring ) ; //<S2SV> if ( ret ) //<S2SV> goto error ; //<S2SV> user = key_user_lookup ( current_fsuid ( ) ) ; //<S2SV> if ( ! user ) { //<S2SV> ret = - ENOMEM ; //<S2SV> goto error_put_dest_keyring ; //<S2SV> } //<S2SV> ret = construct_alloc_key ( ctx , dest_keyring , flags , user , & key ) ; //<S2SV> key_user_put ( user ) ; //<S2SV> if ( ret == 0 ) { //<S2SV> ret = construct_key ( key , callout_info , callout_len , aux , //<S2SV> dest_keyring ) ; //<S2SV> if ( ret < 0 ) { //<S2SV> kdebug ( "cons<S2SV_blank>failed" ) ; //<S2SV> goto construction_failed ; //<S2SV> } //<S2SV> } else if ( ret == - EINPROGRESS ) { //<S2SV> ret = 0 ; //<S2SV> } else { //<S2SV> goto error_put_dest_keyring ; //<S2SV> } //<S2SV> key_put ( dest_keyring ) ; //<S2SV> kleave ( "<S2SV_blank>=<S2SV_blank>key<S2SV_blank>%d" , key_serial ( key ) ) ; //<S2SV> return key ; //<S2SV> construction_failed : //<S2SV> key_negate_and_link ( key , key_negative_timeout , NULL , NULL ) ; //<S2SV> key_put ( key ) ; //<S2SV> error_put_dest_keyring : //<S2SV> key_put ( dest_keyring ) ; //<S2SV> error : //<S2SV> kleave ( "<S2SV_blank>=<S2SV_blank>%d" , ret ) ; //<S2SV> return ERR_PTR ( ret ) ; //<S2SV> } //<S2SV> 