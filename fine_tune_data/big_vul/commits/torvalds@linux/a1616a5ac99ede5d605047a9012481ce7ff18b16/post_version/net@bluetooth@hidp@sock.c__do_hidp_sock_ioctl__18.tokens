static int do_hidp_sock_ioctl ( struct socket * sock , unsigned int cmd , void __user * argp ) //<S2SV> { //<S2SV> struct hidp_connadd_req ca ; //<S2SV> struct hidp_conndel_req cd ; //<S2SV> struct hidp_connlist_req cl ; //<S2SV> struct hidp_conninfo ci ; //<S2SV> struct socket * csock ; //<S2SV> struct socket * isock ; //<S2SV> int err ; //<S2SV> BT_DBG ( "cmd<S2SV_blank>%x<S2SV_blank>arg<S2SV_blank>%p" , cmd , argp ) ; //<S2SV> switch ( cmd ) { //<S2SV> case HIDPCONNADD : //<S2SV> if ( ! capable ( CAP_NET_ADMIN ) ) //<S2SV> return - EPERM ; //<S2SV> if ( copy_from_user ( & ca , argp , sizeof ( ca ) ) ) //<S2SV> return - EFAULT ; //<S2SV> csock = sockfd_lookup ( ca . ctrl_sock , & err ) ; //<S2SV> if ( ! csock ) //<S2SV> return err ; //<S2SV> isock = sockfd_lookup ( ca . intr_sock , & err ) ; //<S2SV> if ( ! isock ) { //<S2SV> sockfd_put ( csock ) ; //<S2SV> return err ; //<S2SV> } //<S2SV> ca . name [ sizeof ( ca . name ) - 1 ] = 0 ; //<S2SV> err = hidp_connection_add ( & ca , csock , isock ) ; //<S2SV> if ( ! err && copy_to_user ( argp , & ca , sizeof ( ca ) ) ) //<S2SV> err = - EFAULT ; //<S2SV> sockfd_put ( csock ) ; //<S2SV> sockfd_put ( isock ) ; //<S2SV> return err ; //<S2SV> case HIDPCONNDEL : //<S2SV> if ( ! capable ( CAP_NET_ADMIN ) ) //<S2SV> return - EPERM ; //<S2SV> if ( copy_from_user ( & cd , argp , sizeof ( cd ) ) ) //<S2SV> return - EFAULT ; //<S2SV> return hidp_connection_del ( & cd ) ; //<S2SV> case HIDPGETCONNLIST : //<S2SV> if ( copy_from_user ( & cl , argp , sizeof ( cl ) ) ) //<S2SV> return - EFAULT ; //<S2SV> if ( cl . cnum <= 0 ) //<S2SV> return - EINVAL ; //<S2SV> err = hidp_get_connlist ( & cl ) ; //<S2SV> if ( ! err && copy_to_user ( argp , & cl , sizeof ( cl ) ) ) //<S2SV> return - EFAULT ; //<S2SV> return err ; //<S2SV> case HIDPGETCONNINFO : //<S2SV> if ( copy_from_user ( & ci , argp , sizeof ( ci ) ) ) //<S2SV> return - EFAULT ; //<S2SV> err = hidp_get_conninfo ( & ci ) ; //<S2SV> if ( ! err && copy_to_user ( argp , & ci , sizeof ( ci ) ) ) //<S2SV> return - EFAULT ; //<S2SV> return err ; //<S2SV> } //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> 