static ssize_t //<S2SV> bsg_write ( struct file * file , const char __user * buf , size_t count , loff_t * ppos ) //<S2SV> { //<S2SV> struct bsg_device * bd = file -> private_data ; //<S2SV> ssize_t bytes_written ; //<S2SV> int ret ; //<S2SV> dprintk ( "%s:<S2SV_blank>write<S2SV_blank>%Zd<S2SV_blank>bytes\\n" , bd -> name , count ) ; //<S2SV> if ( unlikely ( segment_eq ( get_fs ( ) , KERNEL_DS ) ) ) //<S2SV> return - EINVAL ; //<S2SV> bsg_set_block ( bd , file ) ; //<S2SV> bytes_written = 0 ; //<S2SV> ret = __bsg_write ( bd , buf , count , & bytes_written , //<S2SV> file -> f_mode & FMODE_WRITE ) ; //<S2SV> * ppos = bytes_written ; //<S2SV> if ( ! bytes_written || err_block_err ( ret ) ) //<S2SV> bytes_written = ret ; //<S2SV> dprintk ( "%s:<S2SV_blank>returning<S2SV_blank>%Zd\\n" , bd -> name , bytes_written ) ; //<S2SV> return bytes_written ; //<S2SV> } //<S2SV> 