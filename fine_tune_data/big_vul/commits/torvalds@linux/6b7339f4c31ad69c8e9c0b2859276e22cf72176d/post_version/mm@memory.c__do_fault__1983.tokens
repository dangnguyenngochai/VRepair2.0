static int do_fault ( struct mm_struct * mm , struct vm_area_struct * vma , //<S2SV> unsigned long address , pte_t * page_table , pmd_t * pmd , //<S2SV> unsigned int flags , pte_t orig_pte ) //<S2SV> { //<S2SV> pgoff_t pgoff = ( ( ( address & PAGE_MASK ) //<S2SV> - vma -> vm_start ) >> PAGE_SHIFT ) + vma -> vm_pgoff ; //<S2SV> pte_unmap ( page_table ) ; //<S2SV> if ( ! vma -> vm_ops -> fault ) //<S2SV> return VM_FAULT_SIGBUS ; //<S2SV> if ( ! ( flags & FAULT_FLAG_WRITE ) ) //<S2SV> return do_read_fault ( mm , vma , address , pmd , pgoff , flags , //<S2SV> orig_pte ) ; //<S2SV> if ( ! ( vma -> vm_flags & VM_SHARED ) ) //<S2SV> return do_cow_fault ( mm , vma , address , pmd , pgoff , flags , //<S2SV> orig_pte ) ; //<S2SV> return do_shared_fault ( mm , vma , address , pmd , pgoff , flags , orig_pte ) ; //<S2SV> } //<S2SV> 