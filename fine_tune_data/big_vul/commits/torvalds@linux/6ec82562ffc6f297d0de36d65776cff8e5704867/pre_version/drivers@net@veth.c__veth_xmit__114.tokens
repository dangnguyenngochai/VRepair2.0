static netdev_tx_t veth_xmit ( struct sk_buff * skb , struct net_device * dev ) //<S2SV> { //<S2SV> struct net_device * rcv = NULL ; //<S2SV> struct veth_priv * priv , * rcv_priv ; //<S2SV> struct veth_net_stats * stats , * rcv_stats ; //<S2SV> int length ; //<S2SV> priv = netdev_priv ( dev ) ; //<S2SV> rcv = priv -> peer ; //<S2SV> rcv_priv = netdev_priv ( rcv ) ; //<S2SV> stats = this_cpu_ptr ( priv -> stats ) ; //<S2SV> rcv_stats = this_cpu_ptr ( rcv_priv -> stats ) ; //<S2SV> if ( ! ( rcv -> flags & IFF_UP ) ) //<S2SV> goto tx_drop ; //<S2SV> if ( dev -> features & NETIF_F_NO_CSUM ) //<S2SV> skb -> ip_summed = rcv_priv -> ip_summed ; //<S2SV> length = skb -> len + ETH_HLEN ; //<S2SV> if ( dev_forward_skb ( rcv , skb ) != NET_RX_SUCCESS ) //<S2SV> goto rx_drop ; //<S2SV> stats -> tx_bytes += length ; //<S2SV> stats -> tx_packets ++ ; //<S2SV> rcv_stats -> rx_bytes += length ; //<S2SV> rcv_stats -> rx_packets ++ ; //<S2SV> return NETDEV_TX_OK ; //<S2SV> tx_drop : //<S2SV> kfree_skb ( skb ) ; //<S2SV> stats -> tx_dropped ++ ; //<S2SV> return NETDEV_TX_OK ; //<S2SV> rx_drop : //<S2SV> kfree_skb ( skb ) ; //<S2SV> rcv_stats -> rx_dropped ++ ; //<S2SV> return NETDEV_TX_OK ; //<S2SV> } //<S2SV> 