static int __dwc3_gadget_kick_transfer ( struct dwc3_ep * dep ) //<S2SV> { //<S2SV> struct dwc3_gadget_ep_cmd_params params ; //<S2SV> struct dwc3_request * req ; //<S2SV> int starting ; //<S2SV> int ret ; //<S2SV> u32 cmd ; //<S2SV> if ( ! dwc3_calc_trbs_left ( dep ) ) //<S2SV> return 0 ; //<S2SV> starting = ! ( dep -> flags & DWC3_EP_BUSY ) ; //<S2SV> dwc3_prepare_trbs ( dep ) ; //<S2SV> req = next_request ( & dep -> started_list ) ; //<S2SV> if ( ! req ) { //<S2SV> dep -> flags |= DWC3_EP_PENDING_REQUEST ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> memset ( & params , 0 , sizeof ( params ) ) ; //<S2SV> if ( starting ) { //<S2SV> params . param0 = upper_32_bits ( req -> trb_dma ) ; //<S2SV> params . param1 = lower_32_bits ( req -> trb_dma ) ; //<S2SV> cmd = DWC3_DEPCMD_STARTTRANSFER ; //<S2SV> if ( usb_endpoint_xfer_isoc ( dep -> endpoint . desc ) ) //<S2SV> cmd |= DWC3_DEPCMD_PARAM ( dep -> frame_number ) ; //<S2SV> } else { //<S2SV> cmd = DWC3_DEPCMD_UPDATETRANSFER | //<S2SV> DWC3_DEPCMD_PARAM ( dep -> resource_index ) ; //<S2SV> } //<S2SV> ret = dwc3_send_gadget_ep_cmd ( dep , cmd , & params ) ; //<S2SV> if ( ret < 0 ) { //<S2SV> if ( req -> trb ) //<S2SV> memset ( req -> trb , 0 , sizeof ( struct dwc3_trb ) ) ; //<S2SV> dep -> queued_requests -- ; //<S2SV> dwc3_gadget_del_and_unmap_request ( dep , req , ret ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> dep -> flags |= DWC3_EP_BUSY ; //<S2SV> if ( starting ) { //<S2SV> dep -> resource_index = dwc3_gadget_ep_get_transfer_index ( dep ) ; //<S2SV> WARN_ON_ONCE ( ! dep -> resource_index ) ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 