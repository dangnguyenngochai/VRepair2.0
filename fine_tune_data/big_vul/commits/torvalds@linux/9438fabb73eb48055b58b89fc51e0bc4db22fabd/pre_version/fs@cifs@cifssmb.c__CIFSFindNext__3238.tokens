int CIFSFindNext ( const int xid , struct cifs_tcon * tcon , //<S2SV> __u16 searchHandle , struct cifs_search_info * psrch_inf ) //<S2SV> { //<S2SV> TRANSACTION2_FNEXT_REQ * pSMB = NULL ; //<S2SV> TRANSACTION2_FNEXT_RSP * pSMBr = NULL ; //<S2SV> T2_FNEXT_RSP_PARMS * parms ; //<S2SV> char * response_data ; //<S2SV> int rc = 0 ; //<S2SV> int bytes_returned , name_len ; //<S2SV> __u16 params , byte_count ; //<S2SV> cFYI ( 1 , "In<S2SV_blank>FindNext" ) ; //<S2SV> if ( psrch_inf -> endOfSearch ) //<S2SV> return - ENOENT ; //<S2SV> rc = smb_init ( SMB_COM_TRANSACTION2 , 15 , tcon , ( void * * ) & pSMB , //<S2SV> ( void * * ) & pSMBr ) ; //<S2SV> if ( rc ) //<S2SV> return rc ; //<S2SV> params = 14 ; //<S2SV> byte_count = 0 ; //<S2SV> pSMB -> TotalDataCount = 0 ; //<S2SV> pSMB -> MaxParameterCount = cpu_to_le16 ( 8 ) ; //<S2SV> pSMB -> MaxDataCount = //<S2SV> cpu_to_le16 ( ( tcon -> ses -> server -> maxBuf - MAX_CIFS_HDR_SIZE ) & //<S2SV> 0xFFFFFF00 ) ; //<S2SV> pSMB -> MaxSetupCount = 0 ; //<S2SV> pSMB -> Reserved = 0 ; //<S2SV> pSMB -> Flags = 0 ; //<S2SV> pSMB -> Timeout = 0 ; //<S2SV> pSMB -> Reserved2 = 0 ; //<S2SV> pSMB -> ParameterOffset = cpu_to_le16 ( //<S2SV> offsetof ( struct smb_com_transaction2_fnext_req , SearchHandle ) - 4 ) ; //<S2SV> pSMB -> DataCount = 0 ; //<S2SV> pSMB -> DataOffset = 0 ; //<S2SV> pSMB -> SetupCount = 1 ; //<S2SV> pSMB -> Reserved3 = 0 ; //<S2SV> pSMB -> SubCommand = cpu_to_le16 ( TRANS2_FIND_NEXT ) ; //<S2SV> pSMB -> SearchHandle = searchHandle ; //<S2SV> pSMB -> SearchCount = //<S2SV> cpu_to_le16 ( CIFSMaxBufSize / sizeof ( FILE_UNIX_INFO ) ) ; //<S2SV> pSMB -> InformationLevel = cpu_to_le16 ( psrch_inf -> info_level ) ; //<S2SV> pSMB -> ResumeKey = psrch_inf -> resume_key ; //<S2SV> pSMB -> SearchFlags = //<S2SV> cpu_to_le16 ( CIFS_SEARCH_CLOSE_AT_END | CIFS_SEARCH_RETURN_RESUME ) ; //<S2SV> name_len = psrch_inf -> resume_name_len ; //<S2SV> params += name_len ; //<S2SV> if ( name_len < PATH_MAX ) { //<S2SV> memcpy ( pSMB -> ResumeFileName , psrch_inf -> presume_name , name_len ) ; //<S2SV> byte_count += name_len ; //<S2SV> pSMB -> ResumeFileName [ name_len ] = 0 ; //<S2SV> pSMB -> ResumeFileName [ name_len + 1 ] = 0 ; //<S2SV> } else { //<S2SV> rc = - EINVAL ; //<S2SV> goto FNext2_err_exit ; //<S2SV> } //<S2SV> byte_count = params + 1 ; //<S2SV> pSMB -> TotalParameterCount = cpu_to_le16 ( params ) ; //<S2SV> pSMB -> ParameterCount = pSMB -> TotalParameterCount ; //<S2SV> inc_rfc1001_len ( pSMB , byte_count ) ; //<S2SV> pSMB -> ByteCount = cpu_to_le16 ( byte_count ) ; //<S2SV> rc = SendReceive ( xid , tcon -> ses , ( struct smb_hdr * ) pSMB , //<S2SV> ( struct smb_hdr * ) pSMBr , & bytes_returned , 0 ) ; //<S2SV> cifs_stats_inc ( & tcon -> num_fnext ) ; //<S2SV> if ( rc ) { //<S2SV> if ( rc == - EBADF ) { //<S2SV> psrch_inf -> endOfSearch = true ; //<S2SV> cifs_buf_release ( pSMB ) ; //<S2SV> rc = 0 ; //<S2SV> } else //<S2SV> cFYI ( 1 , "FindNext<S2SV_blank>returned<S2SV_blank>=<S2SV_blank>%d" , rc ) ; //<S2SV> } else { //<S2SV> rc = validate_t2 ( ( struct smb_t2_rsp * ) pSMBr ) ; //<S2SV> if ( rc == 0 ) { //<S2SV> unsigned int lnoff ; //<S2SV> if ( pSMBr -> hdr . Flags2 & SMBFLG2_UNICODE ) //<S2SV> psrch_inf -> unicode = true ; //<S2SV> else //<S2SV> psrch_inf -> unicode = false ; //<S2SV> response_data = ( char * ) & pSMBr -> hdr . Protocol + //<S2SV> le16_to_cpu ( pSMBr -> t2 . ParameterOffset ) ; //<S2SV> parms = ( T2_FNEXT_RSP_PARMS * ) response_data ; //<S2SV> response_data = ( char * ) & pSMBr -> hdr . Protocol + //<S2SV> le16_to_cpu ( pSMBr -> t2 . DataOffset ) ; //<S2SV> if ( psrch_inf -> smallBuf ) //<S2SV> cifs_small_buf_release ( //<S2SV> psrch_inf -> ntwrk_buf_start ) ; //<S2SV> else //<S2SV> cifs_buf_release ( psrch_inf -> ntwrk_buf_start ) ; //<S2SV> psrch_inf -> srch_entries_start = response_data ; //<S2SV> psrch_inf -> ntwrk_buf_start = ( char * ) pSMB ; //<S2SV> psrch_inf -> smallBuf = 0 ; //<S2SV> if ( parms -> EndofSearch ) //<S2SV> psrch_inf -> endOfSearch = true ; //<S2SV> else //<S2SV> psrch_inf -> endOfSearch = false ; //<S2SV> psrch_inf -> entries_in_buffer = //<S2SV> le16_to_cpu ( parms -> SearchCount ) ; //<S2SV> psrch_inf -> index_of_last_entry += //<S2SV> psrch_inf -> entries_in_buffer ; //<S2SV> lnoff = le16_to_cpu ( parms -> LastNameOffset ) ; //<S2SV> if ( tcon -> ses -> server -> maxBuf - MAX_CIFS_HDR_SIZE < //<S2SV> lnoff ) { //<S2SV> cERROR ( 1 , "ignoring<S2SV_blank>corrupt<S2SV_blank>resume<S2SV_blank>name" ) ; //<S2SV> psrch_inf -> last_entry = NULL ; //<S2SV> return rc ; //<S2SV> } else //<S2SV> psrch_inf -> last_entry = //<S2SV> psrch_inf -> srch_entries_start + lnoff ; //<S2SV> } //<S2SV> } //<S2SV> FNext2_err_exit : //<S2SV> if ( rc != 0 ) //<S2SV> cifs_buf_release ( pSMB ) ; //<S2SV> return rc ; //<S2SV> } //<S2SV> 