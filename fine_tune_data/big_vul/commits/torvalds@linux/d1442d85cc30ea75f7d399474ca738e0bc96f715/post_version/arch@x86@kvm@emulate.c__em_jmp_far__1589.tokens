static int em_jmp_far ( struct x86_emulate_ctxt * ctxt ) //<S2SV> { //<S2SV> int rc ; //<S2SV> unsigned short sel , old_sel ; //<S2SV> struct desc_struct old_desc , new_desc ; //<S2SV> const struct x86_emulate_ops * ops = ctxt -> ops ; //<S2SV> u8 cpl = ctxt -> ops -> cpl ( ctxt ) ; //<S2SV> if ( ctxt -> mode == X86EMUL_MODE_PROT64 ) //<S2SV> ops -> get_segment ( ctxt , & old_sel , & old_desc , NULL , //<S2SV> VCPU_SREG_CS ) ; //<S2SV> memcpy ( & sel , ctxt -> src . valptr + ctxt -> op_bytes , 2 ) ; //<S2SV> rc = __load_segment_descriptor ( ctxt , sel , VCPU_SREG_CS , cpl , false , //<S2SV> & new_desc ) ; //<S2SV> if ( rc != X86EMUL_CONTINUE ) //<S2SV> return rc ; //<S2SV> rc = assign_eip_far ( ctxt , ctxt -> src . val , new_desc . l ) ; //<S2SV> if ( rc != X86EMUL_CONTINUE ) { //<S2SV> WARN_ON ( ! ctxt -> mode != X86EMUL_MODE_PROT64 ) ; //<S2SV> ops -> set_segment ( ctxt , old_sel , & old_desc , 0 , VCPU_SREG_CS ) ; //<S2SV> return rc ; //<S2SV> } //<S2SV> return rc ; //<S2SV> } //<S2SV> 