static int logi_dj_ll_raw_request ( struct hid_device * hid , //<S2SV> unsigned char reportnum , __u8 * buf , //<S2SV> size_t count , unsigned char report_type , //<S2SV> int reqtype ) //<S2SV> { //<S2SV> struct dj_device * djdev = hid -> driver_data ; //<S2SV> struct dj_receiver_dev * djrcv_dev = djdev -> dj_receiver_dev ; //<S2SV> u8 * out_buf ; //<S2SV> int ret ; //<S2SV> if ( buf [ 0 ] != REPORT_TYPE_LEDS ) //<S2SV> return - EINVAL ; //<S2SV> out_buf = kzalloc ( DJREPORT_SHORT_LENGTH , GFP_ATOMIC ) ; //<S2SV> if ( ! out_buf ) //<S2SV> return - ENOMEM ; //<S2SV> if ( count < DJREPORT_SHORT_LENGTH - 2 ) //<S2SV> count = DJREPORT_SHORT_LENGTH - 2 ; //<S2SV> out_buf [ 0 ] = REPORT_ID_DJ_SHORT ; //<S2SV> out_buf [ 1 ] = djdev -> device_index ; //<S2SV> memcpy ( out_buf + 2 , buf , count ) ; //<S2SV> ret = hid_hw_raw_request ( djrcv_dev -> hdev , out_buf [ 0 ] , out_buf , //<S2SV> DJREPORT_SHORT_LENGTH , report_type , reqtype ) ; //<S2SV> kfree ( out_buf ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 