static int iscsi_add_notunderstood_response ( //<S2SV> char * key , //<S2SV> char * value , //<S2SV> struct iscsi_param_list * param_list ) //<S2SV> { //<S2SV> struct iscsi_extra_response * extra_response ; //<S2SV> if ( strlen ( value ) > VALUE_MAXLEN ) { //<S2SV> pr_err ( "Value<S2SV_blank>for<S2SV_blank>notunderstood<S2SV_blank>key<S2SV_blank>\\"%s\\"<S2SV_blank>exceeds<S2SV_blank>%d," //<S2SV> "<S2SV_blank>protocol<S2SV_blank>error.\\n" , key , VALUE_MAXLEN ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> extra_response = kzalloc ( sizeof ( struct iscsi_extra_response ) , GFP_KERNEL ) ; //<S2SV> if ( ! extra_response ) { //<S2SV> pr_err ( "Unable<S2SV_blank>to<S2SV_blank>allocate<S2SV_blank>memory<S2SV_blank>for" //<S2SV> "<S2SV_blank>struct<S2SV_blank>iscsi_extra_response.\\n" ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> INIT_LIST_HEAD ( & extra_response -> er_list ) ; //<S2SV> strlcpy ( extra_response -> key , key , sizeof ( extra_response -> key ) ) ; //<S2SV> strlcpy ( extra_response -> value , NOTUNDERSTOOD , //<S2SV> sizeof ( extra_response -> value ) ) ; //<S2SV> list_add_tail ( & extra_response -> er_list , //<S2SV> & param_list -> extra_response_list ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 