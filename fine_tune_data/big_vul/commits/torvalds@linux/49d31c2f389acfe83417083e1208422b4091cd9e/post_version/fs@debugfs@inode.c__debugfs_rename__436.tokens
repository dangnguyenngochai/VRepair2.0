struct dentry * debugfs_rename ( struct dentry * old_dir , struct dentry * old_dentry , //<S2SV> struct dentry * new_dir , const char * new_name ) //<S2SV> { //<S2SV> int error ; //<S2SV> struct dentry * dentry = NULL , * trap ; //<S2SV> struct name_snapshot old_name ; //<S2SV> trap = lock_rename ( new_dir , old_dir ) ; //<S2SV> if ( d_really_is_negative ( old_dir ) || d_really_is_negative ( new_dir ) ) //<S2SV> goto exit ; //<S2SV> if ( d_really_is_negative ( old_dentry ) || old_dentry == trap || //<S2SV> d_mountpoint ( old_dentry ) ) //<S2SV> goto exit ; //<S2SV> dentry = lookup_one_len ( new_name , new_dir , strlen ( new_name ) ) ; //<S2SV> if ( IS_ERR ( dentry ) || dentry == trap || d_really_is_positive ( dentry ) ) //<S2SV> goto exit ; //<S2SV> take_dentry_name_snapshot ( & old_name , old_dentry ) ; //<S2SV> error = simple_rename ( d_inode ( old_dir ) , old_dentry , d_inode ( new_dir ) , //<S2SV> dentry , 0 ) ; //<S2SV> if ( error ) { //<S2SV> release_dentry_name_snapshot ( & old_name ) ; //<S2SV> goto exit ; //<S2SV> } //<S2SV> d_move ( old_dentry , dentry ) ; //<S2SV> fsnotify_move ( d_inode ( old_dir ) , d_inode ( new_dir ) , old_name . name , //<S2SV> d_is_dir ( old_dentry ) , //<S2SV> NULL , old_dentry ) ; //<S2SV> release_dentry_name_snapshot ( & old_name ) ; //<S2SV> unlock_rename ( new_dir , old_dir ) ; //<S2SV> dput ( dentry ) ; //<S2SV> return old_dentry ; //<S2SV> exit : //<S2SV> if ( dentry && ! IS_ERR ( dentry ) ) //<S2SV> dput ( dentry ) ; //<S2SV> unlock_rename ( new_dir , old_dir ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> 