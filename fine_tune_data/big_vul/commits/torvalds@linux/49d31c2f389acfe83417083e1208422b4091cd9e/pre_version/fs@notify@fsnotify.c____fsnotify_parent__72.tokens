int __fsnotify_parent ( const struct path * path , struct dentry * dentry , __u32 mask ) //<S2SV> { //<S2SV> struct dentry * parent ; //<S2SV> struct inode * p_inode ; //<S2SV> int ret = 0 ; //<S2SV> if ( ! dentry ) //<S2SV> dentry = path -> dentry ; //<S2SV> if ( ! ( dentry -> d_flags & DCACHE_FSNOTIFY_PARENT_WATCHED ) ) //<S2SV> return 0 ; //<S2SV> parent = dget_parent ( dentry ) ; //<S2SV> p_inode = parent -> d_inode ; //<S2SV> if ( unlikely ( ! fsnotify_inode_watches_children ( p_inode ) ) ) //<S2SV> __fsnotify_update_child_dentry_flags ( p_inode ) ; //<S2SV> else if ( p_inode -> i_fsnotify_mask & mask ) { //<S2SV> mask |= FS_EVENT_ON_CHILD ; //<S2SV> if ( path ) //<S2SV> ret = fsnotify ( p_inode , mask , path , FSNOTIFY_EVENT_PATH , //<S2SV> dentry -> d_name . name , 0 ) ; //<S2SV> else //<S2SV> ret = fsnotify ( p_inode , mask , dentry -> d_inode , FSNOTIFY_EVENT_INODE , //<S2SV> dentry -> d_name . name , 0 ) ; //<S2SV> } //<S2SV> dput ( parent ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 