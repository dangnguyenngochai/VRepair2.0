static int nci_extract_activation_params_iso_dep ( struct nci_dev * ndev , //<S2SV> struct nci_rf_intf_activated_ntf * ntf , __u8 * data ) //<S2SV> { //<S2SV> struct activation_params_nfca_poll_iso_dep * nfca_poll ; //<S2SV> struct activation_params_nfcb_poll_iso_dep * nfcb_poll ; //<S2SV> switch ( ntf -> activation_rf_tech_and_mode ) { //<S2SV> case NCI_NFC_A_PASSIVE_POLL_MODE : //<S2SV> nfca_poll = & ntf -> activation_params . nfca_poll_iso_dep ; //<S2SV> nfca_poll -> rats_res_len = min_t ( __u8 , * data ++ , 20 ) ; //<S2SV> pr_debug ( "rats_res_len<S2SV_blank>%d\\n" , nfca_poll -> rats_res_len ) ; //<S2SV> if ( nfca_poll -> rats_res_len > 0 ) { //<S2SV> memcpy ( nfca_poll -> rats_res , //<S2SV> data , nfca_poll -> rats_res_len ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case NCI_NFC_B_PASSIVE_POLL_MODE : //<S2SV> nfcb_poll = & ntf -> activation_params . nfcb_poll_iso_dep ; //<S2SV> nfcb_poll -> attrib_res_len = min_t ( __u8 , * data ++ , 50 ) ; //<S2SV> pr_debug ( "attrib_res_len<S2SV_blank>%d\\n" , nfcb_poll -> attrib_res_len ) ; //<S2SV> if ( nfcb_poll -> attrib_res_len > 0 ) { //<S2SV> memcpy ( nfcb_poll -> attrib_res , //<S2SV> data , nfcb_poll -> attrib_res_len ) ; //<S2SV> } //<S2SV> break ; //<S2SV> default : //<S2SV> pr_err ( "unsupported<S2SV_blank>activation_rf_tech_and_mode<S2SV_blank>0x%x\\n" , //<S2SV> ntf -> activation_rf_tech_and_mode ) ; //<S2SV> return NCI_STATUS_RF_PROTOCOL_ERROR ; //<S2SV> } //<S2SV> return NCI_STATUS_OK ; //<S2SV> } //<S2SV> 