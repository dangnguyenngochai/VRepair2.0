int rose_parse_facilities ( unsigned char * p , //<S2SV> struct rose_facilities_struct * facilities ) //<S2SV> { //<S2SV> int facilities_len , len ; //<S2SV> facilities_len = * p ++ ; //<S2SV> if ( facilities_len == 0 ) //<S2SV> return 0 ; //<S2SV> while ( facilities_len > 0 ) { //<S2SV> if ( * p == 0x00 ) { //<S2SV> facilities_len -- ; //<S2SV> p ++ ; //<S2SV> switch ( * p ) { //<S2SV> case FAC_NATIONAL : //<S2SV> len = rose_parse_national ( p + 1 , facilities , facilities_len - 1 ) ; //<S2SV> if ( len < 0 ) //<S2SV> return 0 ; //<S2SV> facilities_len -= len + 1 ; //<S2SV> p += len + 1 ; //<S2SV> break ; //<S2SV> case FAC_CCITT : //<S2SV> len = rose_parse_ccitt ( p + 1 , facilities , facilities_len - 1 ) ; //<S2SV> if ( len < 0 ) //<S2SV> return 0 ; //<S2SV> facilities_len -= len + 1 ; //<S2SV> p += len + 1 ; //<S2SV> break ; //<S2SV> default : //<S2SV> printk ( KERN_DEBUG "ROSE:<S2SV_blank>rose_parse_facilities<S2SV_blank>-<S2SV_blank>unknown<S2SV_blank>facilities<S2SV_blank>family<S2SV_blank>%02X\\n" , * p ) ; //<S2SV> facilities_len -- ; //<S2SV> p ++ ; //<S2SV> break ; //<S2SV> } //<S2SV> } else //<S2SV> break ; //<S2SV> } //<S2SV> return 1 ; //<S2SV> } //<S2SV> 