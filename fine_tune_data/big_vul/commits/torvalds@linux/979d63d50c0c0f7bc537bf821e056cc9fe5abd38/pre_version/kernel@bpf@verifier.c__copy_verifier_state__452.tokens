static int copy_verifier_state ( struct bpf_verifier_state * dst_state , //<S2SV> const struct bpf_verifier_state * src ) //<S2SV> { //<S2SV> struct bpf_func_state * dst ; //<S2SV> int i , err ; //<S2SV> for ( i = src -> curframe + 1 ; i <= dst_state -> curframe ; i ++ ) { //<S2SV> free_func_state ( dst_state -> frame [ i ] ) ; //<S2SV> dst_state -> frame [ i ] = NULL ; //<S2SV> } //<S2SV> dst_state -> curframe = src -> curframe ; //<S2SV> for ( i = 0 ; i <= src -> curframe ; i ++ ) { //<S2SV> dst = dst_state -> frame [ i ] ; //<S2SV> if ( ! dst ) { //<S2SV> dst = kzalloc ( sizeof ( * dst ) , GFP_KERNEL ) ; //<S2SV> if ( ! dst ) //<S2SV> return - ENOMEM ; //<S2SV> dst_state -> frame [ i ] = dst ; //<S2SV> } //<S2SV> err = copy_func_state ( dst , src -> frame [ i ] ) ; //<S2SV> if ( err ) //<S2SV> return err ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 