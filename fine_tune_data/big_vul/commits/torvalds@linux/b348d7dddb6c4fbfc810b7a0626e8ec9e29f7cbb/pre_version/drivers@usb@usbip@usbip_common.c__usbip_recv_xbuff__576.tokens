int usbip_recv_xbuff ( struct usbip_device * ud , struct urb * urb ) //<S2SV> { //<S2SV> int ret ; //<S2SV> int size ; //<S2SV> if ( ud -> side == USBIP_STUB ) { //<S2SV> if ( usb_pipein ( urb -> pipe ) ) //<S2SV> return 0 ; //<S2SV> size = urb -> transfer_buffer_length ; //<S2SV> } else { //<S2SV> if ( usb_pipeout ( urb -> pipe ) ) //<S2SV> return 0 ; //<S2SV> size = urb -> actual_length ; //<S2SV> } //<S2SV> if ( ! ( size > 0 ) ) //<S2SV> return 0 ; //<S2SV> ret = usbip_recv ( ud -> tcp_socket , urb -> transfer_buffer , size ) ; //<S2SV> if ( ret != size ) { //<S2SV> dev_err ( & urb -> dev -> dev , "recv<S2SV_blank>xbuf,<S2SV_blank>%d\\n" , ret ) ; //<S2SV> if ( ud -> side == USBIP_STUB ) { //<S2SV> usbip_event_add ( ud , SDEV_EVENT_ERROR_TCP ) ; //<S2SV> } else { //<S2SV> usbip_event_add ( ud , VDEV_EVENT_ERROR_TCP ) ; //<S2SV> return - EPIPE ; //<S2SV> } //<S2SV> } //<S2SV> return ret ; //<S2SV> } //<S2SV> 