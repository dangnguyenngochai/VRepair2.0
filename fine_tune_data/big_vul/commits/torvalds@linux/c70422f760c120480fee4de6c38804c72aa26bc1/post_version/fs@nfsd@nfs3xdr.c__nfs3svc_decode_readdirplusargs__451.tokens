int //<S2SV> nfs3svc_decode_readdirplusargs ( struct svc_rqst * rqstp , __be32 * p , //<S2SV> struct nfsd3_readdirargs * args ) //<S2SV> { //<S2SV> int len ; //<S2SV> u32 max_blocksize = svc_max_payload ( rqstp ) ; //<S2SV> p = decode_fh ( p , & args -> fh ) ; //<S2SV> if ( ! p ) //<S2SV> return 0 ; //<S2SV> p = xdr_decode_hyper ( p , & args -> cookie ) ; //<S2SV> args -> verf = p ; p += 2 ; //<S2SV> args -> dircount = ntohl ( * p ++ ) ; //<S2SV> args -> count = ntohl ( * p ++ ) ; //<S2SV> if ( ! xdr_argsize_check ( rqstp , p ) ) //<S2SV> return 0 ; //<S2SV> len = args -> count = min ( args -> count , max_blocksize ) ; //<S2SV> while ( len > 0 ) { //<S2SV> struct page * p = * ( rqstp -> rq_next_page ++ ) ; //<S2SV> if ( ! args -> buffer ) //<S2SV> args -> buffer = page_address ( p ) ; //<S2SV> len -= PAGE_SIZE ; //<S2SV> } //<S2SV> return 1 ; //<S2SV> } //<S2SV> 