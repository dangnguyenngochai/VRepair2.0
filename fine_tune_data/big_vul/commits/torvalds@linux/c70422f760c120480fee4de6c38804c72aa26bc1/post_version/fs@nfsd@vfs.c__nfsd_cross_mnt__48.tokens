int //<S2SV> nfsd_cross_mnt ( struct svc_rqst * rqstp , struct dentry * * dpp , //<S2SV> struct svc_export * * expp ) //<S2SV> { //<S2SV> struct svc_export * exp = * expp , * exp2 = NULL ; //<S2SV> struct dentry * dentry = * dpp ; //<S2SV> struct path path = { . mnt = mntget ( exp -> ex_path . mnt ) , //<S2SV> . dentry = dget ( dentry ) } ; //<S2SV> int err = 0 ; //<S2SV> err = follow_down ( & path ) ; //<S2SV> if ( err < 0 ) //<S2SV> goto out ; //<S2SV> if ( path . mnt == exp -> ex_path . mnt && path . dentry == dentry && //<S2SV> nfsd_mountpoint ( dentry , exp ) == 2 ) { //<S2SV> path_put ( & path ) ; //<S2SV> goto out ; //<S2SV> } //<S2SV> exp2 = rqst_exp_get_by_name ( rqstp , & path ) ; //<S2SV> if ( IS_ERR ( exp2 ) ) { //<S2SV> err = PTR_ERR ( exp2 ) ; //<S2SV> if ( err == - ENOENT && ! ( exp -> ex_flags & NFSEXP_V4ROOT ) ) //<S2SV> err = 0 ; //<S2SV> path_put ( & path ) ; //<S2SV> goto out ; //<S2SV> } //<S2SV> if ( nfsd_v4client ( rqstp ) || //<S2SV> ( exp -> ex_flags & NFSEXP_CROSSMOUNT ) || EX_NOHIDE ( exp2 ) ) { //<S2SV> * dpp = path . dentry ; //<S2SV> path . dentry = dentry ; //<S2SV> * expp = exp2 ; //<S2SV> exp2 = exp ; //<S2SV> } //<S2SV> path_put ( & path ) ; //<S2SV> exp_put ( exp2 ) ; //<S2SV> out : //<S2SV> return err ; //<S2SV> } //<S2SV> 