static int n_tty_ioctl ( struct tty_struct * tty , struct file * file , //<S2SV> unsigned int cmd , unsigned long arg ) //<S2SV> { //<S2SV> struct n_tty_data * ldata = tty -> disc_data ; //<S2SV> int retval ; //<S2SV> switch ( cmd ) { //<S2SV> case TIOCOUTQ : //<S2SV> return put_user ( tty_chars_in_buffer ( tty ) , ( int __user * ) arg ) ; //<S2SV> case TIOCINQ : //<S2SV> down_write ( & tty -> termios_rwsem ) ; //<S2SV> if ( L_ICANON ( tty ) ) //<S2SV> retval = inq_canon ( ldata ) ; //<S2SV> else //<S2SV> retval = read_cnt ( ldata ) ; //<S2SV> up_write ( & tty -> termios_rwsem ) ; //<S2SV> return put_user ( retval , ( unsigned int __user * ) arg ) ; //<S2SV> default : //<S2SV> return n_tty_ioctl_helper ( tty , file , cmd , arg ) ; //<S2SV> } //<S2SV> } //<S2SV> 