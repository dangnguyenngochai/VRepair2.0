static void ext2_put_super ( struct super_block * sb ) //<S2SV> { //<S2SV> int db_count ; //<S2SV> int i ; //<S2SV> struct ext2_sb_info * sbi = EXT2_SB ( sb ) ; //<S2SV> dquot_disable ( sb , - 1 , DQUOT_USAGE_ENABLED | DQUOT_LIMITS_ENABLED ) ; //<S2SV> if ( sbi -> s_mb_cache ) { //<S2SV> ext2_xattr_destroy_cache ( sbi -> s_mb_cache ) ; //<S2SV> sbi -> s_mb_cache = NULL ; //<S2SV> } //<S2SV> if ( ! ( sb -> s_flags & MS_RDONLY ) ) { //<S2SV> struct ext2_super_block * es = sbi -> s_es ; //<S2SV> spin_lock ( & sbi -> s_lock ) ; //<S2SV> es -> s_state = cpu_to_le16 ( sbi -> s_mount_state ) ; //<S2SV> spin_unlock ( & sbi -> s_lock ) ; //<S2SV> ext2_sync_super ( sb , es , 1 ) ; //<S2SV> } //<S2SV> db_count = sbi -> s_gdb_count ; //<S2SV> for ( i = 0 ; i < db_count ; i ++ ) //<S2SV> if ( sbi -> s_group_desc [ i ] ) //<S2SV> brelse ( sbi -> s_group_desc [ i ] ) ; //<S2SV> kfree ( sbi -> s_group_desc ) ; //<S2SV> kfree ( sbi -> s_debts ) ; //<S2SV> percpu_counter_destroy ( & sbi -> s_freeblocks_counter ) ; //<S2SV> percpu_counter_destroy ( & sbi -> s_freeinodes_counter ) ; //<S2SV> percpu_counter_destroy ( & sbi -> s_dirs_counter ) ; //<S2SV> brelse ( sbi -> s_sbh ) ; //<S2SV> sb -> s_fs_info = NULL ; //<S2SV> kfree ( sbi -> s_blockgroup_lock ) ; //<S2SV> kfree ( sbi ) ; //<S2SV> } //<S2SV> 