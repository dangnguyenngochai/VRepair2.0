static int orinoco_ioctl_set_auth ( struct net_device * dev , //<S2SV> struct iw_request_info * info , //<S2SV> union iwreq_data * wrqu , char * extra ) //<S2SV> { //<S2SV> struct orinoco_private * priv = ndev_priv ( dev ) ; //<S2SV> hermes_t * hw = & priv -> hw ; //<S2SV> struct iw_param * param = & wrqu -> param ; //<S2SV> unsigned long flags ; //<S2SV> int ret = - EINPROGRESS ; //<S2SV> if ( orinoco_lock ( priv , & flags ) != 0 ) //<S2SV> return - EBUSY ; //<S2SV> switch ( param -> flags & IW_AUTH_INDEX ) { //<S2SV> case IW_AUTH_WPA_VERSION : //<S2SV> case IW_AUTH_CIPHER_PAIRWISE : //<S2SV> case IW_AUTH_CIPHER_GROUP : //<S2SV> case IW_AUTH_RX_UNENCRYPTED_EAPOL : //<S2SV> case IW_AUTH_PRIVACY_INVOKED : //<S2SV> case IW_AUTH_DROP_UNENCRYPTED : //<S2SV> break ; //<S2SV> case IW_AUTH_KEY_MGMT : //<S2SV> priv -> key_mgmt = param -> value ; //<S2SV> break ; //<S2SV> case IW_AUTH_TKIP_COUNTERMEASURES : //<S2SV> if ( param -> value ) { //<S2SV> priv -> tkip_cm_active = 1 ; //<S2SV> ret = hermes_enable_port ( hw , 0 ) ; //<S2SV> } else { //<S2SV> priv -> tkip_cm_active = 0 ; //<S2SV> ret = hermes_disable_port ( hw , 0 ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case IW_AUTH_80211_AUTH_ALG : //<S2SV> if ( param -> value & IW_AUTH_ALG_SHARED_KEY ) //<S2SV> priv -> wep_restrict = 1 ; //<S2SV> else if ( param -> value & IW_AUTH_ALG_OPEN_SYSTEM ) //<S2SV> priv -> wep_restrict = 0 ; //<S2SV> else //<S2SV> ret = - EINVAL ; //<S2SV> break ; //<S2SV> case IW_AUTH_WPA_ENABLED : //<S2SV> if ( priv -> has_wpa ) { //<S2SV> priv -> wpa_enabled = param -> value ? 1 : 0 ; //<S2SV> } else { //<S2SV> if ( param -> value ) //<S2SV> ret = - EOPNOTSUPP ; //<S2SV> priv -> wpa_enabled = 0 ; //<S2SV> } //<S2SV> break ; //<S2SV> default : //<S2SV> ret = - EOPNOTSUPP ; //<S2SV> } //<S2SV> orinoco_unlock ( priv , & flags ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 