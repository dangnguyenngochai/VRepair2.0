static int t220_frontend_attach ( struct dvb_usb_adapter * adap ) //<S2SV> { //<S2SV> struct dvb_usb_device * d = adap -> dev ; //<S2SV> struct dw2102_state * state = d -> priv ; //<S2SV> mutex_lock ( & d -> data_mutex ) ; //<S2SV> state -> data [ 0 ] = 0xe ; //<S2SV> state -> data [ 1 ] = 0x87 ; //<S2SV> state -> data [ 2 ] = 0x0 ; //<S2SV> if ( dvb_usb_generic_rw ( d , state -> data , 3 , state -> data , 1 , 0 ) < 0 ) //<S2SV> err ( "command<S2SV_blank>0x0e<S2SV_blank>transfer<S2SV_blank>failed." ) ; //<S2SV> state -> data [ 0 ] = 0xe ; //<S2SV> state -> data [ 1 ] = 0x86 ; //<S2SV> state -> data [ 2 ] = 1 ; //<S2SV> if ( dvb_usb_generic_rw ( d , state -> data , 3 , state -> data , 1 , 0 ) < 0 ) //<S2SV> err ( "command<S2SV_blank>0x0e<S2SV_blank>transfer<S2SV_blank>failed." ) ; //<S2SV> state -> data [ 0 ] = 0xe ; //<S2SV> state -> data [ 1 ] = 0x80 ; //<S2SV> state -> data [ 2 ] = 0 ; //<S2SV> if ( dvb_usb_generic_rw ( d , state -> data , 3 , state -> data , 1 , 0 ) < 0 ) //<S2SV> err ( "command<S2SV_blank>0x0e<S2SV_blank>transfer<S2SV_blank>failed." ) ; //<S2SV> msleep ( 50 ) ; //<S2SV> state -> data [ 0 ] = 0xe ; //<S2SV> state -> data [ 1 ] = 0x80 ; //<S2SV> state -> data [ 2 ] = 1 ; //<S2SV> if ( dvb_usb_generic_rw ( d , state -> data , 3 , state -> data , 1 , 0 ) < 0 ) //<S2SV> err ( "command<S2SV_blank>0x0e<S2SV_blank>transfer<S2SV_blank>failed." ) ; //<S2SV> state -> data [ 0 ] = 0x51 ; //<S2SV> if ( dvb_usb_generic_rw ( d , state -> data , 1 , state -> data , 1 , 0 ) < 0 ) //<S2SV> err ( "command<S2SV_blank>0x51<S2SV_blank>transfer<S2SV_blank>failed." ) ; //<S2SV> mutex_unlock ( & d -> data_mutex ) ; //<S2SV> adap -> fe_adap [ 0 ] . fe = dvb_attach ( cxd2820r_attach , & cxd2820r_config , //<S2SV> & d -> i2c_adap , NULL ) ; //<S2SV> if ( adap -> fe_adap [ 0 ] . fe != NULL ) { //<S2SV> if ( dvb_attach ( tda18271_attach , adap -> fe_adap [ 0 ] . fe , 0x60 , //<S2SV> & d -> i2c_adap , & tda18271_config ) ) { //<S2SV> info ( "Attached<S2SV_blank>TDA18271HD/CXD2820R!" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> } //<S2SV> info ( "Failed<S2SV_blank>to<S2SV_blank>attach<S2SV_blank>TDA18271HD/CXD2820R!" ) ; //<S2SV> return - EIO ; //<S2SV> } //<S2SV> 