static struct nvmet_fc_tgt_queue * //<S2SV> nvmet_fc_find_target_queue ( struct nvmet_fc_tgtport * tgtport , //<S2SV> u64 connection_id ) //<S2SV> { //<S2SV> struct nvmet_fc_tgt_assoc * assoc ; //<S2SV> struct nvmet_fc_tgt_queue * queue ; //<S2SV> u64 association_id = nvmet_fc_getassociationid ( connection_id ) ; //<S2SV> u16 qid = nvmet_fc_getqueueid ( connection_id ) ; //<S2SV> unsigned long flags ; //<S2SV> if ( qid > NVMET_NR_QUEUES ) //<S2SV> return NULL ; //<S2SV> spin_lock_irqsave ( & tgtport -> lock , flags ) ; //<S2SV> list_for_each_entry ( assoc , & tgtport -> assoc_list , a_list ) { //<S2SV> if ( association_id == assoc -> association_id ) { //<S2SV> queue = assoc -> queues [ qid ] ; //<S2SV> if ( queue && //<S2SV> ( ! atomic_read ( & queue -> connected ) || //<S2SV> ! nvmet_fc_tgt_q_get ( queue ) ) ) //<S2SV> queue = NULL ; //<S2SV> spin_unlock_irqrestore ( & tgtport -> lock , flags ) ; //<S2SV> return queue ; //<S2SV> } //<S2SV> } //<S2SV> spin_unlock_irqrestore ( & tgtport -> lock , flags ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> 