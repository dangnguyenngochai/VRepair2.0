int verify_compat_iovec ( struct msghdr * kern_msg , struct iovec * kern_iov , //<S2SV> struct sockaddr_storage * kern_address , int mode ) //<S2SV> { //<S2SV> int tot_len ; //<S2SV> if ( kern_msg -> msg_namelen ) { //<S2SV> if ( mode == VERIFY_READ ) { //<S2SV> int err = move_addr_to_kernel ( kern_msg -> msg_name , //<S2SV> kern_msg -> msg_namelen , //<S2SV> kern_address ) ; //<S2SV> if ( err < 0 ) //<S2SV> return err ; //<S2SV> } //<S2SV> if ( kern_msg -> msg_name ) //<S2SV> kern_msg -> msg_name = kern_address ; //<S2SV> } else //<S2SV> kern_msg -> msg_name = NULL ; //<S2SV> tot_len = iov_from_user_compat_to_kern ( kern_iov , //<S2SV> ( struct compat_iovec __user * ) kern_msg -> msg_iov , //<S2SV> kern_msg -> msg_iovlen ) ; //<S2SV> if ( tot_len >= 0 ) //<S2SV> kern_msg -> msg_iov = kern_iov ; //<S2SV> return tot_len ; //<S2SV> } //<S2SV> 