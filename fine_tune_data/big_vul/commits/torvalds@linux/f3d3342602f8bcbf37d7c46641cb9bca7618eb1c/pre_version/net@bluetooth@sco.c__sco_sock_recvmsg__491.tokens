static int sco_sock_recvmsg ( struct kiocb * iocb , struct socket * sock , //<S2SV> struct msghdr * msg , size_t len , int flags ) //<S2SV> { //<S2SV> struct sock * sk = sock -> sk ; //<S2SV> struct sco_pinfo * pi = sco_pi ( sk ) ; //<S2SV> lock_sock ( sk ) ; //<S2SV> if ( sk -> sk_state == BT_CONNECT2 && //<S2SV> test_bit ( BT_SK_DEFER_SETUP , & bt_sk ( sk ) -> flags ) ) { //<S2SV> sco_conn_defer_accept ( pi -> conn -> hcon , pi -> setting ) ; //<S2SV> sk -> sk_state = BT_CONFIG ; //<S2SV> msg -> msg_namelen = 0 ; //<S2SV> release_sock ( sk ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> release_sock ( sk ) ; //<S2SV> return bt_sock_recvmsg ( iocb , sock , msg , len , flags ) ; //<S2SV> } //<S2SV> 