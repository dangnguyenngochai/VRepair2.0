void sctp_generate_proto_unreach_event ( unsigned long data ) //<S2SV> { //<S2SV> struct sctp_transport * transport = ( struct sctp_transport * ) data ; //<S2SV> struct sctp_association * asoc = transport -> asoc ; //<S2SV> struct net * net = sock_net ( asoc -> base . sk ) ; //<S2SV> bh_lock_sock ( asoc -> base . sk ) ; //<S2SV> if ( sock_owned_by_user ( asoc -> base . sk ) ) { //<S2SV> pr_debug ( "%s:<S2SV_blank>sock<S2SV_blank>is<S2SV_blank>busy\\n" , __func__ ) ; //<S2SV> if ( ! mod_timer ( & transport -> proto_unreach_timer , //<S2SV> jiffies + ( HZ / 20 ) ) ) //<S2SV> sctp_association_hold ( asoc ) ; //<S2SV> goto out_unlock ; //<S2SV> } //<S2SV> if ( asoc -> base . dead ) //<S2SV> goto out_unlock ; //<S2SV> sctp_do_sm ( net , SCTP_EVENT_T_OTHER , //<S2SV> SCTP_ST_OTHER ( SCTP_EVENT_ICMP_PROTO_UNREACH ) , //<S2SV> asoc -> state , asoc -> ep , asoc , transport , GFP_ATOMIC ) ; //<S2SV> out_unlock : //<S2SV> bh_unlock_sock ( asoc -> base . sk ) ; //<S2SV> sctp_association_put ( asoc ) ; //<S2SV> } //<S2SV> 