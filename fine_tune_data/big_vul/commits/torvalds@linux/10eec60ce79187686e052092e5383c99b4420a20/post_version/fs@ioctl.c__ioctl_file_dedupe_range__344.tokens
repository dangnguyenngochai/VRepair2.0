static long ioctl_file_dedupe_range ( struct file * file , void __user * arg ) //<S2SV> { //<S2SV> struct file_dedupe_range __user * argp = arg ; //<S2SV> struct file_dedupe_range * same = NULL ; //<S2SV> int ret ; //<S2SV> unsigned long size ; //<S2SV> u16 count ; //<S2SV> if ( get_user ( count , & argp -> dest_count ) ) { //<S2SV> ret = - EFAULT ; //<S2SV> goto out ; //<S2SV> } //<S2SV> size = offsetof ( struct file_dedupe_range __user , info [ count ] ) ; //<S2SV> same = memdup_user ( argp , size ) ; //<S2SV> if ( IS_ERR ( same ) ) { //<S2SV> ret = PTR_ERR ( same ) ; //<S2SV> same = NULL ; //<S2SV> goto out ; //<S2SV> } //<S2SV> same -> dest_count = count ; //<S2SV> ret = vfs_dedupe_file_range ( file , same ) ; //<S2SV> if ( ret ) //<S2SV> goto out ; //<S2SV> ret = copy_to_user ( argp , same , size ) ; //<S2SV> if ( ret ) //<S2SV> ret = - EFAULT ; //<S2SV> out : //<S2SV> kfree ( same ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 