static int keyring_search_iterator ( const void * object , void * iterator_data ) //<S2SV> { //<S2SV> struct keyring_search_context * ctx = iterator_data ; //<S2SV> const struct key * key = keyring_ptr_to_key ( object ) ; //<S2SV> unsigned long kflags = key -> flags ; //<S2SV> kenter ( "{%d}" , key -> serial ) ; //<S2SV> if ( key -> type != ctx -> index_key . type ) { //<S2SV> kleave ( "<S2SV_blank>=<S2SV_blank>0<S2SV_blank>[!type]" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( ctx -> flags & KEYRING_SEARCH_DO_STATE_CHECK ) { //<S2SV> if ( kflags & ( ( 1 << KEY_FLAG_INVALIDATED ) | //<S2SV> ( 1 << KEY_FLAG_REVOKED ) ) ) { //<S2SV> ctx -> result = ERR_PTR ( - EKEYREVOKED ) ; //<S2SV> kleave ( "<S2SV_blank>=<S2SV_blank>%d<S2SV_blank>[invrev]" , ctx -> skipped_ret ) ; //<S2SV> goto skipped ; //<S2SV> } //<S2SV> if ( key -> expiry && ctx -> now . tv_sec >= key -> expiry ) { //<S2SV> if ( ! ( ctx -> flags & KEYRING_SEARCH_SKIP_EXPIRED ) ) //<S2SV> ctx -> result = ERR_PTR ( - EKEYEXPIRED ) ; //<S2SV> kleave ( "<S2SV_blank>=<S2SV_blank>%d<S2SV_blank>[expire]" , ctx -> skipped_ret ) ; //<S2SV> goto skipped ; //<S2SV> } //<S2SV> } //<S2SV> if ( ! ctx -> match_data . cmp ( key , & ctx -> match_data ) ) { //<S2SV> kleave ( "<S2SV_blank>=<S2SV_blank>0<S2SV_blank>[!match]" ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> if ( ! ( ctx -> flags & KEYRING_SEARCH_NO_CHECK_PERM ) && //<S2SV> key_task_permission ( make_key_ref ( key , ctx -> possessed ) , //<S2SV> ctx -> cred , KEY_NEED_SEARCH ) < 0 ) { //<S2SV> ctx -> result = ERR_PTR ( - EACCES ) ; //<S2SV> kleave ( "<S2SV_blank>=<S2SV_blank>%d<S2SV_blank>[!perm]" , ctx -> skipped_ret ) ; //<S2SV> goto skipped ; //<S2SV> } //<S2SV> if ( ctx -> flags & KEYRING_SEARCH_DO_STATE_CHECK ) { //<S2SV> if ( kflags & ( 1 << KEY_FLAG_NEGATIVE ) ) { //<S2SV> smp_rmb ( ) ; //<S2SV> ctx -> result = ERR_PTR ( key -> reject_error ) ; //<S2SV> kleave ( "<S2SV_blank>=<S2SV_blank>%d<S2SV_blank>[neg]" , ctx -> skipped_ret ) ; //<S2SV> goto skipped ; //<S2SV> } //<S2SV> } //<S2SV> ctx -> result = make_key_ref ( key , ctx -> possessed ) ; //<S2SV> kleave ( "<S2SV_blank>=<S2SV_blank>1<S2SV_blank>[found]" ) ; //<S2SV> return 1 ; //<S2SV> skipped : //<S2SV> return ctx -> skipped_ret ; //<S2SV> } //<S2SV> 