static inline key_ref_t __key_update ( key_ref_t key_ref , //<S2SV> struct key_preparsed_payload * prep ) //<S2SV> { //<S2SV> struct key * key = key_ref_to_ptr ( key_ref ) ; //<S2SV> int ret ; //<S2SV> ret = key_permission ( key_ref , KEY_NEED_WRITE ) ; //<S2SV> if ( ret < 0 ) //<S2SV> goto error ; //<S2SV> ret = - EEXIST ; //<S2SV> if ( ! key -> type -> update ) //<S2SV> goto error ; //<S2SV> down_write ( & key -> sem ) ; //<S2SV> ret = key -> type -> update ( key , prep ) ; //<S2SV> if ( ret == 0 ) //<S2SV> mark_key_instantiated ( key , 0 ) ; //<S2SV> up_write ( & key -> sem ) ; //<S2SV> if ( ret < 0 ) //<S2SV> goto error ; //<S2SV> out : //<S2SV> return key_ref ; //<S2SV> error : //<S2SV> key_put ( key ) ; //<S2SV> key_ref = ERR_PTR ( ret ) ; //<S2SV> goto out ; //<S2SV> } //<S2SV> 