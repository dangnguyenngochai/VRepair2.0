static struct cifsSesInfo * //<S2SV> cifs_find_smb_ses ( struct TCP_Server_Info * server , struct smb_vol * vol ) //<S2SV> { //<S2SV> struct cifsSesInfo * ses ; //<S2SV> write_lock ( & cifs_tcp_ses_lock ) ; //<S2SV> list_for_each_entry ( ses , & server -> smb_ses_list , smb_ses_list ) { //<S2SV> switch ( server -> secType ) { //<S2SV> case Kerberos : //<S2SV> if ( vol -> linux_uid != ses -> linux_uid ) //<S2SV> continue ; //<S2SV> break ; //<S2SV> default : //<S2SV> if ( strncmp ( ses -> userName , vol -> username , //<S2SV> MAX_USERNAME_SIZE ) ) //<S2SV> continue ; //<S2SV> if ( strlen ( vol -> username ) != 0 && //<S2SV> strncmp ( ses -> password , vol -> password , //<S2SV> MAX_PASSWORD_SIZE ) ) //<S2SV> continue ; //<S2SV> } //<S2SV> ++ ses -> ses_count ; //<S2SV> write_unlock ( & cifs_tcp_ses_lock ) ; //<S2SV> return ses ; //<S2SV> } //<S2SV> write_unlock ( & cifs_tcp_ses_lock ) ; //<S2SV> return NULL ; //<S2SV> } //<S2SV> 