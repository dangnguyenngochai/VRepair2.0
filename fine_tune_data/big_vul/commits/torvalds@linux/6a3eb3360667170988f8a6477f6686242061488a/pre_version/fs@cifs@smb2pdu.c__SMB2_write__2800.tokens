int //<S2SV> SMB2_write ( const unsigned int xid , struct cifs_io_parms * io_parms , //<S2SV> unsigned int * nbytes , struct kvec * iov , int n_vec ) //<S2SV> { //<S2SV> struct smb_rqst rqst ; //<S2SV> int rc = 0 ; //<S2SV> struct smb2_write_req * req = NULL ; //<S2SV> struct smb2_write_rsp * rsp = NULL ; //<S2SV> int resp_buftype ; //<S2SV> struct kvec rsp_iov ; //<S2SV> int flags = 0 ; //<S2SV> unsigned int total_len ; //<S2SV> * nbytes = 0 ; //<S2SV> if ( n_vec < 1 ) //<S2SV> return rc ; //<S2SV> rc = smb2_plain_req_init ( SMB2_WRITE , io_parms -> tcon , ( void * * ) & req , //<S2SV> & total_len ) ; //<S2SV> if ( rc ) //<S2SV> return rc ; //<S2SV> if ( io_parms -> tcon -> ses -> server == NULL ) //<S2SV> return - ECONNABORTED ; //<S2SV> if ( smb3_encryption_required ( io_parms -> tcon ) ) //<S2SV> flags |= CIFS_TRANSFORM_REQ ; //<S2SV> req -> sync_hdr . ProcessId = cpu_to_le32 ( io_parms -> pid ) ; //<S2SV> req -> PersistentFileId = io_parms -> persistent_fid ; //<S2SV> req -> VolatileFileId = io_parms -> volatile_fid ; //<S2SV> req -> WriteChannelInfoOffset = 0 ; //<S2SV> req -> WriteChannelInfoLength = 0 ; //<S2SV> req -> Channel = 0 ; //<S2SV> req -> Length = cpu_to_le32 ( io_parms -> length ) ; //<S2SV> req -> Offset = cpu_to_le64 ( io_parms -> offset ) ; //<S2SV> req -> DataOffset = cpu_to_le16 ( //<S2SV> offsetof ( struct smb2_write_req , Buffer ) ) ; //<S2SV> req -> RemainingBytes = 0 ; //<S2SV> trace_smb3_write_enter ( xid , io_parms -> persistent_fid , //<S2SV> io_parms -> tcon -> tid , io_parms -> tcon -> ses -> Suid , //<S2SV> io_parms -> offset , io_parms -> length ) ; //<S2SV> iov [ 0 ] . iov_base = ( char * ) req ; //<S2SV> iov [ 0 ] . iov_len = total_len - 1 ; //<S2SV> memset ( & rqst , 0 , sizeof ( struct smb_rqst ) ) ; //<S2SV> rqst . rq_iov = iov ; //<S2SV> rqst . rq_nvec = n_vec + 1 ; //<S2SV> rc = cifs_send_recv ( xid , io_parms -> tcon -> ses , & rqst , //<S2SV> & resp_buftype , flags , & rsp_iov ) ; //<S2SV> cifs_small_buf_release ( req ) ; //<S2SV> rsp = ( struct smb2_write_rsp * ) rsp_iov . iov_base ; //<S2SV> if ( rc ) { //<S2SV> trace_smb3_write_err ( xid , req -> PersistentFileId , //<S2SV> io_parms -> tcon -> tid , //<S2SV> io_parms -> tcon -> ses -> Suid , //<S2SV> io_parms -> offset , io_parms -> length , rc ) ; //<S2SV> cifs_stats_fail_inc ( io_parms -> tcon , SMB2_WRITE_HE ) ; //<S2SV> cifs_dbg ( VFS , "Send<S2SV_blank>error<S2SV_blank>in<S2SV_blank>write<S2SV_blank>=<S2SV_blank>%d\\n" , rc ) ; //<S2SV> } else { //<S2SV> * nbytes = le32_to_cpu ( rsp -> DataLength ) ; //<S2SV> trace_smb3_write_done ( xid , req -> PersistentFileId , //<S2SV> io_parms -> tcon -> tid , //<S2SV> io_parms -> tcon -> ses -> Suid , //<S2SV> io_parms -> offset , * nbytes ) ; //<S2SV> } //<S2SV> free_rsp_buf ( resp_buftype , rsp ) ; //<S2SV> return rc ; //<S2SV> } //<S2SV> 