int //<S2SV> i915_gem_execbuffer2 ( struct drm_device * dev , void * data , //<S2SV> struct drm_file * file ) //<S2SV> { //<S2SV> struct drm_i915_gem_execbuffer2 * args = data ; //<S2SV> struct drm_i915_gem_exec_object2 * exec2_list = NULL ; //<S2SV> int ret ; //<S2SV> if ( args -> buffer_count < 1 ) { //<S2SV> DRM_DEBUG ( "execbuf2<S2SV_blank>with<S2SV_blank>%d<S2SV_blank>buffers\\n" , args -> buffer_count ) ; //<S2SV> return - EINVAL ; //<S2SV> } //<S2SV> exec2_list = kmalloc ( sizeof ( * exec2_list ) * args -> buffer_count , //<S2SV> GFP_KERNEL | __GFP_NOWARN | __GFP_NORETRY ) ; //<S2SV> if ( exec2_list == NULL ) //<S2SV> exec2_list = drm_malloc_ab ( sizeof ( * exec2_list ) , //<S2SV> args -> buffer_count ) ; //<S2SV> if ( exec2_list == NULL ) { //<S2SV> DRM_DEBUG ( "Failed<S2SV_blank>to<S2SV_blank>allocate<S2SV_blank>exec<S2SV_blank>list<S2SV_blank>for<S2SV_blank>%d<S2SV_blank>buffers\\n" , //<S2SV> args -> buffer_count ) ; //<S2SV> return - ENOMEM ; //<S2SV> } //<S2SV> ret = copy_from_user ( exec2_list , //<S2SV> ( struct drm_i915_relocation_entry __user * ) //<S2SV> ( uintptr_t ) args -> buffers_ptr , //<S2SV> sizeof ( * exec2_list ) * args -> buffer_count ) ; //<S2SV> if ( ret != 0 ) { //<S2SV> DRM_DEBUG ( "copy<S2SV_blank>%d<S2SV_blank>exec<S2SV_blank>entries<S2SV_blank>failed<S2SV_blank>%d\\n" , //<S2SV> args -> buffer_count , ret ) ; //<S2SV> drm_free_large ( exec2_list ) ; //<S2SV> return - EFAULT ; //<S2SV> } //<S2SV> ret = i915_gem_do_execbuffer ( dev , data , file , args , exec2_list ) ; //<S2SV> if ( ! ret ) { //<S2SV> ret = copy_to_user ( ( struct drm_i915_relocation_entry __user * ) //<S2SV> ( uintptr_t ) args -> buffers_ptr , //<S2SV> exec2_list , //<S2SV> sizeof ( * exec2_list ) * args -> buffer_count ) ; //<S2SV> if ( ret ) { //<S2SV> ret = - EFAULT ; //<S2SV> DRM_DEBUG ( "failed<S2SV_blank>to<S2SV_blank>copy<S2SV_blank>%d<S2SV_blank>exec<S2SV_blank>entries<S2SV_blank>" //<S2SV> "back<S2SV_blank>to<S2SV_blank>user<S2SV_blank>(%d)\\n" , //<S2SV> args -> buffer_count , ret ) ; //<S2SV> } //<S2SV> } //<S2SV> drm_free_large ( exec2_list ) ; //<S2SV> return ret ; //<S2SV> } //<S2SV> 