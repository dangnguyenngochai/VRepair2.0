static int //<S2SV> rio_ioctl ( struct net_device * dev , struct ifreq * rq , int cmd ) //<S2SV> { //<S2SV> int phy_addr ; //<S2SV> struct netdev_private * np = netdev_priv ( dev ) ; //<S2SV> struct mii_data * miidata = ( struct mii_data * ) & rq -> ifr_ifru ; //<S2SV> struct netdev_desc * desc ; //<S2SV> int i ; //<S2SV> phy_addr = np -> phy_addr ; //<S2SV> switch ( cmd ) { //<S2SV> case SIOCDEVPRIVATE : //<S2SV> break ; //<S2SV> case SIOCDEVPRIVATE + 1 : //<S2SV> miidata -> out_value = mii_read ( dev , phy_addr , miidata -> reg_num ) ; //<S2SV> break ; //<S2SV> case SIOCDEVPRIVATE + 2 : //<S2SV> mii_write ( dev , phy_addr , miidata -> reg_num , miidata -> in_value ) ; //<S2SV> break ; //<S2SV> case SIOCDEVPRIVATE + 3 : //<S2SV> break ; //<S2SV> case SIOCDEVPRIVATE + 4 : //<S2SV> break ; //<S2SV> case SIOCDEVPRIVATE + 5 : //<S2SV> netif_stop_queue ( dev ) ; //<S2SV> break ; //<S2SV> case SIOCDEVPRIVATE + 6 : //<S2SV> netif_wake_queue ( dev ) ; //<S2SV> break ; //<S2SV> case SIOCDEVPRIVATE + 7 : //<S2SV> printk //<S2SV> ( "tx_full=%x<S2SV_blank>cur_tx=%lx<S2SV_blank>old_tx=%lx<S2SV_blank>cur_rx=%lx<S2SV_blank>old_rx=%lx\\n" , //<S2SV> netif_queue_stopped ( dev ) , np -> cur_tx , np -> old_tx , np -> cur_rx , //<S2SV> np -> old_rx ) ; //<S2SV> break ; //<S2SV> case SIOCDEVPRIVATE + 8 : //<S2SV> printk ( "TX<S2SV_blank>ring:\\n" ) ; //<S2SV> for ( i = 0 ; i < TX_RING_SIZE ; i ++ ) { //<S2SV> desc = & np -> tx_ring [ i ] ; //<S2SV> printk //<S2SV> ( "%02x:cur:%08x<S2SV_blank>next:%08x<S2SV_blank>status:%08x<S2SV_blank>frag1:%08x<S2SV_blank>frag0:%08x" , //<S2SV> i , //<S2SV> ( u32 ) ( np -> tx_ring_dma + i * sizeof ( * desc ) ) , //<S2SV> ( u32 ) le64_to_cpu ( desc -> next_desc ) , //<S2SV> ( u32 ) le64_to_cpu ( desc -> status ) , //<S2SV> ( u32 ) ( le64_to_cpu ( desc -> fraginfo ) >> 32 ) , //<S2SV> ( u32 ) le64_to_cpu ( desc -> fraginfo ) ) ; //<S2SV> printk ( "\\n" ) ; //<S2SV> } //<S2SV> printk ( "\\n" ) ; //<S2SV> break ; //<S2SV> default : //<S2SV> return - EOPNOTSUPP ; //<S2SV> } //<S2SV> return 0 ; //<S2SV> } //<S2SV> 