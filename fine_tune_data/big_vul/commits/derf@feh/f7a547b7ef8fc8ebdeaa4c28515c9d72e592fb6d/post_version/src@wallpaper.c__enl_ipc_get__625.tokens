char * enl_ipc_get ( const char * msg_data ) //<S2SV> { //<S2SV> static char * message = NULL ; //<S2SV> static size_t len = 0 ; //<S2SV> char buff [ 13 ] , * ret_msg = NULL ; //<S2SV> register unsigned char i ; //<S2SV> unsigned char blen ; //<S2SV> if ( msg_data == IPC_TIMEOUT ) { //<S2SV> return ( IPC_TIMEOUT ) ; //<S2SV> } //<S2SV> for ( i = 0 ; i < 12 ; i ++ ) { //<S2SV> buff [ i ] = msg_data [ i ] ; //<S2SV> } //<S2SV> buff [ 12 ] = 0 ; //<S2SV> blen = strlen ( buff ) ; //<S2SV> if ( message != NULL ) { //<S2SV> len += blen ; //<S2SV> message = ( char * ) erealloc ( message , len + 1 ) ; //<S2SV> strcat ( message , buff ) ; //<S2SV> } else { //<S2SV> len = blen ; //<S2SV> message = ( char * ) emalloc ( len + 1 ) ; //<S2SV> strcpy ( message , buff ) ; //<S2SV> } //<S2SV> if ( blen < 12 ) { //<S2SV> ret_msg = message ; //<S2SV> message = NULL ; //<S2SV> D ( ( "Received<S2SV_blank>complete<S2SV_blank>reply:<S2SV_blank><S2SV_blank>\\"%s\\"\\n" , ret_msg ) ) ; //<S2SV> } //<S2SV> return ( ret_msg ) ; //<S2SV> } //<S2SV> 