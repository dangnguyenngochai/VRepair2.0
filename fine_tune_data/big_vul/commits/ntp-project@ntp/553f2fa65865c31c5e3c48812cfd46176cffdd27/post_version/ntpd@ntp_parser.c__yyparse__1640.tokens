int //<S2SV> yyparse ( void ) //<S2SV> # else //<S2SV> int //<S2SV> yyparse ( ) //<S2SV> # endif //<S2SV> # endif //<S2SV> { //<S2SV> int yystate ; //<S2SV> int yyerrstatus ; //<S2SV> yytype_int16 yyssa [ YYINITDEPTH ] ; //<S2SV> yytype_int16 * yyss ; //<S2SV> yytype_int16 * yyssp ; //<S2SV> YYSTYPE yyvsa [ YYINITDEPTH ] ; //<S2SV> YYSTYPE * yyvs ; //<S2SV> YYSTYPE * yyvsp ; //<S2SV> YYSIZE_T yystacksize ; //<S2SV> int yyn ; //<S2SV> int yyresult ; //<S2SV> int yytoken ; //<S2SV> YYSTYPE yyval ; //<S2SV> # if YYERROR_VERBOSE //<S2SV> char yymsgbuf [ 128 ] ; //<S2SV> char * yymsg = yymsgbuf ; //<S2SV> YYSIZE_T yymsg_alloc = sizeof yymsgbuf ; //<S2SV> # endif //<S2SV> # define YYPOPSTACK ( N ) ( yyvsp -= ( N ) , yyssp -= ( N ) ) //<S2SV> int yylen = 0 ; //<S2SV> yytoken = 0 ; //<S2SV> yyss = yyssa ; //<S2SV> yyvs = yyvsa ; //<S2SV> yystacksize = YYINITDEPTH ; //<S2SV> YYDPRINTF ( ( stderr , "Starting<S2SV_blank>parse\\n" ) ) ; //<S2SV> yystate = 0 ; //<S2SV> yyerrstatus = 0 ; //<S2SV> yynerrs = 0 ; //<S2SV> yychar = YYEMPTY ; //<S2SV> yyssp = yyss ; //<S2SV> yyvsp = yyvs ; //<S2SV> goto yysetstate ; //<S2SV> yynewstate : //<S2SV> yyssp ++ ; //<S2SV> yysetstate : //<S2SV> * yyssp = yystate ; //<S2SV> if ( yyss + yystacksize - 1 <= yyssp ) //<S2SV> { //<S2SV> YYSIZE_T yysize = yyssp - yyss + 1 ; //<S2SV> # ifdef yyoverflow //<S2SV> { //<S2SV> YYSTYPE * yyvs1 = yyvs ; //<S2SV> yytype_int16 * yyss1 = yyss ; //<S2SV> yyoverflow ( YY_ ( "memory<S2SV_blank>exhausted" ) , //<S2SV> & yyss1 , yysize * sizeof ( * yyssp ) , //<S2SV> & yyvs1 , yysize * sizeof ( * yyvsp ) , //<S2SV> & yystacksize ) ; //<S2SV> yyss = yyss1 ; //<S2SV> yyvs = yyvs1 ; //<S2SV> } //<S2SV> # else //<S2SV> # ifndef YYSTACK_RELOCATE //<S2SV> goto yyexhaustedlab ; //<S2SV> # else //<S2SV> if ( YYMAXDEPTH <= yystacksize ) //<S2SV> goto yyexhaustedlab ; //<S2SV> yystacksize *= 2 ; //<S2SV> if ( YYMAXDEPTH < yystacksize ) //<S2SV> yystacksize = YYMAXDEPTH ; //<S2SV> { //<S2SV> yytype_int16 * yyss1 = yyss ; //<S2SV> union yyalloc * yyptr = //<S2SV> ( union yyalloc * ) YYSTACK_ALLOC ( YYSTACK_BYTES ( yystacksize ) ) ; //<S2SV> if ( ! yyptr ) //<S2SV> goto yyexhaustedlab ; //<S2SV> YYSTACK_RELOCATE ( yyss_alloc , yyss ) ; //<S2SV> YYSTACK_RELOCATE ( yyvs_alloc , yyvs ) ; //<S2SV> # undef YYSTACK_RELOCATE //<S2SV> if ( yyss1 != yyssa ) //<S2SV> YYSTACK_FREE ( yyss1 ) ; //<S2SV> } //<S2SV> # endif //<S2SV> # endif //<S2SV> yyssp = yyss + yysize - 1 ; //<S2SV> yyvsp = yyvs + yysize - 1 ; //<S2SV> YYDPRINTF ( ( stderr , "Stack<S2SV_blank>size<S2SV_blank>increased<S2SV_blank>to<S2SV_blank>%lu\\n" , //<S2SV> ( unsigned long int ) yystacksize ) ) ; //<S2SV> if ( yyss + yystacksize - 1 <= yyssp ) //<S2SV> YYABORT ; //<S2SV> } //<S2SV> YYDPRINTF ( ( stderr , "Entering<S2SV_blank>state<S2SV_blank>%d\\n" , yystate ) ) ; //<S2SV> if ( yystate == YYFINAL ) //<S2SV> YYACCEPT ; //<S2SV> goto yybackup ; //<S2SV> yybackup : //<S2SV> yyn = yypact [ yystate ] ; //<S2SV> if ( yyn == YYPACT_NINF ) //<S2SV> goto yydefault ; //<S2SV> if ( yychar == YYEMPTY ) //<S2SV> { //<S2SV> YYDPRINTF ( ( stderr , "Reading<S2SV_blank>a<S2SV_blank>token:<S2SV_blank>" ) ) ; //<S2SV> yychar = YYLEX ; //<S2SV> } //<S2SV> if ( yychar <= YYEOF ) //<S2SV> { //<S2SV> yychar = yytoken = YYEOF ; //<S2SV> YYDPRINTF ( ( stderr , "Now<S2SV_blank>at<S2SV_blank>end<S2SV_blank>of<S2SV_blank>input.\\n" ) ) ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> yytoken = YYTRANSLATE ( yychar ) ; //<S2SV> YY_SYMBOL_PRINT ( "Next<S2SV_blank>token<S2SV_blank>is" , yytoken , & yylval , & yylloc ) ; //<S2SV> } //<S2SV> yyn += yytoken ; //<S2SV> if ( yyn < 0 || YYLAST < yyn || yycheck [ yyn ] != yytoken ) //<S2SV> goto yydefault ; //<S2SV> yyn = yytable [ yyn ] ; //<S2SV> if ( yyn <= 0 ) //<S2SV> { //<S2SV> if ( yyn == 0 || yyn == YYTABLE_NINF ) //<S2SV> goto yyerrlab ; //<S2SV> yyn = - yyn ; //<S2SV> goto yyreduce ; //<S2SV> } //<S2SV> if ( yyerrstatus ) //<S2SV> yyerrstatus -- ; //<S2SV> YY_SYMBOL_PRINT ( "Shifting" , yytoken , & yylval , & yylloc ) ; //<S2SV> yychar = YYEMPTY ; //<S2SV> yystate = yyn ; //<S2SV> * ++ yyvsp = yylval ; //<S2SV> goto yynewstate ; //<S2SV> yydefault : //<S2SV> yyn = yydefact [ yystate ] ; //<S2SV> if ( yyn == 0 ) //<S2SV> goto yyerrlab ; //<S2SV> goto yyreduce ; //<S2SV> yyreduce : //<S2SV> yylen = yyr2 [ yyn ] ; //<S2SV> yyval = yyvsp [ 1 - yylen ] ; //<S2SV> YY_REDUCE_PRINT ( yyn ) ; //<S2SV> switch ( yyn ) //<S2SV> { //<S2SV> case 5 : //<S2SV> # line 320 "ntp_parser.y" //<S2SV> { //<S2SV> msyslog ( LOG_ERR , //<S2SV> "syntax<S2SV_blank>error<S2SV_blank>in<S2SV_blank>%s<S2SV_blank>line<S2SV_blank>%d,<S2SV_blank>column<S2SV_blank>%d" , //<S2SV> ip_file -> fname , //<S2SV> ip_file -> err_line_no , //<S2SV> ip_file -> err_col_no ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 19 : //<S2SV> # line 354 "ntp_parser.y" //<S2SV> { //<S2SV> struct peer_node * my_node = create_peer_node ( ( yyvsp [ ( 1 ) - ( 3 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 3 ) ] . Address_node ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Queue ) ) ; //<S2SV> if ( my_node ) //<S2SV> enqueue ( cfgt . peers , my_node ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 20 : //<S2SV> # line 360 "ntp_parser.y" //<S2SV> { //<S2SV> struct peer_node * my_node = create_peer_node ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Address_node ) , NULL ) ; //<S2SV> if ( my_node ) //<S2SV> enqueue ( cfgt . peers , my_node ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 27 : //<S2SV> # line 377 "ntp_parser.y" //<S2SV> { ( yyval . Address_node ) = create_address_node ( ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) , AF_INET ) ; } //<S2SV> break ; //<S2SV> case 28 : //<S2SV> # line 378 "ntp_parser.y" //<S2SV> { ( yyval . Address_node ) = create_address_node ( ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) , AF_INET6 ) ; } //<S2SV> break ; //<S2SV> case 29 : //<S2SV> # line 382 "ntp_parser.y" //<S2SV> { ( yyval . Address_node ) = create_address_node ( ( yyvsp [ ( 1 ) - ( 1 ) ] . String ) , 0 ) ; } //<S2SV> break ; //<S2SV> case 30 : //<S2SV> # line 386 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 31 : //<S2SV> # line 387 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 32 : //<S2SV> # line 391 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 33 : //<S2SV> # line 392 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 34 : //<S2SV> # line 393 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 35 : //<S2SV> # line 394 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 36 : //<S2SV> # line 395 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 37 : //<S2SV> # line 396 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 38 : //<S2SV> # line 397 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 39 : //<S2SV> # line 398 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 40 : //<S2SV> # line 399 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 41 : //<S2SV> # line 400 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 42 : //<S2SV> # line 401 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 43 : //<S2SV> # line 402 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 44 : //<S2SV> # line 403 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 45 : //<S2SV> # line 404 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 46 : //<S2SV> # line 405 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 47 : //<S2SV> # line 415 "ntp_parser.y" //<S2SV> { //<S2SV> struct unpeer_node * my_node = create_unpeer_node ( ( yyvsp [ ( 2 ) - ( 2 ) ] . Address_node ) ) ; //<S2SV> if ( my_node ) //<S2SV> enqueue ( cfgt . unpeers , my_node ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 50 : //<S2SV> # line 434 "ntp_parser.y" //<S2SV> { cfgt . broadcastclient = 1 ; } //<S2SV> break ; //<S2SV> case 51 : //<S2SV> # line 436 "ntp_parser.y" //<S2SV> { append_queue ( cfgt . manycastserver , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 52 : //<S2SV> # line 438 "ntp_parser.y" //<S2SV> { append_queue ( cfgt . multicastclient , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 53 : //<S2SV> # line 449 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . vars , create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ) ; } //<S2SV> break ; //<S2SV> case 54 : //<S2SV> # line 451 "ntp_parser.y" //<S2SV> { cfgt . auth . control_key = ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ; } //<S2SV> break ; //<S2SV> case 55 : //<S2SV> # line 453 "ntp_parser.y" //<S2SV> { //<S2SV> cfgt . auth . cryptosw ++ ; //<S2SV> append_queue ( cfgt . auth . crypto_cmd_list , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 56 : //<S2SV> # line 458 "ntp_parser.y" //<S2SV> { cfgt . auth . keys = ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ; } //<S2SV> break ; //<S2SV> case 57 : //<S2SV> # line 460 "ntp_parser.y" //<S2SV> { cfgt . auth . keysdir = ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ; } //<S2SV> break ; //<S2SV> case 58 : //<S2SV> # line 462 "ntp_parser.y" //<S2SV> { cfgt . auth . request_key = ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ; } //<S2SV> break ; //<S2SV> case 59 : //<S2SV> # line 464 "ntp_parser.y" //<S2SV> { cfgt . auth . revoke = ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ; } //<S2SV> break ; //<S2SV> case 60 : //<S2SV> # line 466 "ntp_parser.y" //<S2SV> { cfgt . auth . trusted_key_list = ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ; } //<S2SV> break ; //<S2SV> case 61 : //<S2SV> # line 468 "ntp_parser.y" //<S2SV> { cfgt . auth . ntp_signd_socket = ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ; } //<S2SV> break ; //<S2SV> case 63 : //<S2SV> # line 474 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = create_queue ( ) ; } //<S2SV> break ; //<S2SV> case 64 : //<S2SV> # line 479 "ntp_parser.y" //<S2SV> { //<S2SV> if ( ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) != NULL ) //<S2SV> ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; //<S2SV> else //<S2SV> ( yyval . Queue ) = ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 65 : //<S2SV> # line 486 "ntp_parser.y" //<S2SV> { //<S2SV> if ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) != NULL ) //<S2SV> ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; //<S2SV> else //<S2SV> ( yyval . Queue ) = create_queue ( ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 66 : //<S2SV> # line 496 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; } //<S2SV> break ; //<S2SV> case 67 : //<S2SV> # line 498 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; } //<S2SV> break ; //<S2SV> case 68 : //<S2SV> # line 500 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; } //<S2SV> break ; //<S2SV> case 69 : //<S2SV> # line 502 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; } //<S2SV> break ; //<S2SV> case 70 : //<S2SV> # line 504 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; } //<S2SV> break ; //<S2SV> case 71 : //<S2SV> # line 506 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; } //<S2SV> break ; //<S2SV> case 72 : //<S2SV> # line 508 "ntp_parser.y" //<S2SV> { //<S2SV> ( yyval . Attr_val ) = NULL ; //<S2SV> cfgt . auth . revoke = ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ; //<S2SV> msyslog ( LOG_WARNING , //<S2SV> "\'crypto<S2SV_blank>revoke<S2SV_blank>%d\'<S2SV_blank>is<S2SV_blank>deprecated,<S2SV_blank>" //<S2SV> "please<S2SV_blank>use<S2SV_blank>\'revoke<S2SV_blank>%d\'<S2SV_blank>instead." , //<S2SV> cfgt . auth . revoke , cfgt . auth . revoke ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 73 : //<S2SV> # line 525 "ntp_parser.y" //<S2SV> { append_queue ( cfgt . orphan_cmds , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 74 : //<S2SV> # line 529 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 75 : //<S2SV> # line 530 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 76 : //<S2SV> # line 535 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( double ) ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 77 : //<S2SV> # line 537 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( double ) ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 78 : //<S2SV> # line 539 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( double ) ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 79 : //<S2SV> # line 541 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( double ) ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 80 : //<S2SV> # line 543 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( double ) ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 81 : //<S2SV> # line 545 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 82 : //<S2SV> # line 547 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 83 : //<S2SV> # line 549 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 84 : //<S2SV> # line 551 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 85 : //<S2SV> # line 553 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( double ) ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 86 : //<S2SV> # line 555 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( double ) ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 87 : //<S2SV> # line 565 "ntp_parser.y" //<S2SV> { append_queue ( cfgt . stats_list , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 88 : //<S2SV> # line 567 "ntp_parser.y" //<S2SV> { //<S2SV> if ( input_from_file ) //<S2SV> cfgt . stats_dir = ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ; //<S2SV> else { //<S2SV> free ( ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; //<S2SV> yyerror ( "statsdir<S2SV_blank>remote<S2SV_blank>configuration<S2SV_blank>ignored" ) ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case 89 : //<S2SV> # line 576 "ntp_parser.y" //<S2SV> { //<S2SV> enqueue ( cfgt . filegen_opts , //<S2SV> create_filegen_node ( ( yyvsp [ ( 2 ) - ( 3 ) ] . Integer ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Queue ) ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 90 : //<S2SV> # line 583 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , create_ival ( ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ) ; } //<S2SV> break ; //<S2SV> case 91 : //<S2SV> # line 584 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( create_ival ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ) ; } //<S2SV> break ; //<S2SV> case 100 : //<S2SV> # line 600 "ntp_parser.y" //<S2SV> { //<S2SV> if ( ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) != NULL ) //<S2SV> ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; //<S2SV> else //<S2SV> ( yyval . Queue ) = ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 101 : //<S2SV> # line 607 "ntp_parser.y" //<S2SV> { //<S2SV> if ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) != NULL ) //<S2SV> ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; //<S2SV> else //<S2SV> ( yyval . Queue ) = create_queue ( ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 102 : //<S2SV> # line 617 "ntp_parser.y" //<S2SV> { //<S2SV> if ( input_from_file ) //<S2SV> ( yyval . Attr_val ) = create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; //<S2SV> else { //<S2SV> ( yyval . Attr_val ) = NULL ; //<S2SV> free ( ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; //<S2SV> yyerror ( "filegen<S2SV_blank>file<S2SV_blank>remote<S2SV_blank>configuration<S2SV_blank>ignored" ) ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case 103 : //<S2SV> # line 627 "ntp_parser.y" //<S2SV> { //<S2SV> if ( input_from_file ) //<S2SV> ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; //<S2SV> else { //<S2SV> ( yyval . Attr_val ) = NULL ; //<S2SV> yyerror ( "filegen<S2SV_blank>type<S2SV_blank>remote<S2SV_blank>configuration<S2SV_blank>ignored" ) ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case 104 : //<S2SV> # line 636 "ntp_parser.y" //<S2SV> { //<S2SV> if ( input_from_file ) //<S2SV> ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; //<S2SV> else { //<S2SV> ( yyval . Attr_val ) = NULL ; //<S2SV> yyerror ( "filegen<S2SV_blank>link<S2SV_blank>remote<S2SV_blank>configuration<S2SV_blank>ignored" ) ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case 105 : //<S2SV> # line 645 "ntp_parser.y" //<S2SV> { //<S2SV> if ( input_from_file ) //<S2SV> ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; //<S2SV> else { //<S2SV> ( yyval . Attr_val ) = NULL ; //<S2SV> yyerror ( "filegen<S2SV_blank>nolink<S2SV_blank>remote<S2SV_blank>configuration<S2SV_blank>ignored" ) ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case 106 : //<S2SV> # line 653 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 107 : //<S2SV> # line 654 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 115 : //<S2SV> # line 674 "ntp_parser.y" //<S2SV> { //<S2SV> append_queue ( cfgt . discard_opts , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 116 : //<S2SV> # line 678 "ntp_parser.y" //<S2SV> { //<S2SV> append_queue ( cfgt . mru_opts , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 117 : //<S2SV> # line 682 "ntp_parser.y" //<S2SV> { //<S2SV> enqueue ( cfgt . restrict_opts , //<S2SV> create_restrict_node ( ( yyvsp [ ( 2 ) - ( 3 ) ] . Address_node ) , NULL , ( yyvsp [ ( 3 ) - ( 3 ) ] . Queue ) , ip_file -> line_no ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 118 : //<S2SV> # line 687 "ntp_parser.y" //<S2SV> { //<S2SV> enqueue ( cfgt . restrict_opts , //<S2SV> create_restrict_node ( ( yyvsp [ ( 2 ) - ( 5 ) ] . Address_node ) , ( yyvsp [ ( 4 ) - ( 5 ) ] . Address_node ) , ( yyvsp [ ( 5 ) - ( 5 ) ] . Queue ) , ip_file -> line_no ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 119 : //<S2SV> # line 692 "ntp_parser.y" //<S2SV> { //<S2SV> enqueue ( cfgt . restrict_opts , //<S2SV> create_restrict_node ( NULL , NULL , ( yyvsp [ ( 3 ) - ( 3 ) ] . Queue ) , ip_file -> line_no ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 120 : //<S2SV> # line 697 "ntp_parser.y" //<S2SV> { //<S2SV> enqueue ( cfgt . restrict_opts , //<S2SV> create_restrict_node ( //<S2SV> create_address_node ( //<S2SV> estrdup ( "0.0.0.0" ) , //<S2SV> AF_INET ) , //<S2SV> create_address_node ( //<S2SV> estrdup ( "0.0.0.0" ) , //<S2SV> AF_INET ) , //<S2SV> ( yyvsp [ ( 4 ) - ( 4 ) ] . Queue ) , //<S2SV> ip_file -> line_no ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 121 : //<S2SV> # line 710 "ntp_parser.y" //<S2SV> { //<S2SV> enqueue ( cfgt . restrict_opts , //<S2SV> create_restrict_node ( //<S2SV> create_address_node ( //<S2SV> estrdup ( "::" ) , //<S2SV> AF_INET6 ) , //<S2SV> create_address_node ( //<S2SV> estrdup ( "::" ) , //<S2SV> AF_INET6 ) , //<S2SV> ( yyvsp [ ( 4 ) - ( 4 ) ] . Queue ) , //<S2SV> ip_file -> line_no ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 122 : //<S2SV> # line 723 "ntp_parser.y" //<S2SV> { //<S2SV> enqueue ( cfgt . restrict_opts , //<S2SV> create_restrict_node ( //<S2SV> NULL , NULL , //<S2SV> enqueue ( ( yyvsp [ ( 3 ) - ( 3 ) ] . Queue ) , create_ival ( ( yyvsp [ ( 2 ) - ( 3 ) ] . Integer ) ) ) , //<S2SV> ip_file -> line_no ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 123 : //<S2SV> # line 734 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = create_queue ( ) ; } //<S2SV> break ; //<S2SV> case 124 : //<S2SV> # line 736 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , create_ival ( ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ) ; } //<S2SV> break ; //<S2SV> case 139 : //<S2SV> # line 758 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 140 : //<S2SV> # line 760 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 141 : //<S2SV> # line 764 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 142 : //<S2SV> # line 765 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 143 : //<S2SV> # line 766 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 144 : //<S2SV> # line 771 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 145 : //<S2SV> # line 773 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 146 : //<S2SV> # line 777 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 147 : //<S2SV> # line 778 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 148 : //<S2SV> # line 779 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 149 : //<S2SV> # line 780 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 150 : //<S2SV> # line 781 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 151 : //<S2SV> # line 782 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 152 : //<S2SV> # line 783 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 153 : //<S2SV> # line 784 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 154 : //<S2SV> # line 793 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . fudge , create_addr_opts_node ( ( yyvsp [ ( 2 ) - ( 3 ) ] . Address_node ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Queue ) ) ) ; } //<S2SV> break ; //<S2SV> case 155 : //<S2SV> # line 798 "ntp_parser.y" //<S2SV> { enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 156 : //<S2SV> # line 800 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 157 : //<S2SV> # line 804 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 158 : //<S2SV> # line 805 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 159 : //<S2SV> # line 806 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 160 : //<S2SV> # line 807 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; } //<S2SV> break ; //<S2SV> case 161 : //<S2SV> # line 808 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 162 : //<S2SV> # line 809 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 163 : //<S2SV> # line 810 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 164 : //<S2SV> # line 811 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 165 : //<S2SV> # line 820 "ntp_parser.y" //<S2SV> { append_queue ( cfgt . enable_opts , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 166 : //<S2SV> # line 822 "ntp_parser.y" //<S2SV> { append_queue ( cfgt . disable_opts , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 167 : //<S2SV> # line 827 "ntp_parser.y" //<S2SV> { //<S2SV> if ( ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) != NULL ) //<S2SV> ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; //<S2SV> else //<S2SV> ( yyval . Queue ) = ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 168 : //<S2SV> # line 834 "ntp_parser.y" //<S2SV> { //<S2SV> if ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) != NULL ) //<S2SV> ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; //<S2SV> else //<S2SV> ( yyval . Queue ) = create_queue ( ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 169 : //<S2SV> # line 843 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 170 : //<S2SV> # line 844 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 171 : //<S2SV> # line 845 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 172 : //<S2SV> # line 846 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 173 : //<S2SV> # line 847 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 174 : //<S2SV> # line 848 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 175 : //<S2SV> # line 850 "ntp_parser.y" //<S2SV> { //<S2SV> if ( input_from_file ) //<S2SV> ( yyval . Attr_val ) = create_attr_ival ( T_Flag , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; //<S2SV> else { //<S2SV> ( yyval . Attr_val ) = NULL ; //<S2SV> yyerror ( "enable/disable<S2SV_blank>stats<S2SV_blank>remote<S2SV_blank>configuration<S2SV_blank>ignored" ) ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case 176 : //<S2SV> # line 865 "ntp_parser.y" //<S2SV> { append_queue ( cfgt . tinker , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 177 : //<S2SV> # line 869 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 178 : //<S2SV> # line 870 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 179 : //<S2SV> # line 874 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 180 : //<S2SV> # line 875 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 181 : //<S2SV> # line 876 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 182 : //<S2SV> # line 877 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 183 : //<S2SV> # line 878 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 184 : //<S2SV> # line 879 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 185 : //<S2SV> # line 880 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 187 : //<S2SV> # line 891 "ntp_parser.y" //<S2SV> { //<S2SV> if ( curr_include_level >= MAXINCLUDELEVEL ) { //<S2SV> fprintf ( stderr , "getconfig:<S2SV_blank>Maximum<S2SV_blank>include<S2SV_blank>file<S2SV_blank>level<S2SV_blank>exceeded.\\n" ) ; //<S2SV> msyslog ( LOG_ERR , "getconfig:<S2SV_blank>Maximum<S2SV_blank>include<S2SV_blank>file<S2SV_blank>level<S2SV_blank>exceeded." ) ; //<S2SV> } //<S2SV> else { //<S2SV> fp [ curr_include_level + 1 ] = F_OPEN ( FindConfig ( ( yyvsp [ ( 2 ) - ( 3 ) ] . String ) ) , "r" ) ; //<S2SV> if ( fp [ curr_include_level + 1 ] == NULL ) { //<S2SV> fprintf ( stderr , "getconfig:<S2SV_blank>Couldn\'t<S2SV_blank>open<S2SV_blank><%s>\\n" , FindConfig ( ( yyvsp [ ( 2 ) - ( 3 ) ] . String ) ) ) ; //<S2SV> msyslog ( LOG_ERR , "getconfig:<S2SV_blank>Couldn\'t<S2SV_blank>open<S2SV_blank><%s>" , FindConfig ( ( yyvsp [ ( 2 ) - ( 3 ) ] . String ) ) ) ; //<S2SV> } //<S2SV> else //<S2SV> ip_file = fp [ ++ curr_include_level ] ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case 188 : //<S2SV> # line 907 "ntp_parser.y" //<S2SV> { //<S2SV> while ( curr_include_level != - 1 ) //<S2SV> FCLOSE ( fp [ curr_include_level -- ] ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 189 : //<S2SV> # line 913 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . vars , create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ) ; } //<S2SV> break ; //<S2SV> case 190 : //<S2SV> # line 915 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . vars , create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ) ; } //<S2SV> break ; //<S2SV> case 191 : //<S2SV> # line 917 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . vars , create_attr_dval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ) ; } //<S2SV> break ; //<S2SV> case 192 : //<S2SV> # line 919 "ntp_parser.y" //<S2SV> { } //<S2SV> break ; //<S2SV> case 193 : //<S2SV> # line 921 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . vars , create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ) ; } //<S2SV> break ; //<S2SV> case 194 : //<S2SV> # line 924 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . vars , create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ) ; } //<S2SV> break ; //<S2SV> case 195 : //<S2SV> # line 926 "ntp_parser.y" //<S2SV> { //<S2SV> if ( input_from_file ) //<S2SV> enqueue ( cfgt . vars , //<S2SV> create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ) ; //<S2SV> else { //<S2SV> free ( ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; //<S2SV> yyerror ( "logfile<S2SV_blank>remote<S2SV_blank>configuration<S2SV_blank>ignored" ) ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case 196 : //<S2SV> # line 937 "ntp_parser.y" //<S2SV> { append_queue ( cfgt . logconfig , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 197 : //<S2SV> # line 939 "ntp_parser.y" //<S2SV> { append_queue ( cfgt . phone , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 198 : //<S2SV> # line 941 "ntp_parser.y" //<S2SV> { //<S2SV> if ( input_from_file ) //<S2SV> enqueue ( cfgt . vars , //<S2SV> create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ) ; //<S2SV> else { //<S2SV> free ( ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ; //<S2SV> yyerror ( "saveconfigdir<S2SV_blank>remote<S2SV_blank>configuration<S2SV_blank>ignored" ) ; //<S2SV> } //<S2SV> } //<S2SV> break ; //<S2SV> case 199 : //<S2SV> # line 951 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . setvar , ( yyvsp [ ( 2 ) - ( 2 ) ] . Set_var ) ) ; } //<S2SV> break ; //<S2SV> case 200 : //<S2SV> # line 953 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . trap , create_addr_opts_node ( ( yyvsp [ ( 2 ) - ( 2 ) ] . Address_node ) , NULL ) ) ; } //<S2SV> break ; //<S2SV> case 201 : //<S2SV> # line 955 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . trap , create_addr_opts_node ( ( yyvsp [ ( 2 ) - ( 3 ) ] . Address_node ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Queue ) ) ) ; } //<S2SV> break ; //<S2SV> case 202 : //<S2SV> # line 957 "ntp_parser.y" //<S2SV> { append_queue ( cfgt . ttl , ( yyvsp [ ( 2 ) - ( 2 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 203 : //<S2SV> # line 959 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . qos , create_attr_sval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ) ; } //<S2SV> break ; //<S2SV> case 204 : //<S2SV> # line 964 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . vars , create_attr_sval ( T_Driftfile , ( yyvsp [ ( 1 ) - ( 1 ) ] . String ) ) ) ; } //<S2SV> break ; //<S2SV> case 205 : //<S2SV> # line 966 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . vars , create_attr_dval ( T_WanderThreshold , ( yyvsp [ ( 2 ) - ( 2 ) ] . Double ) ) ) ; //<S2SV> enqueue ( cfgt . vars , create_attr_sval ( T_Driftfile , ( yyvsp [ ( 1 ) - ( 2 ) ] . String ) ) ) ; } //<S2SV> break ; //<S2SV> case 206 : //<S2SV> # line 969 "ntp_parser.y" //<S2SV> { enqueue ( cfgt . vars , create_attr_sval ( T_Driftfile , "\\0" ) ) ; } //<S2SV> break ; //<S2SV> case 207 : //<S2SV> # line 974 "ntp_parser.y" //<S2SV> { ( yyval . Set_var ) = create_setvar_node ( ( yyvsp [ ( 1 ) - ( 4 ) ] . String ) , ( yyvsp [ ( 3 ) - ( 4 ) ] . String ) , ( yyvsp [ ( 4 ) - ( 4 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 208 : //<S2SV> # line 976 "ntp_parser.y" //<S2SV> { ( yyval . Set_var ) = create_setvar_node ( ( yyvsp [ ( 1 ) - ( 3 ) ] . String ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . String ) , 0 ) ; } //<S2SV> break ; //<S2SV> case 209 : //<S2SV> # line 981 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 210 : //<S2SV> # line 982 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 211 : //<S2SV> # line 986 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 212 : //<S2SV> # line 987 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_pval ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Integer ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Address_node ) ) ; } //<S2SV> break ; //<S2SV> case 213 : //<S2SV> # line 991 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 214 : //<S2SV> # line 992 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 215 : //<S2SV> # line 997 "ntp_parser.y" //<S2SV> { //<S2SV> char prefix ; //<S2SV> char * type ; //<S2SV> switch ( ( yyvsp [ ( 1 ) - ( 1 ) ] . String ) [ 0 ] ) { //<S2SV> case '+' : //<S2SV> case '-' : //<S2SV> case '=' : //<S2SV> prefix = ( yyvsp [ ( 1 ) - ( 1 ) ] . String ) [ 0 ] ; //<S2SV> type = ( yyvsp [ ( 1 ) - ( 1 ) ] . String ) + 1 ; //<S2SV> break ; //<S2SV> default : //<S2SV> prefix = '=' ; //<S2SV> type = ( yyvsp [ ( 1 ) - ( 1 ) ] . String ) ; //<S2SV> } //<S2SV> ( yyval . Attr_val ) = create_attr_sval ( prefix , estrdup ( type ) ) ; //<S2SV> YYFREE ( ( yyvsp [ ( 1 ) - ( 1 ) ] . String ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 216 : //<S2SV> # line 1022 "ntp_parser.y" //<S2SV> { //<S2SV> enqueue ( cfgt . nic_rules , //<S2SV> create_nic_rule_node ( ( yyvsp [ ( 3 ) - ( 3 ) ] . Integer ) , NULL , ( yyvsp [ ( 2 ) - ( 3 ) ] . Integer ) ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 217 : //<S2SV> # line 1027 "ntp_parser.y" //<S2SV> { //<S2SV> enqueue ( cfgt . nic_rules , //<S2SV> create_nic_rule_node ( 0 , ( yyvsp [ ( 3 ) - ( 3 ) ] . String ) , ( yyvsp [ ( 2 ) - ( 3 ) ] . Integer ) ) ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 227 : //<S2SV> # line 1058 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , create_ival ( ( yyvsp [ ( 2 ) - ( 2 ) ] . Integer ) ) ) ; } //<S2SV> break ; //<S2SV> case 228 : //<S2SV> # line 1059 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( create_ival ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ) ; } //<S2SV> break ; //<S2SV> case 229 : //<S2SV> # line 1064 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 230 : //<S2SV> # line 1066 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 231 : //<S2SV> # line 1071 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_ival ( 'i' , ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 233 : //<S2SV> # line 1077 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_shorts ( '-' , ( yyvsp [ ( 2 ) - ( 5 ) ] . Integer ) , ( yyvsp [ ( 4 ) - ( 5 ) ] . Integer ) ) ; } //<S2SV> break ; //<S2SV> case 234 : //<S2SV> # line 1081 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , create_pval ( ( yyvsp [ ( 2 ) - ( 2 ) ] . String ) ) ) ; } //<S2SV> break ; //<S2SV> case 235 : //<S2SV> # line 1082 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( create_pval ( ( yyvsp [ ( 1 ) - ( 1 ) ] . String ) ) ) ; } //<S2SV> break ; //<S2SV> case 236 : //<S2SV> # line 1086 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Address_node ) ) ; } //<S2SV> break ; //<S2SV> case 237 : //<S2SV> # line 1087 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Address_node ) ) ; } //<S2SV> break ; //<S2SV> case 238 : //<S2SV> # line 1092 "ntp_parser.y" //<S2SV> { //<S2SV> if ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) != 0 && ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) != 1 ) { //<S2SV> yyerror ( "Integer<S2SV_blank>value<S2SV_blank>is<S2SV_blank>not<S2SV_blank>boolean<S2SV_blank>(0<S2SV_blank>or<S2SV_blank>1).<S2SV_blank>Assuming<S2SV_blank>1" ) ; //<S2SV> ( yyval . Integer ) = 1 ; //<S2SV> } //<S2SV> else //<S2SV> ( yyval . Integer ) = ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ; //<S2SV> } //<S2SV> break ; //<S2SV> case 239 : //<S2SV> # line 1100 "ntp_parser.y" //<S2SV> { ( yyval . Integer ) = 1 ; } //<S2SV> break ; //<S2SV> case 240 : //<S2SV> # line 1101 "ntp_parser.y" //<S2SV> { ( yyval . Integer ) = 0 ; } //<S2SV> break ; //<S2SV> case 241 : //<S2SV> # line 1105 "ntp_parser.y" //<S2SV> { ( yyval . Double ) = ( double ) ( yyvsp [ ( 1 ) - ( 1 ) ] . Integer ) ; } //<S2SV> break ; //<S2SV> case 243 : //<S2SV> # line 1116 "ntp_parser.y" //<S2SV> { //<S2SV> cfgt . sim_details = create_sim_node ( ( yyvsp [ ( 3 ) - ( 5 ) ] . Queue ) , ( yyvsp [ ( 4 ) - ( 5 ) ] . Queue ) ) ; //<S2SV> old_config_style = 1 ; //<S2SV> } //<S2SV> break ; //<S2SV> case 244 : //<S2SV> # line 1130 "ntp_parser.y" //<S2SV> { old_config_style = 0 ; } //<S2SV> break ; //<S2SV> case 245 : //<S2SV> # line 1134 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 3 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 3 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 246 : //<S2SV> # line 1135 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 247 : //<S2SV> # line 1139 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 3 ) ] . Integer ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 248 : //<S2SV> # line 1140 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 3 ) ] . Integer ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 249 : //<S2SV> # line 1144 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Sim_server ) ) ; } //<S2SV> break ; //<S2SV> case 250 : //<S2SV> # line 1145 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Sim_server ) ) ; } //<S2SV> break ; //<S2SV> case 251 : //<S2SV> # line 1150 "ntp_parser.y" //<S2SV> { ( yyval . Sim_server ) = create_sim_server ( ( yyvsp [ ( 1 ) - ( 5 ) ] . Address_node ) , ( yyvsp [ ( 3 ) - ( 5 ) ] . Double ) , ( yyvsp [ ( 4 ) - ( 5 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 252 : //<S2SV> # line 1154 "ntp_parser.y" //<S2SV> { ( yyval . Double ) = ( yyvsp [ ( 3 ) - ( 4 ) ] . Double ) ; } //<S2SV> break ; //<S2SV> case 253 : //<S2SV> # line 1158 "ntp_parser.y" //<S2SV> { ( yyval . Address_node ) = ( yyvsp [ ( 3 ) - ( 3 ) ] . Address_node ) ; } //<S2SV> break ; //<S2SV> case 254 : //<S2SV> # line 1162 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 2 ) ] . Sim_script ) ) ; } //<S2SV> break ; //<S2SV> case 255 : //<S2SV> # line 1163 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 1 ) ] . Sim_script ) ) ; } //<S2SV> break ; //<S2SV> case 256 : //<S2SV> # line 1168 "ntp_parser.y" //<S2SV> { ( yyval . Sim_script ) = create_sim_script_info ( ( yyvsp [ ( 3 ) - ( 6 ) ] . Double ) , ( yyvsp [ ( 5 ) - ( 6 ) ] . Queue ) ) ; } //<S2SV> break ; //<S2SV> case 257 : //<S2SV> # line 1172 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue ( ( yyvsp [ ( 1 ) - ( 3 ) ] . Queue ) , ( yyvsp [ ( 2 ) - ( 3 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 258 : //<S2SV> # line 1173 "ntp_parser.y" //<S2SV> { ( yyval . Queue ) = enqueue_in_new_queue ( ( yyvsp [ ( 1 ) - ( 2 ) ] . Attr_val ) ) ; } //<S2SV> break ; //<S2SV> case 259 : //<S2SV> # line 1178 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 3 ) ] . Integer ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 260 : //<S2SV> # line 1180 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 3 ) ] . Integer ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 261 : //<S2SV> # line 1182 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 3 ) ] . Integer ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 262 : //<S2SV> # line 1184 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 3 ) ] . Integer ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> case 263 : //<S2SV> # line 1186 "ntp_parser.y" //<S2SV> { ( yyval . Attr_val ) = create_attr_dval ( ( yyvsp [ ( 1 ) - ( 3 ) ] . Integer ) , ( yyvsp [ ( 3 ) - ( 3 ) ] . Double ) ) ; } //<S2SV> break ; //<S2SV> # line 3836 "ntp_parser.c" //<S2SV> default : break ; //<S2SV> } //<S2SV> YY_SYMBOL_PRINT ( "-><S2SV_blank>$$<S2SV_blank>=" , yyr1 [ yyn ] , & yyval , & yyloc ) ; //<S2SV> YYPOPSTACK ( yylen ) ; //<S2SV> yylen = 0 ; //<S2SV> YY_STACK_PRINT ( yyss , yyssp ) ; //<S2SV> * ++ yyvsp = yyval ; //<S2SV> yyn = yyr1 [ yyn ] ; //<S2SV> yystate = yypgoto [ yyn - YYNTOKENS ] + * yyssp ; //<S2SV> if ( 0 <= yystate && yystate <= YYLAST && yycheck [ yystate ] == * yyssp ) //<S2SV> yystate = yytable [ yystate ] ; //<S2SV> else //<S2SV> yystate = yydefgoto [ yyn - YYNTOKENS ] ; //<S2SV> goto yynewstate ; //<S2SV> yyerrlab : //<S2SV> if ( ! yyerrstatus ) //<S2SV> { //<S2SV> ++ yynerrs ; //<S2SV> # if ! YYERROR_VERBOSE //<S2SV> yyerror ( YY_ ( "syntax<S2SV_blank>error" ) ) ; //<S2SV> # else //<S2SV> { //<S2SV> YYSIZE_T yysize = yysyntax_error ( 0 , yystate , yychar ) ; //<S2SV> if ( yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM ) //<S2SV> { //<S2SV> YYSIZE_T yyalloc = 2 * yysize ; //<S2SV> if ( ! ( yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM ) ) //<S2SV> yyalloc = YYSTACK_ALLOC_MAXIMUM ; //<S2SV> if ( yymsg != yymsgbuf ) //<S2SV> YYSTACK_FREE ( yymsg ) ; //<S2SV> yymsg = ( char * ) YYSTACK_ALLOC ( yyalloc ) ; //<S2SV> if ( yymsg ) //<S2SV> yymsg_alloc = yyalloc ; //<S2SV> else //<S2SV> { //<S2SV> yymsg = yymsgbuf ; //<S2SV> yymsg_alloc = sizeof yymsgbuf ; //<S2SV> } //<S2SV> } //<S2SV> if ( 0 < yysize && yysize <= yymsg_alloc ) //<S2SV> { //<S2SV> ( void ) yysyntax_error ( yymsg , yystate , yychar ) ; //<S2SV> yyerror ( yymsg ) ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> yyerror ( YY_ ( "syntax<S2SV_blank>error" ) ) ; //<S2SV> if ( yysize != 0 ) //<S2SV> goto yyexhaustedlab ; //<S2SV> } //<S2SV> } //<S2SV> # endif //<S2SV> } //<S2SV> if ( yyerrstatus == 3 ) //<S2SV> { //<S2SV> if ( yychar <= YYEOF ) //<S2SV> { //<S2SV> if ( yychar == YYEOF ) //<S2SV> YYABORT ; //<S2SV> } //<S2SV> else //<S2SV> { //<S2SV> yydestruct ( "Error:<S2SV_blank>discarding" , //<S2SV> yytoken , & yylval ) ; //<S2SV> yychar = YYEMPTY ; //<S2SV> } //<S2SV> } //<S2SV> goto yyerrlab1 ; //<S2SV> yyerrorlab : //<S2SV> if ( 0 ) //<S2SV> goto yyerrorlab ; //<S2SV> YYPOPSTACK ( yylen ) ; //<S2SV> yylen = 0 ; //<S2SV> YY_STACK_PRINT ( yyss , yyssp ) ; //<S2SV> yystate = * yyssp ; //<S2SV> goto yyerrlab1 ; //<S2SV> yyerrlab1 : //<S2SV> yyerrstatus = 3 ; //<S2SV> for ( ; ; ) //<S2SV> { //<S2SV> yyn = yypact [ yystate ] ; //<S2SV> if ( yyn != YYPACT_NINF ) //<S2SV> { //<S2SV> yyn += YYTERROR ; //<S2SV> if ( 0 <= yyn && yyn <= YYLAST && yycheck [ yyn ] == YYTERROR ) //<S2SV> { //<S2SV> yyn = yytable [ yyn ] ; //<S2SV> if ( 0 < yyn ) //<S2SV> break ; //<S2SV> } //<S2SV> } //<S2SV> if ( yyssp == yyss ) //<S2SV> YYABORT ; //<S2SV> yydestruct ( "Error:<S2SV_blank>popping" , //<S2SV> yystos [ yystate ] , yyvsp ) ; //<S2SV> YYPOPSTACK ( 1 ) ; //<S2SV> yystate = * yyssp ; //<S2SV> YY_STACK_PRINT ( yyss , yyssp ) ; //<S2SV> } //<S2SV> * ++ yyvsp = yylval ; //<S2SV> YY_SYMBOL_PRINT ( "Shifting" , yystos [ yyn ] , yyvsp , yylsp ) ; //<S2SV> yystate = yyn ; //<S2SV> goto yynewstate ; //<S2SV> yyacceptlab : //<S2SV> yyresult = 0 ; //<S2SV> goto yyreturn ; //<S2SV> yyabortlab : //<S2SV> yyresult = 1 ; //<S2SV> goto yyreturn ; //<S2SV> # if ! defined ( yyoverflow ) || YYERROR_VERBOSE //<S2SV> yyexhaustedlab : //<S2SV> yyerror ( YY_ ( "memory<S2SV_blank>exhausted" ) ) ; //<S2SV> yyresult = 2 ; //<S2SV> # endif //<S2SV> yyreturn : //<S2SV> if ( yychar != YYEMPTY ) //<S2SV> yydestruct ( "Cleanup:<S2SV_blank>discarding<S2SV_blank>lookahead" , //<S2SV> yytoken , & yylval ) ; //<S2SV> YYPOPSTACK ( yylen ) ; //<S2SV> YY_STACK_PRINT ( yyss , yyssp ) ; //<S2SV> while ( yyssp != yyss ) //<S2SV> { //<S2SV> yydestruct ( "Cleanup:<S2SV_blank>popping" , //<S2SV> yystos [ * yyssp ] , yyvsp ) ; //<S2SV> YYPOPSTACK ( 1 ) ; //<S2SV> } //<S2SV> # ifndef yyoverflow //<S2SV> if ( yyss != yyssa ) //<S2SV> YYSTACK_FREE ( yyss ) ; //<S2SV> # endif //<S2SV> # if YYERROR_VERBOSE //<S2SV> if ( yymsg != yymsgbuf ) //<S2SV> YYSTACK_FREE ( yymsg ) ; //<S2SV> # endif //<S2SV> return YYID ( yyresult ) ; //<S2SV> } //<S2SV> 