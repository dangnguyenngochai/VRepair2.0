static int save_new_data ( struct chfn_control * ctl ) //<S2SV> { //<S2SV> char * gecos ; //<S2SV> int len ; //<S2SV> len = xasprintf ( & gecos , "%s,%s,%s,%s,%s" , //<S2SV> ctl -> newf . full_name , //<S2SV> ctl -> newf . office , //<S2SV> ctl -> newf . office_phone , //<S2SV> ctl -> newf . home_phone , //<S2SV> ctl -> newf . other ) ; //<S2SV> if ( ! ctl -> newf . other ) { //<S2SV> while ( len > 0 && gecos [ len - 1 ] == ',' ) //<S2SV> len -- ; //<S2SV> gecos [ len ] = 0 ; //<S2SV> } //<S2SV> # ifdef HAVE_LIBUSER //<S2SV> if ( set_value_libuser ( "chfn" , ctl -> username , ctl -> pw -> pw_uid , //<S2SV> LU_GECOS , gecos ) < 0 ) { //<S2SV> # else //<S2SV> ctl -> pw -> pw_gecos = gecos ; //<S2SV> if ( setpwnam ( ctl -> pw ) < 0 ) { //<S2SV> warn ( "setpwnam<S2SV_blank>failed" ) ; //<S2SV> # endif //<S2SV> printf ( _ //<S2SV> ( "Finger<S2SV_blank>information<S2SV_blank>*NOT*<S2SV_blank>changed.<S2SV_blank><S2SV_blank>Try<S2SV_blank>again<S2SV_blank>later.\\n" ) ) ; //<S2SV> return - 1 ; //<S2SV> } //<S2SV> free ( gecos ) ; //<S2SV> printf ( _ ( "Finger<S2SV_blank>information<S2SV_blank>changed.\\n" ) ) ; //<S2SV> return 0 ; //<S2SV> } //<S2SV> 