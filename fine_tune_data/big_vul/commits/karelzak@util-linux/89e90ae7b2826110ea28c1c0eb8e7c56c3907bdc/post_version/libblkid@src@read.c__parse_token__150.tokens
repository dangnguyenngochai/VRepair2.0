static int parse_token ( char * * name , char * * value , char * * cp ) //<S2SV> { //<S2SV> char * end ; //<S2SV> if ( ! name || ! value || ! cp ) //<S2SV> return - BLKID_ERR_PARAM ; //<S2SV> if ( ! ( * value = strchr ( * cp , '=' ) ) ) //<S2SV> return 0 ; //<S2SV> * * value = '\\0' ; //<S2SV> * name = strip_line ( * cp ) ; //<S2SV> * value = skip_over_blank ( * value + 1 ) ; //<S2SV> if ( * * value == \'"\' ) { //<S2SV> char * p = end = * value + 1 ; //<S2SV> while ( * p ) { //<S2SV> if ( * p == '\\\\' ) { //<S2SV> p ++ ; //<S2SV> * end = * p ; //<S2SV> } else { //<S2SV> * end = * p ; //<S2SV> if ( * p == \'"\' ) //<S2SV> break ; //<S2SV> } //<S2SV> p ++ ; //<S2SV> end ++ ; //<S2SV> } //<S2SV> if ( * end != \'"\' ) { //<S2SV> DBG ( READ , ul_debug ( "unbalanced<S2SV_blank>quotes<S2SV_blank>at:<S2SV_blank>%s" , * value ) ) ; //<S2SV> * cp = * value ; //<S2SV> return - BLKID_ERR_CACHE ; //<S2SV> } //<S2SV> ( * value ) ++ ; //<S2SV> * end = '\\0' ; //<S2SV> end = ++ p ; //<S2SV> } else { //<S2SV> end = skip_over_word ( * value ) ; //<S2SV> if ( * end ) { //<S2SV> * end = '\\0' ; //<S2SV> end ++ ; //<S2SV> } //<S2SV> } //<S2SV> * cp = end ; //<S2SV> return 1 ; //<S2SV> } //<S2SV> 