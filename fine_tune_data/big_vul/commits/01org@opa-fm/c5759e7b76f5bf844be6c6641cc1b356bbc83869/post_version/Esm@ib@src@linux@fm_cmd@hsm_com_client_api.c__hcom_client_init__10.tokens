hsm_com_errno_t //<S2SV> hcom_client_init //<S2SV> ( //<S2SV> OUT p_hsm_com_client_hdl_t * p_hdl , //<S2SV> IN char * server_path , //<S2SV> IN char * client_path , //<S2SV> IN int max_data_len //<S2SV> ) //<S2SV> { //<S2SV> hsm_com_client_hdl_t * hdl = NULL ; //<S2SV> hsm_com_errno_t res = HSM_COM_OK ; //<S2SV> if ( ( strlen ( server_path ) > ( HSM_COM_SVR_MAX_PATH - 1 ) ) || //<S2SV> ( strlen ( server_path ) == 0 ) ) { //<S2SV> res = HSM_COM_PATH_ERR ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> if ( ( strlen ( client_path ) > ( HSM_COM_SVR_MAX_PATH - 1 ) ) || //<S2SV> ( strlen ( client_path ) == 0 ) ) { //<S2SV> res = HSM_COM_PATH_ERR ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> if ( ( hdl = calloc ( 1 , sizeof ( hsm_com_client_hdl_t ) ) ) == NULL ) //<S2SV> { //<S2SV> res = HSM_COM_NO_MEM ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> if ( ( hdl -> scr . scratch = malloc ( max_data_len ) ) == NULL ) //<S2SV> { //<S2SV> res = HSM_COM_NO_MEM ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> if ( ( hdl -> recv_buf = malloc ( max_data_len ) ) == NULL ) //<S2SV> { //<S2SV> res = HSM_COM_NO_MEM ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> if ( ( hdl -> send_buf = malloc ( max_data_len ) ) == NULL ) //<S2SV> { //<S2SV> res = HSM_COM_NO_MEM ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> hdl -> scr . scratch_fill = 0 ; //<S2SV> hdl -> scr . scratch_len = max_data_len ; //<S2SV> hdl -> buf_len = max_data_len ; //<S2SV> hdl -> trans_id = 1 ; //<S2SV> strcpy ( hdl -> s_path , server_path ) ; //<S2SV> strcpy ( hdl -> c_path , client_path ) ; //<S2SV> if ( mkstemp ( hdl -> c_path ) == - 1 ) //<S2SV> { //<S2SV> res = HSM_COM_PATH_ERR ; //<S2SV> goto cleanup ; //<S2SV> } //<S2SV> hdl -> client_state = HSM_COM_C_STATE_IN ; //<S2SV> * p_hdl = hdl ; //<S2SV> return res ; //<S2SV> cleanup : //<S2SV> if ( hdl ) //<S2SV> { //<S2SV> if ( hdl -> scr . scratch ) { //<S2SV> free ( hdl -> scr . scratch ) ; //<S2SV> } //<S2SV> if ( hdl -> recv_buf ) { //<S2SV> free ( hdl -> recv_buf ) ; //<S2SV> } //<S2SV> free ( hdl ) ; //<S2SV> } //<S2SV> return res ; //<S2SV> } //<S2SV> 