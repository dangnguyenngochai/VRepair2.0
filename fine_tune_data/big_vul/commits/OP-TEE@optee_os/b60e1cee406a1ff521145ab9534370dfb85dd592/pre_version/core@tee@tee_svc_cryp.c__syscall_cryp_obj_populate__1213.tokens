TEE_Result syscall_cryp_obj_populate ( unsigned long obj , //<S2SV> struct utee_attribute * usr_attrs , //<S2SV> unsigned long attr_count ) //<S2SV> { //<S2SV> TEE_Result res ; //<S2SV> struct tee_ta_session * sess ; //<S2SV> struct tee_obj * o ; //<S2SV> const struct tee_cryp_obj_type_props * type_props ; //<S2SV> TEE_Attribute * attrs = NULL ; //<S2SV> res = tee_ta_get_current_session ( & sess ) ; //<S2SV> if ( res != TEE_SUCCESS ) //<S2SV> return res ; //<S2SV> res = tee_obj_get ( to_user_ta_ctx ( sess -> ctx ) , //<S2SV> tee_svc_uref_to_vaddr ( obj ) , & o ) ; //<S2SV> if ( res != TEE_SUCCESS ) //<S2SV> return res ; //<S2SV> if ( ( o -> info . handleFlags & TEE_HANDLE_FLAG_PERSISTENT ) != 0 ) //<S2SV> return TEE_ERROR_BAD_PARAMETERS ; //<S2SV> if ( ( o -> info . handleFlags & TEE_HANDLE_FLAG_INITIALIZED ) != 0 ) //<S2SV> return TEE_ERROR_BAD_PARAMETERS ; //<S2SV> type_props = tee_svc_find_type_props ( o -> info . objectType ) ; //<S2SV> if ( ! type_props ) //<S2SV> return TEE_ERROR_NOT_IMPLEMENTED ; //<S2SV> attrs = malloc ( sizeof ( TEE_Attribute ) * attr_count ) ; //<S2SV> if ( ! attrs ) //<S2SV> return TEE_ERROR_OUT_OF_MEMORY ; //<S2SV> res = copy_in_attrs ( to_user_ta_ctx ( sess -> ctx ) , usr_attrs , attr_count , //<S2SV> attrs ) ; //<S2SV> if ( res != TEE_SUCCESS ) //<S2SV> goto out ; //<S2SV> res = tee_svc_cryp_check_attr ( ATTR_USAGE_POPULATE , type_props , //<S2SV> attrs , attr_count ) ; //<S2SV> if ( res != TEE_SUCCESS ) //<S2SV> goto out ; //<S2SV> res = tee_svc_cryp_obj_populate_type ( o , type_props , attrs , attr_count ) ; //<S2SV> if ( res == TEE_SUCCESS ) //<S2SV> o -> info . handleFlags |= TEE_HANDLE_FLAG_INITIALIZED ; //<S2SV> out : //<S2SV> free ( attrs ) ; //<S2SV> return res ; //<S2SV> } //<S2SV> 