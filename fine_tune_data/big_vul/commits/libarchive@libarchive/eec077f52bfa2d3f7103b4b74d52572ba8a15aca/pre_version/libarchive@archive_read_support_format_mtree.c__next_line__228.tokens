static ssize_t //<S2SV> next_line ( struct archive_read * a , //<S2SV> const char * * b , ssize_t * avail , ssize_t * ravail , ssize_t * nl ) //<S2SV> { //<S2SV> ssize_t len ; //<S2SV> int quit ; //<S2SV> quit = 0 ; //<S2SV> if ( * avail == 0 ) { //<S2SV> * nl = 0 ; //<S2SV> len = 0 ; //<S2SV> } else //<S2SV> len = get_line_size ( * b , * avail , nl ) ; //<S2SV> while ( * nl == 0 && len == * avail && ! quit ) { //<S2SV> ssize_t diff = * ravail - * avail ; //<S2SV> size_t nbytes_req = ( * ravail + 1023 ) & ~ 1023U ; //<S2SV> ssize_t tested ; //<S2SV> if ( nbytes_req < ( size_t ) * ravail + 160 ) //<S2SV> nbytes_req <<= 1 ; //<S2SV> * b = __archive_read_ahead ( a , nbytes_req , avail ) ; //<S2SV> if ( * b == NULL ) { //<S2SV> if ( * ravail >= * avail ) //<S2SV> return ( 0 ) ; //<S2SV> * b = __archive_read_ahead ( a , * avail , avail ) ; //<S2SV> quit = 1 ; //<S2SV> } //<S2SV> * ravail = * avail ; //<S2SV> * b += diff ; //<S2SV> * avail -= diff ; //<S2SV> tested = len ; //<S2SV> len = get_line_size ( * b , * avail , nl ) ; //<S2SV> if ( len >= 0 ) //<S2SV> len += tested ; //<S2SV> } //<S2SV> return ( len ) ; //<S2SV> } //<S2SV> 