static void print_maps ( struct pid_info_t * info ) //<S2SV> { //<S2SV> FILE * maps ; //<S2SV> size_t offset ; //<S2SV> char device [ 10 ] ; //<S2SV> long int inode ; //<S2SV> char file [ PATH_MAX ] ; //<S2SV> strlcat ( info -> path , "maps" , sizeof ( info -> path ) ) ; //<S2SV> maps = fopen ( info -> path , "r" ) ; //<S2SV> if ( ! maps ) //<S2SV> goto out ; //<S2SV> while ( fscanf ( maps , "%*x-%*x<S2SV_blank>%*s<S2SV_blank>%zx<S2SV_blank>%s<S2SV_blank>%ld<S2SV_blank>%s\\n" , & offset , device , & inode , //<S2SV> file ) == 4 ) { //<S2SV> if ( inode == 0 || ! strcmp ( device , "00:00" ) ) //<S2SV> continue ; //<S2SV> printf ( "%-9s<S2SV_blank>%5d<S2SV_blank>%10s<S2SV_blank>%4s<S2SV_blank>%9s<S2SV_blank>%18s<S2SV_blank>%9zd<S2SV_blank>%10ld<S2SV_blank>%s\\n" , //<S2SV> info -> cmdline , info -> pid , info -> user , "mem" , //<S2SV> "???" , device , offset , inode , file ) ; //<S2SV> } //<S2SV> fclose ( maps ) ; //<S2SV> out : //<S2SV> info -> path [ info -> parent_length ] = '\\0' ; //<S2SV> } //<S2SV> 